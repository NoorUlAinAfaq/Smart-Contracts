{
	"id": "a7229113fdf51a15981968f0adccc134",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"shoaib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n\r\ncontract CYBCC is ERC20 {\r\n\r\n    mapping(address => uint256) private _rOwned;\r\n\r\n    mapping(address => uint256) private _tOwned;\r\n\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n\r\n    mapping(address => bool) public isWhitelisted;\r\n\r\n\r\n\r\n    mapping(address => bool) private _isExcluded;\r\n\r\n    address[] private _excluded;\r\n\r\n\r\n\r\n    uint8 private _decimals;\r\n\r\n    address private _owner = msg.sender;\r\n\r\n    uint256 private constant MAX = ~uint256(0);\r\n\r\n    uint256 private _tTotal;\r\n\r\n    uint256 private _rTotal;\r\n\r\n    uint256 private _tFeeTotal = 0;\r\n\r\n\r\n\r\n    uint256 private _reflectionFee;\r\n\r\n    uint256 private _previousReflectionFee;\r\n\r\n\r\n\r\n    uint256 private _taxFee;\r\n\r\n    uint256 private _previousTaxFee;\r\n\r\n\r\n\r\n    address private _marketingAccount;\r\n\r\n    address private _developmentAccount;\r\n\r\n\r\n\r\n    address public pairAddress;\r\n\r\n\r\n\r\n    uint256 private maxWalletAmount;\r\n\r\n\r\n\r\n    uint256 public launchBlock;\r\n\r\n    bool public tradingOpen = false;\r\n\r\n\r\n\r\n    constructor() ERC20(\"abc coin\", \"CYBCC\") {\r\n\r\n        _decimals = 18;\r\n\r\n        _tTotal = 1000000000 * 10**uint256(_decimals);\r\n\r\n        _rTotal = (MAX - (MAX % _tTotal));\r\n\r\n\r\n\r\n        _reflectionFee = 2;\r\n\r\n        _previousReflectionFee = _reflectionFee;\r\n\r\n\r\n\r\n        _taxFee = 1;\r\n\r\n        _previousTaxFee = _taxFee;\r\n\r\n\r\n\r\n        _marketingAccount = _owner;\r\n\r\n        _developmentAccount = _owner;\r\n\r\n\r\n\r\n        maxWalletAmount = 10000000 * 10**uint256(_decimals);\r\n\r\n\r\n\r\n        //exclude owner, feeaccount and this contract from fee\r\n\r\n        _isExcludedFromFee[owner()] = true;\r\n\r\n        _isExcludedFromFee[_marketingAccount] = true;\r\n\r\n        _isExcludedFromFee[_developmentAccount] = true;\r\n\r\n        _isExcludedFromFee[address(this)] = true;\r\n\r\n        isWhitelisted[owner()] = true;\r\n\r\n        isWhitelisted[_marketingAccount] = true;\r\n\r\n        isWhitelisted[_developmentAccount] = true;\r\n\r\n        _rOwned[_owner] = _rTotal;\r\n\r\n        _mint(msg.sender, _rTotal);\r\n\r\n    }\r\n\r\n\r\n\r\n    receive() external payable {}\r\n\r\n\r\n\r\n    function owner() public view virtual returns (address) {\r\n\r\n        return _owner;\r\n\r\n    }\r\n\r\n\r\n\r\n    modifier onlyOwner() {\r\n\r\n        if (owner() == msg.sender) _;\r\n\r\n    }\r\n\r\n\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n\r\n        return _decimals;\r\n\r\n    }\r\n\r\n\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n\r\n        return _tTotal;\r\n\r\n    }\r\n\r\n\r\n\r\n    function reflectionFee() public view returns (uint256) {\r\n\r\n        return _reflectionFee;\r\n\r\n    }\r\n\r\n\r\n\r\n    function getTaxFee() public view returns (uint256) {\r\n\r\n        return _taxFee;\r\n\r\n    }\r\n\r\n\r\n\r\n    function getMarketingAccount() public view returns (address) {\r\n\r\n        return _marketingAccount;\r\n\r\n    }\r\n\r\n\r\n\r\n    function getDevelopmentAccount() public view returns (address) {\r\n\r\n        return _developmentAccount;\r\n\r\n    }\r\n\r\n\r\n\r\n    function isExcludedFromFee(address account) public view returns (bool) {\r\n\r\n        return _isExcludedFromFee[account];\r\n\r\n    }\r\n\r\n\r\n\r\n    function balanceOf(address sender)\r\n\r\n        public\r\n\r\n        view\r\n\r\n        virtual\r\n\r\n        override\r\n\r\n        returns (uint256)\r\n\r\n    {\r\n\r\n        if (_isExcluded[sender]) {\r\n\r\n            return _tOwned[sender];\r\n\r\n        }\r\n\r\n        return tokenFromReflection(_rOwned[sender]);\r\n\r\n    }\r\n\r\n\r\n\r\n    function isExcluded(address account) public view returns (bool) {\r\n\r\n        return _isExcluded[account];\r\n\r\n    }\r\n\r\n\r\n\r\n    function totalFeesRedistributed() public view returns (uint256) {\r\n\r\n        return _tFeeTotal;\r\n\r\n    }\r\n\r\n\r\n\r\n    function excludeFromFee(address account) public onlyOwner {\r\n\r\n        _isExcludedFromFee[account] = true;\r\n\r\n    }\r\n\r\n\r\n\r\n    function changeMarketingAccount(address newFeeAccount) public onlyOwner {\r\n\r\n        require(\r\n\r\n            newFeeAccount != address(0),\r\n\r\n            \"zero address can not be the FeeAccount\"\r\n\r\n        );\r\n\r\n        _marketingAccount = newFeeAccount;\r\n\r\n    }\r\n\r\n\r\n\r\n    function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {\r\n\r\n        require(\r\n\r\n            newFeeAccount != address(0),\r\n\r\n            \"zero address can not be the FeeAccount\"\r\n\r\n        );\r\n\r\n        _developmentAccount = newFeeAccount;\r\n\r\n    }\r\n\r\n\r\n\r\n    function changePairAddress(address _pairAddress) public onlyOwner {\r\n\r\n        pairAddress = _pairAddress;\r\n\r\n        isWhitelisted[pairAddress] = true;\r\n\r\n    }\r\n\r\n\r\n\r\n    function reflect(uint256 tAmount) public {\r\n\r\n        address sender = _msgSender();\r\n\r\n        require(\r\n\r\n            !_isExcluded[sender],\r\n\r\n            \"Excluded addresses cannot call this function\"\r\n\r\n        );\r\n\r\n        (uint256 rAmount, , , ) = _getTransferValues(tAmount);\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n\r\n        _rTotal = _rTotal - rAmount;\r\n\r\n        _tFeeTotal = _tFeeTotal + tAmount;\r\n\r\n    }\r\n\r\n\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\r\n\r\n        public\r\n\r\n        view\r\n\r\n        returns (uint256)\r\n\r\n    {\r\n\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n\r\n        if (!deductTransferFee) {\r\n\r\n            (uint256 rAmount, , , ) = _getTransferValues(tAmount);\r\n\r\n            return rAmount;\r\n\r\n        } else {\r\n\r\n            (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount);\r\n\r\n            return rTransferAmount;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function tokenFromReflection(uint256 rAmount)\r\n\r\n        private\r\n\r\n        view\r\n\r\n        returns (uint256)\r\n\r\n    {\r\n\r\n        require(\r\n\r\n            rAmount <= _rTotal,\r\n\r\n            \"Amount must be less than total reflections\"\r\n\r\n        );\r\n\r\n        uint256 currentRate = _getRate();\r\n\r\n        return rAmount / currentRate;\r\n\r\n    }\r\n\r\n\r\n\r\n    function excludeAccountFromReward(address account) public onlyOwner {\r\n\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n\r\n        if (_rOwned[account] > 0) {\r\n\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n\r\n        }\r\n\r\n        _isExcluded[account] = true;\r\n\r\n        _excluded.push(account);\r\n\r\n    }\r\n\r\n\r\n\r\n    function includeAccountinReward(address account) public onlyOwner {\r\n\r\n        require(_isExcluded[account], \"Account is already included\");\r\n\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n\r\n            if (_excluded[i] == account) {\r\n\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n\r\n                _tOwned[account] = 0;\r\n\r\n                _isExcluded[account] = false;\r\n\r\n                _excluded.pop();\r\n\r\n                break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function isWhitelistedAddress(address account) public view returns (bool) {\r\n\r\n        return isWhitelisted[account];\r\n\r\n    }\r\n\r\n\r\n\r\n    function whitelistedAddress(address account) public onlyOwner {\r\n\r\n        require(!isWhitelisted[account], \"Address is already whitelisted\");\r\n\r\n        isWhitelisted[account] = true;\r\n\r\n    }\r\n\r\n\r\n\r\n    function openTrading() external onlyOwner {\r\n\r\n        tradingOpen = true;\r\n\r\n        launchBlock = block.number;\r\n\r\n    }\r\n\r\n\r\n\r\n    modifier launchProtection(address from, address to) {\r\n\r\n        if (!tradingOpen) {\r\n\r\n            require(isWhitelisted[from], \"Trading not yet enabled\");\r\n\r\n        } else if (block.number <= launchBlock + 3) {\r\n\r\n            // Allow only whitelisted addresses for 3 blocks\r\n\r\n            require(isWhitelisted[to], \"Launch protection: not whitelisted\");\r\n\r\n        }\r\n\r\n        _;\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transfer(\r\n\r\n        address sender,\r\n\r\n        address recipient,\r\n\r\n        uint256 amount\r\n\r\n    ) internal virtual override launchProtection(sender, recipient) {\r\n\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        uint256 senderBalance = balanceOf(sender);\r\n\r\n        require(\r\n\r\n            senderBalance >= amount,\r\n\r\n            \"ERC20: transfer amount exceeds balance\"\r\n\r\n        );\r\n\r\n\r\n\r\n        if (!isExcludedFromFee(recipient)) {\r\n\r\n            require(\r\n\r\n                balanceOf(recipient) + amount <= maxWalletAmount,\r\n\r\n                \"Whale detected!!\"\r\n\r\n            );\r\n\r\n        }\r\n\r\n        bool takeFee;\r\n\r\n\r\n\r\n        if (sender == pairAddress || recipient == pairAddress) {\r\n\r\n            takeFee = true;\r\n\r\n        }\r\n\r\n\r\n\r\n        if(isExcludedFromFee(sender)){takeFee = false;}\r\n\r\n\r\n\r\n        _tokenTransfer(sender, recipient, amount, takeFee);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _tokenTransfer(\r\n\r\n        address from,\r\n\r\n        address to,\r\n\r\n        uint256 value,\r\n\r\n        bool takeFee\r\n\r\n    ) private {\r\n\r\n        if (!takeFee) {\r\n\r\n            removeAllFee();\r\n\r\n        }\r\n\r\n\r\n\r\n        if (_isExcluded[from] && !_isExcluded[to]) {\r\n\r\n            _transferFromExcluded(from, to, value);\r\n\r\n        } else if (!_isExcluded[from] && _isExcluded[to]) {\r\n\r\n            _transferToExcluded(from, to, value);\r\n\r\n        } else if (!_isExcluded[from] && !_isExcluded[to]) {\r\n\r\n            _transferStandard(from, to, value);\r\n\r\n        } else if (_isExcluded[from] && _isExcluded[to]) {\r\n\r\n            _transferBothExcluded(from, to, value);\r\n\r\n        } else {\r\n\r\n            _transferStandard(from, to, value);\r\n\r\n        }\r\n\r\n\r\n\r\n        if (!takeFee) {\r\n\r\n            restoreAllFee();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function removeAllFee() private {\r\n\r\n        if (_reflectionFee == 0 && _taxFee == 0) return;\r\n\r\n\r\n\r\n        _previousReflectionFee = _reflectionFee;\r\n\r\n        _previousTaxFee = _taxFee;\r\n\r\n\r\n\r\n        _reflectionFee = 0;\r\n\r\n        _taxFee = 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    function restoreAllFee() private {\r\n\r\n        _reflectionFee = _previousReflectionFee;\r\n\r\n        _taxFee = _previousTaxFee;\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transferStandard(\r\n\r\n        address sender,\r\n\r\n        address recipient,\r\n\r\n        uint256 tAmount\r\n\r\n    ) private {\r\n\r\n        (\r\n\r\n            uint256 rAmount,\r\n\r\n            uint256 rTransferAmount,\r\n\r\n            uint256 tTransferAmount,\r\n\r\n            uint256 currentRate\r\n\r\n        ) = _getTransferValues(tAmount);\r\n\r\n\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transferToExcluded(\r\n\r\n        address sender,\r\n\r\n        address recipient,\r\n\r\n        uint256 tAmount\r\n\r\n    ) private {\r\n\r\n        (\r\n\r\n            uint256 rAmount,\r\n\r\n            uint256 rTransferAmount,\r\n\r\n            uint256 tTransferAmount,\r\n\r\n            uint256 currentRate\r\n\r\n        ) = _getTransferValues(tAmount);\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transferFromExcluded(\r\n\r\n        address sender,\r\n\r\n        address recipient,\r\n\r\n        uint256 tAmount\r\n\r\n    ) private {\r\n\r\n        (\r\n\r\n            uint256 rAmount,\r\n\r\n            uint256 rTransferAmount,\r\n\r\n            uint256 tTransferAmount,\r\n\r\n            uint256 currentRate\r\n\r\n        ) = _getTransferValues(tAmount);\r\n\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transferBothExcluded(\r\n\r\n        address sender,\r\n\r\n        address recipient,\r\n\r\n        uint256 tAmount\r\n\r\n    ) private {\r\n\r\n        (\r\n\r\n            uint256 rAmount,\r\n\r\n            uint256 rTransferAmount,\r\n\r\n            uint256 tTransferAmount,\r\n\r\n            uint256 currentRate\r\n\r\n        ) = _getTransferValues(tAmount);\r\n\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _getCompleteTaxValue(uint256 tAmount)\r\n\r\n        private\r\n\r\n        view\r\n\r\n        returns (uint256)\r\n\r\n    {\r\n\r\n        uint256 allTaxes = _reflectionFee + _taxFee;\r\n\r\n        uint256 taxValue = (tAmount * allTaxes) / 100;\r\n\r\n        return taxValue;\r\n\r\n    }\r\n\r\n\r\n\r\n    function _getTransferValues(uint256 tAmount)\r\n\r\n        private\r\n\r\n        view\r\n\r\n        returns (\r\n\r\n            uint256,\r\n\r\n            uint256,\r\n\r\n            uint256,\r\n\r\n            uint256\r\n\r\n        )\r\n\r\n    {\r\n\r\n        uint256 taxValue = _getCompleteTaxValue(tAmount);\r\n\r\n        uint256 tTransferAmount = tAmount - taxValue;\r\n\r\n        uint256 currentRate = _getRate();\r\n\r\n        uint256 rTransferAmount = tTransferAmount * currentRate;\r\n\r\n        uint256 rAmount = tAmount * currentRate;\r\n\r\n        return (rAmount, rTransferAmount, tTransferAmount, currentRate);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _reflectFee(uint256 tAmount, uint256 currentRate) private {\r\n\r\n        uint256 tFee = (tAmount * _reflectionFee) / 100;\r\n\r\n        uint256 rFee = tFee * currentRate;\r\n\r\n\r\n\r\n        _rTotal = _rTotal - rFee;\r\n\r\n        _tFeeTotal = _tFeeTotal + tFee;\r\n\r\n    }\r\n\r\n\r\n\r\n    function _getRate() private view returns (uint256) {\r\n\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n\r\n        return rSupply / tSupply;\r\n\r\n    }\r\n\r\n\r\n\r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n\r\n        uint256 rSupply = _rTotal;\r\n\r\n        uint256 tSupply = _tTotal;\r\n\r\n\r\n\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n\r\n            if (\r\n\r\n                _rOwned[_excluded[i]] > rSupply ||\r\n\r\n                _tOwned[_excluded[i]] > tSupply\r\n\r\n            ) {\r\n\r\n                return (_rTotal, _tTotal);\r\n\r\n            }\r\n\r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n\r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n\r\n        }\r\n\r\n\r\n\r\n        if (rSupply < _rTotal / _tTotal) {\r\n\r\n            return (_rTotal, _tTotal);\r\n\r\n        }\r\n\r\n\r\n\r\n        return (rSupply, tSupply);\r\n\r\n    }\r\n\r\n\r\n\r\n    function taxFeeTransfer(\r\n\r\n        address sender,\r\n\r\n        uint256 tAmount,\r\n\r\n        uint256 currentRate\r\n\r\n    ) private {\r\n\r\n        uint256 tTaxFee = (tAmount * _taxFee) / 100;\r\n\r\n        if (tTaxFee > 0) {\r\n\r\n            uint256 rTaxFee = (tTaxFee * currentRate) / 2;\r\n\r\n            _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee;\r\n\r\n            _rOwned[_developmentAccount] =\r\n\r\n                _rOwned[_developmentAccount] +\r\n\r\n                rTaxFee;\r\n\r\n            emit Transfer(sender, _marketingAccount, tTaxFee);\r\n\r\n            emit Transfer(sender, _developmentAccount, tTaxFee);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoaib.sol": {
				"CYBCC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeDevelopmentAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeMarketingAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pairAddress",
									"type": "address"
								}
							],
							"name": "changePairAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeAccountFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDevelopmentAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketingAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeAccountinReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelistedAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "reflect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reflectionFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFeesRedistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "whitelistedAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shoaib.sol\":143:15583  contract CYBCC is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"shoaib.sol\":523:558  address private _owner = msg.sender */\n  0x0b\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"shoaib.sol\":548:558  msg.sender */\n  caller\n    /* \"shoaib.sol\":523:558  address private _owner = msg.sender */\n  0x0100\n  mul\n  or\n  swap1\n  sstore\n  0x00\n    /* \"shoaib.sol\":682:712  uint256 private _tFeeTotal = 0 */\n  0x0e\n  sstore\n    /* \"shoaib.sol\":1099:1130  bool public tradingOpen = false */\n  0x18\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"shoaib.sol\":1143:2141  constructor() ERC20(\"abc coin\", \"CYBCC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x30b1319031b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4359424343)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"shoaib.sol\":1197:1206  _decimals */\n  0x0b\n    /* \"shoaib.sol\":1197:1211  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"shoaib.sol\":1209:1211  18 */\n  0x12\n    /* \"shoaib.sol\":1197:1211  _decimals = 18 */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"shoaib.sol\":1247:1269  10**uint256(_decimals) */\n  tag_9\n  swap2\n  pop\n    /* \"shoaib.sol\":1247:1249  10 */\n  0x0a\n    /* \"shoaib.sol\":1247:1269  10**uint256(_decimals) */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"shoaib.sol\":1234:1269  1000000000 * 10**uint256(_decimals) */\n  tag_11\n  swap1\n    /* \"shoaib.sol\":1234:1244  1000000000 */\n  0x3b9aca00\n    /* \"shoaib.sol\":1234:1269  1000000000 * 10**uint256(_decimals) */\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"shoaib.sol\":1224:1231  _tTotal */\n  0x0c\n    /* \"shoaib.sol\":1224:1269  _tTotal = 1000000000 * 10**uint256(_decimals) */\n  dup2\n  swap1\n  sstore\n    /* \"shoaib.sol\":1300:1313  MAX % _tTotal */\n  tag_13\n  swap1\n  not(0x00)\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"shoaib.sol\":1293:1314  MAX - (MAX % _tTotal) */\n  tag_15\n  swap1\n  not(0x00)\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"shoaib.sol\":1282:1289  _rTotal */\n  0x0d\n    /* \"shoaib.sol\":1282:1315  _rTotal = (MAX - (MAX % _tTotal)) */\n  sstore\n    /* \"shoaib.sol\":1349:1350  2 */\n  0x02\n    /* \"shoaib.sol\":1332:1346  _reflectionFee */\n  0x0f\n    /* \"shoaib.sol\":1332:1350  _reflectionFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"shoaib.sol\":1363:1385  _previousReflectionFee */\n  0x10\n    /* \"shoaib.sol\":1363:1402  _previousReflectionFee = _reflectionFee */\n  sstore\n    /* \"shoaib.sol\":1429:1430  1 */\n  0x01\n    /* \"shoaib.sol\":1419:1426  _taxFee */\n  0x11\n    /* \"shoaib.sol\":1419:1430  _taxFee = 1 */\n  dup2\n  swap1\n  sstore\n    /* \"shoaib.sol\":1443:1458  _previousTaxFee */\n  0x12\n    /* \"shoaib.sol\":1443:1468  _previousTaxFee = _taxFee */\n  sstore\n    /* \"shoaib.sol\":1505:1511  _owner */\n  sload(0x0b)\n    /* \"shoaib.sol\":1485:1502  _marketingAccount */\n  0x13\n    /* \"shoaib.sol\":1485:1511  _marketingAccount = _owner */\n  dup1\n  sload\n    /* \"shoaib.sol\":1505:1511  _owner */\n  0x0100\n  dup4\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"shoaib.sol\":1485:1511  _marketingAccount = _owner */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"shoaib.sol\":1524:1543  _developmentAccount */\n  0x14\n    /* \"shoaib.sol\":1524:1552  _developmentAccount = _owner */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"shoaib.sol\":1598:1620  10**uint256(_decimals) */\n  tag_17\n  swap1\n    /* \"shoaib.sol\":1610:1619  _decimals */\n  0xff\n  and\n    /* \"shoaib.sol\":1598:1600  10 */\n  0x0a\n    /* \"shoaib.sol\":1598:1620  10**uint256(_decimals) */\n  tag_10\n  jump\t// in\ntag_17:\n    /* \"shoaib.sol\":1587:1620  10000000 * 10**uint256(_decimals) */\n  tag_18\n  swap1\n    /* \"shoaib.sol\":1587:1595  10000000 */\n  0x989680\n    /* \"shoaib.sol\":1587:1620  10000000 * 10**uint256(_decimals) */\n  tag_12\n  jump\t// in\ntag_18:\n    /* \"shoaib.sol\":1569:1584  maxWalletAmount */\n  0x16\n    /* \"shoaib.sol\":1569:1620  maxWalletAmount = 10000000 * 10**uint256(_decimals) */\n  sstore\n    /* \"shoaib.sol\":1733:1737  true */\n  0x01\n    /* \"shoaib.sol\":1703:1721  _isExcludedFromFee */\n  0x07\n    /* \"shoaib.sol\":1703:1730  _isExcludedFromFee[owner()] */\n  0x00\n    /* \"shoaib.sol\":1722:1729  owner() */\n  tag_19\n    /* \"shoaib.sol\":2269:2275  _owner */\n  sload(0x0b)\n  0x0100\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"shoaib.sol\":2194:2285  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"shoaib.sol\":1722:1729  owner() */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"shoaib.sol\":1703:1730  _isExcludedFromFee[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"shoaib.sol\":1703:1737  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"shoaib.sol\":1769:1786  _marketingAccount */\n  sload(0x13)\n  dup3\n  and\n    /* \"shoaib.sol\":1750:1787  _isExcludedFromFee[_marketingAccount] */\n  dup2\n  mstore\n    /* \"shoaib.sol\":1750:1768  _isExcludedFromFee */\n  0x07\n    /* \"shoaib.sol\":1750:1787  _isExcludedFromFee[_marketingAccount] */\n  swap1\n  swap4\n  mstore\n  dup2\n  dup4\n  keccak256\n    /* \"shoaib.sol\":1750:1794  _isExcludedFromFee[_marketingAccount] = true */\n  dup1\n  sload\n  dup6\n  and\n    /* \"shoaib.sol\":1703:1737  _isExcludedFromFee[owner()] = true */\n  0x01\n    /* \"shoaib.sol\":1750:1794  _isExcludedFromFee[_marketingAccount] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"shoaib.sol\":1826:1845  _developmentAccount */\n  sload(0x14)\n  swap1\n  swap2\n  and\n    /* \"shoaib.sol\":1807:1846  _isExcludedFromFee[_developmentAccount] */\n  dup4\n  mstore\n  dup2\n  dup4\n  keccak256\n    /* \"shoaib.sol\":1807:1853  _isExcludedFromFee[_developmentAccount] = true */\n  dup1\n  sload\n  dup6\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"shoaib.sol\":1893:1897  this */\n  address\n    /* \"shoaib.sol\":1866:1899  _isExcludedFromFee[address(this)] */\n  dup4\n  mstore\n  swap1\n  dup3\n  keccak256\n    /* \"shoaib.sol\":1866:1906  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"shoaib.sol\":1919:1932  isWhitelisted */\n  0x08\n  swap1\n    /* \"shoaib.sol\":1933:1940  owner() */\n  tag_21\n    /* \"shoaib.sol\":2269:2275  _owner */\n  sload(0x0b)\n  0x0100\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"shoaib.sol\":2194:2285  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"shoaib.sol\":1933:1940  owner() */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"shoaib.sol\":1919:1941  isWhitelisted[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"shoaib.sol\":1919:1948  isWhitelisted[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"shoaib.sol\":1975:1992  _marketingAccount */\n  sload(0x13)\n  dup3\n  and\n    /* \"shoaib.sol\":1961:1993  isWhitelisted[_marketingAccount] */\n  dup2\n  mstore\n    /* \"shoaib.sol\":1961:1974  isWhitelisted */\n  0x08\n    /* \"shoaib.sol\":1961:1993  isWhitelisted[_marketingAccount] */\n  dup5\n  mstore\n  dup3\n  dup2\n  keccak256\n    /* \"shoaib.sol\":1961:2000  isWhitelisted[_marketingAccount] = true */\n  dup1\n  sload\n  dup7\n  and\n    /* \"shoaib.sol\":1919:1948  isWhitelisted[owner()] = true */\n  0x01\n    /* \"shoaib.sol\":1961:2000  isWhitelisted[_marketingAccount] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"shoaib.sol\":2027:2046  _developmentAccount */\n  sload(0x14)\n  dup4\n  and\n    /* \"shoaib.sol\":2013:2047  isWhitelisted[_developmentAccount] */\n  dup3\n  mstore\n  dup4\n  dup3\n  keccak256\n    /* \"shoaib.sol\":2013:2054  isWhitelisted[_developmentAccount] = true */\n  dup1\n  sload\n  swap1\n  swap7\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"shoaib.sol\":2085:2092  _rTotal */\n  sload(0x0d)\n    /* \"shoaib.sol\":2075:2081  _owner */\n  sload(0x0b)\n    /* \"shoaib.sol\":1919:1948  isWhitelisted[owner()] = true */\n  0x0100\n    /* \"shoaib.sol\":2075:2081  _owner */\n  swap1\n  div\n  swap1\n  swap2\n  and\n    /* \"shoaib.sol\":2067:2082  _rOwned[_owner] */\n  dup5\n  mstore\n    /* \"shoaib.sol\":2067:2074  _rOwned */\n  0x05\n    /* \"shoaib.sol\":2067:2082  _rOwned[_owner] */\n  swap1\n  swap3\n  mstore\n  swap1\n  swap2\n  keccak256\n    /* \"shoaib.sol\":2067:2092  _rOwned[_owner] = _rTotal */\n  dup2\n  swap1\n  sstore\n    /* \"shoaib.sol\":2105:2131  _mint(msg.sender, _rTotal) */\n  tag_22\n  swap1\n    /* \"shoaib.sol\":2111:2121  msg.sender */\n  caller\n  swap1\n    /* \"shoaib.sol\":2105:2110  _mint */\n  tag_23\n    /* \"shoaib.sol\":2105:2131  _mint(msg.sender, _rTotal) */\n  jump\t// in\ntag_22:\n    /* \"shoaib.sol\":143:15583  contract CYBCC is ERC20 {... */\n  jump(tag_52)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7517:7538  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7590:7591  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4876:4927   */\n  mstore\n    /* \"#utility.yul\":4849:4867   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7629:7630  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7633:7640  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7642:7647  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7620  _update */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6104  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6238:6243  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6234  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6243  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_36\n  swap1\n  pop\n  jump\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6274:6293  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6329:6348  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5288:5320   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5270:5321   */\n  mstore\n    /* \"#utility.yul\":5337:5355   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5330:5364   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5380:5398   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5373:5407   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5243:5261   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_28\n    /* \"#utility.yul\":5068:5413   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6569  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6578:6597  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6597  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6636:6652  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6811  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6820  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7019  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7032  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7087:7089  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7081:7085  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7096  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n    /* \"#utility.yul\":5564:5589   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5552:5554   */\n  0x20\n    /* \"#utility.yul\":5537:5555   */\n  add\n  swap1\n    /* \"#utility.yul\":5418:5595   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_44:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_45:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_55:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_56:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_47:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_60:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_61:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_61)\ntag_63:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_59:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_67\n  tag_44\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1555:1652   */\n  tag_68\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_69\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_45\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_47\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_72:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_63)\n    /* \"#utility.yul\":1744:2393   */\ntag_71:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_75:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_78:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2782   */\ntag_49:\n    /* \"#utility.yul\":2716:2726   */\n  0x4e487b71\n    /* \"#utility.yul\":2711:2714   */\n  0xe0\n    /* \"#utility.yul\":2707:2727   */\n  shl\n    /* \"#utility.yul\":2704:2705   */\n  0x00\n    /* \"#utility.yul\":2697:2728   */\n  mstore\n    /* \"#utility.yul\":2747:2751   */\n  0x11\n    /* \"#utility.yul\":2744:2745   */\n  0x04\n    /* \"#utility.yul\":2737:2752   */\n  mstore\n    /* \"#utility.yul\":2771:2775   */\n  0x24\n    /* \"#utility.yul\":2768:2769   */\n  0x00\n    /* \"#utility.yul\":2761:2776   */\n  revert\n    /* \"#utility.yul\":2787:3162   */\ntag_50:\n    /* \"#utility.yul\":2875:2876   */\n  0x01\n    /* \"#utility.yul\":2893:2898   */\n  dup2\n    /* \"#utility.yul\":2907:3156   */\ntag_81:\n    /* \"#utility.yul\":2928:2929   */\n  0x01\n    /* \"#utility.yul\":2918:2926   */\n  dup5\n    /* \"#utility.yul\":2915:2930   */\n  gt\n    /* \"#utility.yul\":2907:3156   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2978:2982   */\n  dup1\n    /* \"#utility.yul\":2973:2976   */\n  dup6\n    /* \"#utility.yul\":2969:2983   */\n  div\n    /* \"#utility.yul\":2963:2967   */\n  dup2\n    /* \"#utility.yul\":2960:2984   */\n  gt\n    /* \"#utility.yul\":2957:3007   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2987:3005   */\n  tag_85\n  tag_49\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3037:3038   */\n  0x01\n    /* \"#utility.yul\":3027:3035   */\n  dup5\n    /* \"#utility.yul\":3023:3039   */\n  and\n    /* \"#utility.yul\":3020:3069   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3051:3067   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":3020:3069   */\ntag_86:\n    /* \"#utility.yul\":3134:3135   */\n  0x01\n    /* \"#utility.yul\":3130:3146   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":3090:3105   */\n  dup1\n  mul\n    /* \"#utility.yul\":2907:3156   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":2787:3162   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3167:4069   */\ntag_51:\n    /* \"#utility.yul\":3216:3221   */\n  0x00\n    /* \"#utility.yul\":3246:3254   */\n  dup3\n    /* \"#utility.yul\":3236:3316   */\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3287:3288   */\n  0x01\n    /* \"#utility.yul\":3301:3306   */\n  jump(tag_87)\n    /* \"#utility.yul\":3236:3316   */\ntag_88:\n    /* \"#utility.yul\":3335:3339   */\n  dup2\n    /* \"#utility.yul\":3325:3401   */\n  tag_89\n  jumpi\n  pop\n    /* \"#utility.yul\":3372:3373   */\n  0x00\n    /* \"#utility.yul\":3386:3391   */\n  jump(tag_87)\n    /* \"#utility.yul\":3325:3401   */\ntag_89:\n    /* \"#utility.yul\":3417:3421   */\n  dup2\n    /* \"#utility.yul\":3435:3436   */\n  0x01\n    /* \"#utility.yul\":3430:3489   */\n  dup2\n  eq\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3503:3504   */\n  0x02\n    /* \"#utility.yul\":3498:3672   */\n  dup2\n  eq\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3410:3672   */\n  jump(tag_90)\n    /* \"#utility.yul\":3430:3489   */\ntag_91:\n    /* \"#utility.yul\":3460:3461   */\n  0x01\n    /* \"#utility.yul\":3451:3461   */\n  swap2\n  pop\n    /* \"#utility.yul\":3474:3479   */\n  pop\n  jump(tag_87)\n    /* \"#utility.yul\":3498:3672   */\ntag_92:\n    /* \"#utility.yul\":3535:3538   */\n  0xff\n    /* \"#utility.yul\":3525:3533   */\n  dup5\n    /* \"#utility.yul\":3522:3539   */\n  gt\n    /* \"#utility.yul\":3519:3562   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3542:3560   */\n  tag_94\n  tag_49\n  jump\t// in\ntag_94:\n  pop\n  pop\n    /* \"#utility.yul\":3598:3599   */\n  0x01\n    /* \"#utility.yul\":3584:3600   */\n  dup3\n  shl\n    /* \"#utility.yul\":3657:3662   */\n  jump(tag_87)\n    /* \"#utility.yul\":3410:3672   */\ntag_90:\n  pop\n    /* \"#utility.yul\":3756:3758   */\n  0x20\n    /* \"#utility.yul\":3746:3754   */\n  dup4\n    /* \"#utility.yul\":3743:3759   */\n  lt\n    /* \"#utility.yul\":3737:3740   */\n  0x0133\n    /* \"#utility.yul\":3731:3735   */\n  dup4\n    /* \"#utility.yul\":3728:3741   */\n  lt\n    /* \"#utility.yul\":3724:3760   */\n  and\n    /* \"#utility.yul\":3718:3720   */\n  0x4e\n    /* \"#utility.yul\":3708:3716   */\n  dup5\n    /* \"#utility.yul\":3705:3721   */\n  lt\n    /* \"#utility.yul\":3700:3702   */\n  0x0b\n    /* \"#utility.yul\":3694:3698   */\n  dup5\n    /* \"#utility.yul\":3691:3703   */\n  lt\n    /* \"#utility.yul\":3687:3722   */\n  and\n    /* \"#utility.yul\":3684:3761   */\n  or\n    /* \"#utility.yul\":3681:3884   */\n  iszero\n  tag_95\n  jumpi\n  pop\n    /* \"#utility.yul\":3793:3812   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3869:3874   */\n  jump(tag_87)\n    /* \"#utility.yul\":3681:3884   */\ntag_95:\n    /* \"#utility.yul\":3916:3958   */\n  tag_96\n  not(0x00)\n    /* \"#utility.yul\":3941:3949   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3916:3958   */\n  tag_50\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3994:4000   */\n  dup1\n    /* \"#utility.yul\":3990:3991   */\n  0x00\n    /* \"#utility.yul\":3986:3992   */\n  not\n    /* \"#utility.yul\":3982:4001   */\n  div\n    /* \"#utility.yul\":3973:3980   */\n  dup3\n    /* \"#utility.yul\":3970:4002   */\n  gt\n    /* \"#utility.yul\":3967:4025   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4005:4023   */\n  tag_98\n  tag_49\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4043:4063   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3167:4069   */\ntag_87:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4074:4205   */\ntag_10:\n    /* \"#utility.yul\":4134:4139   */\n  0x00\n    /* \"#utility.yul\":4163:4199   */\n  tag_100\n    /* \"#utility.yul\":4190:4198   */\n  dup4\n    /* \"#utility.yul\":4184:4188   */\n  dup4\n    /* \"#utility.yul\":4163:4199   */\n  tag_51\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4154:4199   */\n  swap4\n    /* \"#utility.yul\":4074:4205   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4210:4378   */\ntag_12:\n    /* \"#utility.yul\":4283:4292   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4314:4323   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4331:4346   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4325:4347   */\n  dup5\n  eq\n    /* \"#utility.yul\":4311:4348   */\n  or\n    /* \"#utility.yul\":4301:4372   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4352:4370   */\n  tag_87\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":4383:4592   */\ntag_14:\n    /* \"#utility.yul\":4415:4416   */\n  0x00\n    /* \"#utility.yul\":4441:4442   */\n  dup3\n    /* \"#utility.yul\":4431:4563   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4485:4495   */\n  0x4e487b71\n    /* \"#utility.yul\":4480:4483   */\n  0xe0\n    /* \"#utility.yul\":4476:4496   */\n  shl\n    /* \"#utility.yul\":4473:4474   */\n  0x00\n    /* \"#utility.yul\":4466:4497   */\n  mstore\n    /* \"#utility.yul\":4520:4524   */\n  0x12\n    /* \"#utility.yul\":4517:4518   */\n  0x04\n    /* \"#utility.yul\":4510:4525   */\n  mstore\n    /* \"#utility.yul\":4548:4552   */\n  0x24\n    /* \"#utility.yul\":4545:4546   */\n  0x00\n    /* \"#utility.yul\":4538:4553   */\n  revert\n    /* \"#utility.yul\":4431:4563   */\ntag_105:\n  pop\n    /* \"#utility.yul\":4577:4586   */\n  mod\n  swap1\n    /* \"#utility.yul\":4383:4592   */\n  jump\t// out\n    /* \"#utility.yul\":4597:4725   */\ntag_16:\n    /* \"#utility.yul\":4664:4673   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":4685:4696   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":4682:4719   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4699:4717   */\n  tag_87\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":4938:5063   */\ntag_35:\n    /* \"#utility.yul\":5003:5012   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5024:5034   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5021:5057   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5037:5055   */\n  tag_87\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":5418:5595   */\ntag_52:\n    /* \"shoaib.sol\":143:15583  contract CYBCC is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoaib.sol\":143:15583  contract CYBCC is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x838fcc90\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4863770\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xfdeb889f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xffb54a99\n      eq\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0xc4863770\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc9567bf9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd00efb2f\n      eq\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0x95d89b41\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa8b08982\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc30796ab\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0x838fcc90\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x83ad7994\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8873b15f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      dup1\n      0x3af32abf\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x5fae0576\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x5fae0576\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6049876e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x706407fd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x3af32abf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x1cf8fef5\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x1cf8fef5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32035504\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x053ab182\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"shoaib.sol\":4617:5051  function reflect(uint256 tAmount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":1316:1330   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1309:1331   */\n      iszero\n        /* \"#utility.yul\":1291:1332   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_52\n        /* \"#utility.yul\":1151:1338   */\n      jump\n        /* \"shoaib.sol\":2497:2604  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n        /* \"shoaib.sol\":2587:2594  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":2497:2604  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"shoaib.sol\":2497:2604  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_52\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"shoaib.sol\":2947:3059  function getDevelopmentAccount() public view returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n        /* \"shoaib.sol\":3030:3049  _developmentAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n        /* \"shoaib.sol\":2947:3059  function getDevelopmentAccount() public view returns (address) {... */\n    tag_67:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1689:1721   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1671:1722   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"shoaib.sol\":2947:3059  function getDevelopmentAccount() public view returns (address) {... */\n      tag_52\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_55\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"shoaib.sol\":2381:2485  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n        /* \"shoaib.sol\":2466:2475  _decimals */\n      sload(0x0b)\n        /* \"shoaib.sol\":2381:2485  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"shoaib.sol\":2466:2475  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2254:2290   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"shoaib.sol\":2381:2485  function decimals() public view virtual override returns (uint8) {... */\n      tag_52\n        /* \"#utility.yul\":2112:2296   */\n      jump\n        /* \"shoaib.sol\":3649:3753  function totalFeesRedistributed() public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n        /* \"shoaib.sol\":3733:3743  _tFeeTotal */\n      sload(0x0e)\n        /* \"shoaib.sol\":3649:3753  function totalFeesRedistributed() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"shoaib.sol\":340:385  mapping(address => bool) public isWhitelisted */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_55\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"shoaib.sol\":3765:3880  function excludeFromFee(address account) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_45\n      tag_94\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"shoaib.sol\":5063:5576  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_62\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"shoaib.sol\":3071:3199  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      revert(0x00, 0x00)\n    tag_102:\n      pop\n      tag_55\n      tag_104\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      and\n        /* \"shoaib.sol\":3136:3140  bool */\n      0x00\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3162:3180  _isExcludedFromFee */\n      0x07\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"shoaib.sol\":3071:3199  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"shoaib.sol\":6823:6949  function isWhitelistedAddress(address account) public view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_55\n      tag_109\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6917:6939  isWhitelisted[account] */\n      and\n        /* \"shoaib.sol\":6891:6895  bool */\n      0x00\n        /* \"shoaib.sol\":6917:6939  isWhitelisted[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6917:6930  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":6917:6939  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"shoaib.sol\":6823:6949  function isWhitelistedAddress(address account) public view returns (bool) {... */\n      jump\n        /* \"shoaib.sol\":5942:6295  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_45\n      tag_114\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"shoaib.sol\":4166:4432  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_45\n      tag_118\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"shoaib.sol\":3211:3511  function balanceOf(address sender)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_62\n      tag_122\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"shoaib.sol\":2827:2935  function getMarketingAccount() public view returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      revert(0x00, 0x00)\n    tag_125:\n      pop\n        /* \"shoaib.sol\":2908:2925  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"shoaib.sol\":2827:2935  function getMarketingAccount() public view returns (address) {... */\n      jump(tag_67)\n        /* \"shoaib.sol\":2616:2715  function reflectionFee() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      revert(0x00, 0x00)\n    tag_129:\n      pop\n        /* \"shoaib.sol\":2691:2705  _reflectionFee */\n      sload(0x0f)\n        /* \"shoaib.sol\":2616:2715  function reflectionFee() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"shoaib.sol\":4444:4605  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n      pop\n      tag_45\n      tag_135\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"shoaib.sol\":2194:2285  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      revert(0x00, 0x00)\n    tag_137:\n      pop\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":2194:2285  function owner() public view virtual returns (address) {... */\n      jump(tag_67)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_50\n      tag_143\n      jump\t// in\n        /* \"shoaib.sol\":981:1007  address public pairAddress */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      revert(0x00, 0x00)\n    tag_145:\n      pop\n      sload(0x15)\n      tag_67\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      revert(0x00, 0x00)\n    tag_149:\n      pop\n      tag_55\n      tag_151\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"shoaib.sol\":6961:7154  function whitelistedAddress(address account) public onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      revert(0x00, 0x00)\n    tag_154:\n      pop\n      tag_45\n      tag_156\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"shoaib.sol\":3892:4154  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      revert(0x00, 0x00)\n    tag_158:\n      pop\n      tag_45\n      tag_160\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"shoaib.sol\":7166:7288  function openTrading() external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      revert(0x00, 0x00)\n    tag_162:\n      pop\n      tag_45\n      tag_164\n      jump\t// in\n        /* \"shoaib.sol\":3523:3637  function isExcluded(address account) public view returns (bool) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_55\n      tag_167\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3607:3627  _isExcluded[account] */\n      and\n        /* \"shoaib.sol\":3581:3585  bool */\n      0x00\n        /* \"shoaib.sol\":3607:3627  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3607:3618  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":3607:3627  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"shoaib.sol\":3523:3637  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"shoaib.sol\":1064:1090  uint256 public launchBlock */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      revert(0x00, 0x00)\n    tag_170:\n      pop\n      tag_62\n      sload(0x17)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      revert(0x00, 0x00)\n    tag_174:\n      pop\n      tag_62\n      tag_176\n      calldatasize\n      0x04\n      tag_177\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"shoaib.sol\":2727:2815  function getTaxFee() public view returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      revert(0x00, 0x00)\n    tag_180:\n      pop\n        /* \"shoaib.sol\":2798:2805  _taxFee */\n      sload(0x11)\n        /* \"shoaib.sol\":2727:2815  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"shoaib.sol\":6307:6811  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      revert(0x00, 0x00)\n    tag_184:\n      pop\n      tag_45\n      tag_186\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_186:\n      tag_187\n      jump\t// in\n        /* \"shoaib.sol\":1099:1130  bool public tradingOpen = false */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      revert(0x00, 0x00)\n    tag_188:\n      pop\n      sload(0x18)\n      tag_55\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"shoaib.sol\":4617:5051  function reflect(uint256 tAmount) public {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"shoaib.sol\":4671:4685  address sender */\n      0x00\n        /* \"shoaib.sol\":4738:4757  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"shoaib.sol\":4738:4749  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":4738:4757  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":4737:4757  !_isExcluded[sender] */\n      iszero\n        /* \"shoaib.sol\":4713:4833  require(... */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"shoaib.sol\":4713:4833  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3341:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3400   */\n      0x2c\n        /* \"#utility.yul\":3378:3396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3371:3401   */\n      mstore\n        /* \"#utility.yul\":3437:3471   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":3417:3435   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3410:3472   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3488:3506   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3481:3523   */\n      mstore\n        /* \"#utility.yul\":3540:3559   */\n      0x84\n      add\n        /* \"shoaib.sol\":4713:4833  require(... */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"shoaib.sol\":4847:4862  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":4872:4899  _getTransferValues(tAmount) */\n      tag_198\n        /* \"shoaib.sol\":4891:4898  tAmount */\n      dup4\n        /* \"shoaib.sol\":4872:4890  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":4872:4899  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_198:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":4930:4945  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":4930:4937  _rOwned */\n      0x05\n        /* \"shoaib.sol\":4930:4945  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":4846:4899  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap1\n      swap2\n      pop\n        /* \"shoaib.sol\":4930:4955  _rOwned[sender] - rAmount */\n      tag_200\n      swap1\n        /* \"shoaib.sol\":4846:4899  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      dup3\n      swap1\n        /* \"shoaib.sol\":4930:4955  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":4912:4927  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":4912:4919  _rOwned */\n      0x05\n        /* \"shoaib.sol\":4912:4927  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":4912:4955  _rOwned[sender] = _rOwned[sender] - rAmount */\n      sstore\n        /* \"shoaib.sol\":4978:4985  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":4978:4995  _rTotal - rAmount */\n      tag_202\n      swap1\n        /* \"shoaib.sol\":4988:4995  rAmount */\n      dup3\n      swap1\n        /* \"shoaib.sol\":4978:4995  _rTotal - rAmount */\n      tag_201\n      jump\t// in\n    tag_202:\n        /* \"shoaib.sol\":4968:4975  _rTotal */\n      0x0d\n        /* \"shoaib.sol\":4968:4995  _rTotal = _rTotal - rAmount */\n      sstore\n        /* \"shoaib.sol\":5021:5031  _tFeeTotal */\n      sload(0x0e)\n        /* \"shoaib.sol\":5021:5041  _tFeeTotal + tAmount */\n      tag_203\n      swap1\n        /* \"shoaib.sol\":5034:5041  tAmount */\n      dup5\n      swap1\n        /* \"shoaib.sol\":5021:5041  _tFeeTotal + tAmount */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"shoaib.sol\":5008:5018  _tFeeTotal */\n      0x0e\n        /* \"shoaib.sol\":5008:5041  _tFeeTotal = _tFeeTotal + tAmount */\n      sstore\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":4617:5051  function reflect(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_212:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_222:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":3765:3880  function excludeFromFee(address account) public onlyOwner {... */\n    tag_95:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3836:3863  _isExcludedFromFee[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3836:3854  _isExcludedFromFee */\n      0x07\n        /* \"shoaib.sol\":3836:3863  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":3836:3870  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"shoaib.sol\":3866:3870  true */\n      0x01\n        /* \"shoaib.sol\":3836:3870  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n    tag_228:\n        /* \"shoaib.sol\":3765:3880  function excludeFromFee(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":5063:5576  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_100:\n        /* \"shoaib.sol\":5187:5194  uint256 */\n      0x00\n        /* \"shoaib.sol\":5235:5242  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":5224:5231  tAmount */\n      dup4\n        /* \"shoaib.sol\":5224:5242  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"shoaib.sol\":5216:5278  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"shoaib.sol\":5216:5278  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4534:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4593   */\n      0x1f\n        /* \"#utility.yul\":4571:4589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4564:4594   */\n      mstore\n        /* \"#utility.yul\":4630:4663   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":4610:4628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4603:4664   */\n      mstore\n        /* \"#utility.yul\":4681:4699   */\n      0x64\n      add\n        /* \"shoaib.sol\":5216:5278  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_196\n        /* \"#utility.yul\":4350:4705   */\n      jump\n        /* \"shoaib.sol\":5216:5278  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n    tag_231:\n        /* \"shoaib.sol\":5296:5313  deductTransferFee */\n      dup2\n        /* \"shoaib.sol\":5291:5567  if (!deductTransferFee) {... */\n      tag_234\n      jumpi\n        /* \"shoaib.sol\":5333:5348  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":5358:5385  _getTransferValues(tAmount) */\n      tag_235\n        /* \"shoaib.sol\":5377:5384  tAmount */\n      dup5\n        /* \"shoaib.sol\":5358:5376  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":5358:5385  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_235:\n      pop\n        /* \"shoaib.sol\":5332:5385  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap2\n      swap4\n      pop\n        /* \"shoaib.sol\":5402:5416  return rAmount */\n      tag_212\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"shoaib.sol\":5291:5567  if (!deductTransferFee) {... */\n    tag_234:\n        /* \"shoaib.sol\":5456:5479  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":5487:5514  _getTransferValues(tAmount) */\n      tag_237\n        /* \"shoaib.sol\":5506:5513  tAmount */\n      dup5\n        /* \"shoaib.sol\":5487:5505  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":5487:5514  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"shoaib.sol\":5453:5514  (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount) */\n      swap1\n      swap4\n      pop\n        /* \"shoaib.sol\":5531:5553  return rTransferAmount */\n      tag_212\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"shoaib.sol\":5942:6295  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_115:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6032:6052  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6032:6043  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":6032:6052  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":6031:6052  !_isExcluded[account] */\n      iszero\n        /* \"shoaib.sol\":6023:6084  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"shoaib.sol\":6023:6084  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4894:4915   */\n      mstore\n        /* \"#utility.yul\":4951:4953   */\n      0x1b\n        /* \"#utility.yul\":4931:4949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4924:4954   */\n      mstore\n        /* \"#utility.yul\":4990:5019   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":4970:4988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4963:5020   */\n      mstore\n        /* \"#utility.yul\":5037:5055   */\n      0x64\n      add\n        /* \"shoaib.sol\":6023:6084  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_196\n        /* \"#utility.yul\":4710:5061   */\n      jump\n        /* \"shoaib.sol\":6023:6084  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6101:6117  _rOwned[account] */\n      dup2\n      and\n        /* \"shoaib.sol\":6120:6121  0 */\n      0x00\n        /* \"shoaib.sol\":6101:6117  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6101:6108  _rOwned */\n      0x05\n        /* \"shoaib.sol\":6101:6117  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":6101:6121  _rOwned[account] > 0 */\n      iszero\n        /* \"shoaib.sol\":6097:6210  if (_rOwned[account] > 0) {... */\n      tag_247\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6179:6195  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6179:6186  _rOwned */\n      0x05\n        /* \"shoaib.sol\":6179:6195  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":6159:6196  tokenFromReflection(_rOwned[account]) */\n      tag_248\n      swap1\n        /* \"shoaib.sol\":6159:6178  tokenFromReflection */\n      tag_249\n        /* \"shoaib.sol\":6159:6196  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6140:6156  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6140:6147  _tOwned */\n      0x06\n        /* \"shoaib.sol\":6140:6156  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":6140:6196  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"shoaib.sol\":6097:6210  if (_rOwned[account] > 0) {... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6222:6242  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"shoaib.sol\":6222:6233  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":6222:6242  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"shoaib.sol\":6222:6249  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"shoaib.sol\":6245:6249  true */\n      0x01\n        /* \"shoaib.sol\":6222:6249  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"shoaib.sol\":6262:6271  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6262:6285  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":5942:6295  function excludeAccountFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"shoaib.sol\":4166:4432  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_119:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":4277:4304  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"shoaib.sol\":4253:4374  require(... */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_257\n      jump\t// in\n    tag_255:\n        /* \"shoaib.sol\":4387:4406  _developmentAccount */\n      0x14\n        /* \"shoaib.sol\":4387:4422  _developmentAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":4166:4432  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":3211:3511  function balanceOf(address sender)... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3372:3391  _isExcluded[sender] */\n      dup2\n      and\n        /* \"shoaib.sol\":3339:3346  uint256 */\n      0x00\n        /* \"shoaib.sol\":3372:3391  _isExcluded[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3372:3383  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":3372:3391  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":3368:3446  if (_isExcluded[sender]) {... */\n      iszero\n      tag_259\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3417:3432  _tOwned[sender] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3417:3424  _tOwned */\n      0x06\n        /* \"shoaib.sol\":3417:3432  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"shoaib.sol\":3211:3511  function balanceOf(address sender)... */\n      jump\t// out\n        /* \"shoaib.sol\":3368:3446  if (_isExcluded[sender]) {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3485:3500  _rOwned[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3485:3492  _rOwned */\n      0x05\n        /* \"shoaib.sol\":3485:3500  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":3465:3501  tokenFromReflection(_rOwned[sender]) */\n      tag_212\n      swap1\n        /* \"shoaib.sol\":3465:3484  tokenFromReflection */\n      tag_249\n        /* \"shoaib.sol\":3465:3501  tokenFromReflection(_rOwned[sender]) */\n      jump\t// in\n        /* \"shoaib.sol\":4444:4605  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_136:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n        /* \"shoaib.sol\":4523:4534  pairAddress */\n      0x15\n        /* \"shoaib.sol\":4523:4549  pairAddress = _pairAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n      0x00\n        /* \"shoaib.sol\":4562:4588  isWhitelisted[pairAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":4562:4575  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":4562:4588  isWhitelisted[pairAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":4562:4595  isWhitelisted[pairAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":4444:4605  function changePairAddress(address _pairAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"shoaib.sol\":6961:7154  function whitelistedAddress(address account) public onlyOwner {... */\n    tag_157:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7045:7067  isWhitelisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":7045:7058  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":7045:7067  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":7044:7067  !isWhitelisted[account] */\n      iszero\n        /* \"shoaib.sol\":7036:7102  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"shoaib.sol\":7036:7102  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5657:5678   */\n      mstore\n        /* \"#utility.yul\":5714:5716   */\n      0x1e\n        /* \"#utility.yul\":5694:5712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5687:5717   */\n      mstore\n        /* \"#utility.yul\":5753:5785   */\n      0x4164647265737320697320616c72656164792077686974656c69737465640000\n        /* \"#utility.yul\":5733:5751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5726:5786   */\n      mstore\n        /* \"#utility.yul\":5803:5821   */\n      0x64\n      add\n        /* \"shoaib.sol\":7036:7102  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      tag_196\n        /* \"#utility.yul\":5473:5827   */\n      jump\n        /* \"shoaib.sol\":7036:7102  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7115:7137  isWhitelisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":7115:7128  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":7115:7137  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":7115:7144  isWhitelisted[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"shoaib.sol\":7140:7144  true */\n      0x01\n        /* \"shoaib.sol\":7115:7144  isWhitelisted[account] = true */\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":6961:7154  function whitelistedAddress(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":3892:4154  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_161:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":4001:4028  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"shoaib.sol\":3977:4098  require(... */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_257\n      jump\t// in\n    tag_288:\n        /* \"shoaib.sol\":4111:4128  _marketingAccount */\n      0x13\n        /* \"shoaib.sol\":4111:4144  _marketingAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":3892:4154  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":7166:7288  function openTrading() external onlyOwner {... */\n    tag_164:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_292\n      jumpi\n        /* \"shoaib.sol\":7221:7232  tradingOpen */\n      0x18\n        /* \"shoaib.sol\":7221:7239  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"shoaib.sol\":7235:7239  true */\n      0x01\n        /* \"shoaib.sol\":7221:7239  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":7266:7278  block.number */\n      number\n        /* \"shoaib.sol\":7252:7263  launchBlock */\n      0x17\n        /* \"shoaib.sol\":7252:7278  launchBlock = block.number */\n      sstore\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n    tag_292:\n        /* \"shoaib.sol\":7166:7288  function openTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"shoaib.sol\":6307:6811  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_187:\n        /* \"shoaib.sol\":2269:2275  _owner */\n      sload(0x0b)\n        /* \"shoaib.sol\":2346:2356  msg.sender */\n      caller\n      swap1\n        /* \"shoaib.sol\":2269:2275  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":2335:2356  owner() == msg.sender */\n      and\n      sub\n        /* \"shoaib.sol\":2331:2359  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6394:6414  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":6394:6405  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":6394:6414  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":6386:6446  require(_isExcluded[account], \"Account is already included\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6034:6036   */\n      0x20\n        /* \"shoaib.sol\":6386:6446  require(_isExcluded[account], \"Account is already included\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6016:6037   */\n      mstore\n        /* \"#utility.yul\":6073:6075   */\n      0x1b\n        /* \"#utility.yul\":6053:6071   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6046:6076   */\n      mstore\n        /* \"#utility.yul\":6112:6141   */\n      0x4163636f756e7420697320616c726561647920696e636c756465640000000000\n        /* \"#utility.yul\":6092:6110   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6085:6142   */\n      mstore\n        /* \"#utility.yul\":6159:6177   */\n      0x64\n      add\n        /* \"shoaib.sol\":6386:6446  require(_isExcluded[account], \"Account is already included\") */\n      tag_196\n        /* \"#utility.yul\":5832:6183   */\n      jump\n        /* \"shoaib.sol\":6386:6446  require(_isExcluded[account], \"Account is already included\") */\n    tag_301:\n        /* \"shoaib.sol\":6464:6473  uint256 i */\n      0x00\n        /* \"shoaib.sol\":6459:6802  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_304:\n        /* \"shoaib.sol\":6483:6492  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6483:6499  _excluded.length */\n      sload\n        /* \"shoaib.sol\":6479:6499  i < _excluded.length */\n      dup2\n      lt\n        /* \"shoaib.sol\":6459:6802  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"shoaib.sol\":6543:6550  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6527:6550  _excluded[i] == account */\n      and\n        /* \"shoaib.sol\":6527:6536  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6537:6538  i */\n      dup3\n        /* \"shoaib.sol\":6527:6539  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_309\n      jump\t// in\n    tag_308:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":6527:6550  _excluded[i] == account */\n      sub\n        /* \"shoaib.sol\":6523:6789  if (_excluded[i] == account) {... */\n      tag_311\n      jumpi\n        /* \"shoaib.sol\":6588:6597  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6598:6614  _excluded.length */\n      dup1\n      sload\n        /* \"shoaib.sol\":6598:6618  _excluded.length - 1 */\n      tag_312\n      swap1\n        /* \"shoaib.sol\":6617:6618  1 */\n      0x01\n      swap1\n        /* \"shoaib.sol\":6598:6618  _excluded.length - 1 */\n      tag_201\n      jump\t// in\n    tag_312:\n        /* \"shoaib.sol\":6588:6619  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_309\n      jump\t// in\n    tag_314:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"shoaib.sol\":6573:6582  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6573:6585  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":6588:6619  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"shoaib.sol\":6583:6584  i */\n      dup4\n      swap1\n        /* \"shoaib.sol\":6573:6585  _excluded[i] */\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_309\n      jump\t// in\n    tag_317:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"shoaib.sol\":6573:6619  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"shoaib.sol\":6640:6656  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"shoaib.sol\":6640:6647  _tOwned */\n      0x06\n        /* \"shoaib.sol\":6640:6656  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"shoaib.sol\":6640:6660  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"shoaib.sol\":6681:6692  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":6681:6701  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"shoaib.sol\":6681:6709  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"shoaib.sol\":6730:6739  _excluded */\n      0x0a\n        /* \"shoaib.sol\":6730:6745  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_320\n      jumpi\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"shoaib.sol\":6459:6802  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"shoaib.sol\":6307:6811  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":6523:6789  if (_excluded[i] == account) {... */\n    tag_311:\n        /* \"shoaib.sol\":6501:6504  i++ */\n      0x01\n      add\n        /* \"shoaib.sol\":6459:6802  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_304)\n    tag_305:\n      pop\n        /* \"shoaib.sol\":6307:6811  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":13170:13755  function _getTransferValues(uint256 tAmount)... */\n    tag_199:\n        /* \"shoaib.sol\":13286:13293  uint256 */\n      0x00\n        /* \"shoaib.sol\":13310:13317  uint256 */\n      0x00\n        /* \"shoaib.sol\":13334:13341  uint256 */\n      0x00\n        /* \"shoaib.sol\":13358:13365  uint256 */\n      0x00\n        /* \"shoaib.sol\":13399:13415  uint256 taxValue */\n      0x00\n        /* \"shoaib.sol\":13418:13447  _getCompleteTaxValue(tAmount) */\n      tag_325\n        /* \"shoaib.sol\":13439:13446  tAmount */\n      dup7\n        /* \"shoaib.sol\":13418:13438  _getCompleteTaxValue */\n      tag_326\n        /* \"shoaib.sol\":13418:13447  _getCompleteTaxValue(tAmount) */\n      jump\t// in\n    tag_325:\n        /* \"shoaib.sol\":13399:13447  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      swap1\n      pop\n        /* \"shoaib.sol\":13460:13483  uint256 tTransferAmount */\n      0x00\n        /* \"shoaib.sol\":13486:13504  tAmount - taxValue */\n      tag_327\n        /* \"shoaib.sol\":13399:13447  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      dup3\n        /* \"shoaib.sol\":13486:13493  tAmount */\n      dup9\n        /* \"shoaib.sol\":13486:13504  tAmount - taxValue */\n      tag_201\n      jump\t// in\n    tag_327:\n        /* \"shoaib.sol\":13460:13504  uint256 tTransferAmount = tAmount - taxValue */\n      swap1\n      pop\n        /* \"shoaib.sol\":13517:13536  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":13539:13549  _getRate() */\n      tag_328\n        /* \"shoaib.sol\":13539:13547  _getRate */\n      tag_329\n        /* \"shoaib.sol\":13539:13549  _getRate() */\n      jump\t// in\n    tag_328:\n        /* \"shoaib.sol\":13517:13549  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"shoaib.sol\":13562:13585  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":13588:13617  tTransferAmount * currentRate */\n      tag_330\n        /* \"shoaib.sol\":13517:13549  uint256 currentRate = _getRate() */\n      dup3\n        /* \"shoaib.sol\":13588:13603  tTransferAmount */\n      dup5\n        /* \"shoaib.sol\":13588:13617  tTransferAmount * currentRate */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"shoaib.sol\":13562:13617  uint256 rTransferAmount = tTransferAmount * currentRate */\n      swap1\n      pop\n        /* \"shoaib.sol\":13630:13645  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":13648:13669  tAmount * currentRate */\n      tag_332\n        /* \"shoaib.sol\":13658:13669  currentRate */\n      dup4\n        /* \"shoaib.sol\":13648:13655  tAmount */\n      dup12\n        /* \"shoaib.sol\":13648:13669  tAmount * currentRate */\n      tag_331\n      jump\t// in\n    tag_332:\n        /* \"shoaib.sol\":13630:13669  uint256 rAmount = tAmount * currentRate */\n      swap11\n        /* \"shoaib.sol\":13699:13714  rTransferAmount */\n      swap2\n      swap10\n      pop\n        /* \"shoaib.sol\":13716:13731  tTransferAmount */\n      swap3\n      swap8\n      pop\n        /* \"shoaib.sol\":13733:13744  currentRate */\n      swap1\n      swap6\n      pop\n        /* \"shoaib.sol\":13170:13755  function _getTransferValues(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8808:8813  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8815:8822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8824:8829  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8831:8835  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8807  _approve */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10527  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10569:10605  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10565:10874  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10644:10649  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10641  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10649  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6845:6877   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6827:6878   */\n      mstore\n        /* \"#utility.yul\":6894:6912   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6887:6921   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6937:6955   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6930:6964   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6800:6818   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_196\n        /* \"#utility.yul\":6625:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10801:10806  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10808:10815  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10836:10841  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10833  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10841  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10843:10848  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10800  _approve */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10493:10880  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":7706:8726  function _transfer(... */\n    tag_223:\n        /* \"shoaib.sol\":7370:7381  tradingOpen */\n      sload(0x18)\n        /* \"shoaib.sol\":7861:7867  sender */\n      dup4\n      swap1\n        /* \"shoaib.sol\":7869:7878  recipient */\n      dup4\n      swap1\n        /* \"shoaib.sol\":7370:7381  tradingOpen */\n      0xff\n      and\n        /* \"shoaib.sol\":7365:7671  if (!tradingOpen) {... */\n      tag_344\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7408:7427  isWhitelisted[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":7408:7421  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":7408:7427  isWhitelisted[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":7400:7455  require(isWhitelisted[from], \"Trading not yet enabled\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"shoaib.sol\":7400:7455  require(isWhitelisted[from], \"Trading not yet enabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7159:7180   */\n      mstore\n        /* \"#utility.yul\":7216:7218   */\n      0x17\n        /* \"#utility.yul\":7196:7214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7189:7219   */\n      mstore\n        /* \"#utility.yul\":7255:7280   */\n      0x54726164696e67206e6f742079657420656e61626c6564000000000000000000\n        /* \"#utility.yul\":7235:7253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7228:7281   */\n      mstore\n        /* \"#utility.yul\":7298:7316   */\n      0x64\n      add\n        /* \"shoaib.sol\":7400:7455  require(isWhitelisted[from], \"Trading not yet enabled\") */\n      tag_196\n        /* \"#utility.yul\":6975:7322   */\n      jump\n        /* \"shoaib.sol\":7400:7455  require(isWhitelisted[from], \"Trading not yet enabled\") */\n    tag_345:\n        /* \"shoaib.sol\":7365:7671  if (!tradingOpen) {... */\n      jump(tag_351)\n    tag_344:\n        /* \"shoaib.sol\":7495:7506  launchBlock */\n      sload(0x17)\n        /* \"shoaib.sol\":7495:7510  launchBlock + 3 */\n      tag_349\n      swap1\n        /* \"shoaib.sol\":7509:7510  3 */\n      0x03\n        /* \"shoaib.sol\":7495:7510  launchBlock + 3 */\n      tag_204\n      jump\t// in\n    tag_349:\n        /* \"shoaib.sol\":7479:7491  block.number */\n      number\n        /* \"shoaib.sol\":7479:7510  block.number <= launchBlock + 3 */\n      gt\n        /* \"shoaib.sol\":7475:7671  if (block.number <= launchBlock + 3) {... */\n      tag_351\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7601:7618  isWhitelisted[to] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":7601:7614  isWhitelisted */\n      0x08\n        /* \"shoaib.sol\":7601:7618  isWhitelisted[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":7593:7657  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7529:7531   */\n      0x20\n        /* \"shoaib.sol\":7593:7657  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7511:7532   */\n      mstore\n        /* \"#utility.yul\":7568:7570   */\n      0x22\n        /* \"#utility.yul\":7548:7566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7541:7571   */\n      mstore\n        /* \"#utility.yul\":7607:7641   */\n      0x4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374\n        /* \"#utility.yul\":7587:7605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7580:7642   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":7658:7676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7651:7683   */\n      mstore\n        /* \"#utility.yul\":7700:7719   */\n      0x84\n      add\n        /* \"shoaib.sol\":7593:7657  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      tag_196\n        /* \"#utility.yul\":7327:7725   */\n      jump\n        /* \"shoaib.sol\":7593:7657  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7901:7921  sender != address(0) */\n      dup6\n      and\n        /* \"shoaib.sol\":7893:7963  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"shoaib.sol\":7893:7963  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7914:7935   */\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x25\n        /* \"#utility.yul\":7951:7969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7944:7974   */\n      mstore\n        /* \"#utility.yul\":8010:8044   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7990:8008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7983:8045   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8061:8079   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8054:8089   */\n      mstore\n        /* \"#utility.yul\":8106:8125   */\n      0x84\n      add\n        /* \"shoaib.sol\":7893:7963  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_196\n        /* \"#utility.yul\":7730:8131   */\n      jump\n        /* \"shoaib.sol\":7893:7963  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":7984:8007  recipient != address(0) */\n      dup5\n      and\n        /* \"shoaib.sol\":7976:8047  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"shoaib.sol\":7976:8047  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8320:8341   */\n      mstore\n        /* \"#utility.yul\":8377:8379   */\n      0x23\n        /* \"#utility.yul\":8357:8375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8350:8380   */\n      mstore\n        /* \"#utility.yul\":8416:8450   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8396:8414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8389:8451   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8467:8485   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8460:8493   */\n      mstore\n        /* \"#utility.yul\":8510:8529   */\n      0x84\n      add\n        /* \"shoaib.sol\":7976:8047  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_196\n        /* \"#utility.yul\":8136:8535   */\n      jump\n        /* \"shoaib.sol\":7976:8047  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_358:\n        /* \"shoaib.sol\":8060:8081  uint256 senderBalance */\n      0x00\n        /* \"shoaib.sol\":8084:8101  balanceOf(sender) */\n      tag_361\n        /* \"shoaib.sol\":8094:8100  sender */\n      dup7\n        /* \"shoaib.sol\":8084:8093  balanceOf */\n      tag_123\n        /* \"shoaib.sol\":8084:8101  balanceOf(sender) */\n      jump\t// in\n    tag_361:\n        /* \"shoaib.sol\":8060:8101  uint256 senderBalance = balanceOf(sender) */\n      swap1\n      pop\n        /* \"shoaib.sol\":8155:8161  amount */\n      dup4\n        /* \"shoaib.sol\":8138:8151  senderBalance */\n      dup2\n        /* \"shoaib.sol\":8138:8161  senderBalance >= amount */\n      lt\n      iszero\n        /* \"shoaib.sol\":8114:8231  require(... */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8742:8744   */\n      0x20\n        /* \"shoaib.sol\":8114:8231  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8724:8745   */\n      mstore\n        /* \"#utility.yul\":8781:8783   */\n      0x26\n        /* \"#utility.yul\":8761:8779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8754:8784   */\n      mstore\n        /* \"#utility.yul\":8820:8854   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8800:8818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8793:8855   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8871:8889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8864:8900   */\n      mstore\n        /* \"#utility.yul\":8917:8936   */\n      0x84\n      add\n        /* \"shoaib.sol\":8114:8231  require(... */\n      tag_196\n        /* \"#utility.yul\":8540:8942   */\n      jump\n        /* \"shoaib.sol\":8114:8231  require(... */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      dup6\n      and\n        /* \"shoaib.sol\":3136:3140  bool */\n      0x00\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3162:3180  _isExcludedFromFee */\n      0x07\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":8248:8446  if (!isExcludedFromFee(recipient)) {... */\n      tag_369\n      jumpi\n        /* \"shoaib.sol\":8361:8376  maxWalletAmount */\n      sload(0x16)\n        /* \"shoaib.sol\":8351:8357  amount */\n      dup5\n        /* \"shoaib.sol\":8328:8348  balanceOf(recipient) */\n      tag_367\n        /* \"shoaib.sol\":8338:8347  recipient */\n      dup8\n        /* \"shoaib.sol\":8328:8337  balanceOf */\n      tag_123\n        /* \"shoaib.sol\":8328:8348  balanceOf(recipient) */\n      jump\t// in\n    tag_367:\n        /* \"shoaib.sol\":8328:8357  balanceOf(recipient) + amount */\n      tag_368\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_368:\n        /* \"shoaib.sol\":8328:8376  balanceOf(recipient) + amount <= maxWalletAmount */\n      gt\n      iszero\n        /* \"shoaib.sol\":8300:8432  require(... */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9149:9151   */\n      0x20\n        /* \"shoaib.sol\":8300:8432  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9131:9152   */\n      mstore\n        /* \"#utility.yul\":9188:9190   */\n      0x10\n        /* \"#utility.yul\":9168:9186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9161:9191   */\n      mstore\n      shl(0x80, 0x5768616c652064657465637465642121)\n        /* \"#utility.yul\":9207:9225   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9200:9246   */\n      mstore\n        /* \"#utility.yul\":9263:9281   */\n      0x64\n      add\n        /* \"shoaib.sol\":8300:8432  require(... */\n      tag_196\n        /* \"#utility.yul\":8947:9287   */\n      jump\n        /* \"shoaib.sol\":8300:8432  require(... */\n    tag_369:\n        /* \"shoaib.sol\":8501:8512  pairAddress */\n      sload(0x15)\n        /* \"shoaib.sol\":8458:8470  bool takeFee */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":8491:8512  sender == pairAddress */\n      dup9\n      dup2\n      and\n        /* \"shoaib.sol\":8501:8512  pairAddress */\n      swap2\n      and\n        /* \"shoaib.sol\":8491:8512  sender == pairAddress */\n      eq\n      dup1\n        /* \"shoaib.sol\":8491:8540  sender == pairAddress || recipient == pairAddress */\n      tag_372\n      jumpi\n      pop\n        /* \"shoaib.sol\":8529:8540  pairAddress */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":8516:8540  recipient == pairAddress */\n      dup8\n      dup2\n      and\n        /* \"shoaib.sol\":8529:8540  pairAddress */\n      swap2\n      and\n        /* \"shoaib.sol\":8516:8540  recipient == pairAddress */\n      eq\n        /* \"shoaib.sol\":8491:8540  sender == pairAddress || recipient == pairAddress */\n    tag_372:\n        /* \"shoaib.sol\":8487:8587  if (sender == pairAddress || recipient == pairAddress) {... */\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"shoaib.sol\":8569:8573  true */\n      0x01\n        /* \"shoaib.sol\":8487:8587  if (sender == pairAddress || recipient == pairAddress) {... */\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      dup8\n      and\n        /* \"shoaib.sol\":3136:3140  bool */\n      0x00\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":3162:3180  _isExcludedFromFee */\n      0x07\n        /* \"shoaib.sol\":3162:3189  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":8603:8650  if(isExcludedFromFee(sender)){takeFee = false;} */\n      iszero\n      tag_375\n      jumpi\n      pop\n        /* \"shoaib.sol\":8643:8648  false */\n      0x00\n        /* \"shoaib.sol\":8603:8650  if(isExcludedFromFee(sender)){takeFee = false;} */\n    tag_375:\n        /* \"shoaib.sol\":8666:8716  _tokenTransfer(sender, recipient, amount, takeFee) */\n      tag_376\n        /* \"shoaib.sol\":8681:8687  sender */\n      dup8\n        /* \"shoaib.sol\":8689:8698  recipient */\n      dup8\n        /* \"shoaib.sol\":8700:8706  amount */\n      dup8\n        /* \"shoaib.sol\":8708:8715  takeFee */\n      dup5\n        /* \"shoaib.sol\":8666:8680  _tokenTransfer */\n      tag_377\n        /* \"shoaib.sol\":8666:8716  _tokenTransfer(sender, recipient, amount, takeFee) */\n      jump\t// in\n    tag_376:\n        /* \"shoaib.sol\":7880:8726  {... */\n      pop\n      pop\n        /* \"shoaib.sol\":7706:8726  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":5588:5930  function tokenFromReflection(uint256 rAmount)... */\n    tag_249:\n        /* \"shoaib.sol\":5689:5696  uint256 */\n      0x00\n        /* \"shoaib.sol\":5753:5760  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":5742:5749  rAmount */\n      dup3\n        /* \"shoaib.sol\":5742:5760  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"shoaib.sol\":5718:5834  require(... */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9494:9496   */\n      0x20\n        /* \"shoaib.sol\":5718:5834  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9476:9497   */\n      mstore\n        /* \"#utility.yul\":9533:9535   */\n      0x2a\n        /* \"#utility.yul\":9513:9531   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9506:9536   */\n      mstore\n        /* \"#utility.yul\":9572:9606   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":9552:9570   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9545:9607   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":9623:9641   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9616:9656   */\n      mstore\n        /* \"#utility.yul\":9673:9692   */\n      0x84\n      add\n        /* \"shoaib.sol\":5718:5834  require(... */\n      tag_196\n        /* \"#utility.yul\":9292:9698   */\n      jump\n        /* \"shoaib.sol\":5718:5834  require(... */\n    tag_379:\n        /* \"shoaib.sol\":5847:5866  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":5869:5879  _getRate() */\n      tag_382\n        /* \"shoaib.sol\":5869:5877  _getRate */\n      tag_329\n        /* \"shoaib.sol\":5869:5879  _getRate() */\n      jump\t// in\n    tag_382:\n        /* \"shoaib.sol\":5847:5879  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"shoaib.sol\":5899:5920  rAmount / currentRate */\n      tag_383\n        /* \"shoaib.sol\":5847:5879  uint256 currentRate = _getRate() */\n      dup2\n        /* \"shoaib.sol\":5899:5906  rAmount */\n      dup5\n        /* \"shoaib.sol\":5899:5920  rAmount / currentRate */\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"shoaib.sol\":5892:5920  return rAmount / currentRate */\n      swap4\n        /* \"shoaib.sol\":5588:5930  function tokenFromReflection(uint256 rAmount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":12888:13158  function _getCompleteTaxValue(uint256 tAmount)... */\n    tag_326:\n        /* \"shoaib.sol\":12990:12997  uint256 */\n      0x00\n        /* \"shoaib.sol\":13019:13035  uint256 allTaxes */\n      0x00\n        /* \"shoaib.sol\":13055:13062  _taxFee */\n      sload(0x11)\n        /* \"shoaib.sol\":13038:13052  _reflectionFee */\n      sload(0x0f)\n        /* \"shoaib.sol\":13038:13062  _reflectionFee + _taxFee */\n      tag_386\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_386:\n        /* \"shoaib.sol\":13019:13062  uint256 allTaxes = _reflectionFee + _taxFee */\n      swap1\n      pop\n        /* \"shoaib.sol\":13075:13091  uint256 taxValue */\n      0x00\n        /* \"shoaib.sol\":13117:13120  100 */\n      0x64\n        /* \"shoaib.sol\":13095:13113  tAmount * allTaxes */\n      tag_387\n        /* \"shoaib.sol\":13019:13062  uint256 allTaxes = _reflectionFee + _taxFee */\n      dup4\n        /* \"shoaib.sol\":13095:13102  tAmount */\n      dup7\n        /* \"shoaib.sol\":13095:13113  tAmount * allTaxes */\n      tag_331\n      jump\t// in\n    tag_387:\n        /* \"shoaib.sol\":13094:13120  (tAmount * allTaxes) / 100 */\n      tag_388\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_388:\n        /* \"shoaib.sol\":13075:13120  uint256 taxValue = (tAmount * allTaxes) / 100 */\n      swap5\n        /* \"shoaib.sol\":12888:13158  function _getCompleteTaxValue(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":14046:14213  function _getRate() private view returns (uint256) {... */\n    tag_329:\n        /* \"shoaib.sol\":14088:14095  uint256 */\n      0x00\n        /* \"shoaib.sol\":14111:14126  uint256 rSupply */\n      0x00\n        /* \"shoaib.sol\":14128:14143  uint256 tSupply */\n      0x00\n        /* \"shoaib.sol\":14147:14166  _getCurrentSupply() */\n      tag_390\n        /* \"shoaib.sol\":14147:14164  _getCurrentSupply */\n      tag_391\n        /* \"shoaib.sol\":14147:14166  _getCurrentSupply() */\n      jump\t// in\n    tag_390:\n        /* \"shoaib.sol\":14110:14166  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"shoaib.sol\":14186:14203  rSupply / tSupply */\n      tag_392\n        /* \"shoaib.sol\":14110:14166  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"shoaib.sol\":14186:14203  rSupply / tSupply */\n      tag_384\n      jump\t// in\n    tag_392:\n        /* \"shoaib.sol\":14179:14203  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":14046:14213  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9802:9821  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9873:9874  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      tag_196\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9900:9921  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9972:9973  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      tag_196\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10006  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10022  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10030  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10040:10116  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10090:10097  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10088  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10099:10104  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_399\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":8738:9582  function _tokenTransfer(... */\n    tag_377:\n        /* \"shoaib.sol\":8896:8903  takeFee */\n      dup1\n        /* \"shoaib.sol\":8891:8950  if (!takeFee) {... */\n      tag_402\n      jumpi\n        /* \"shoaib.sol\":8922:8936  removeAllFee() */\n      tag_402\n        /* \"shoaib.sol\":8922:8934  removeAllFee */\n      tag_403\n        /* \"shoaib.sol\":8922:8936  removeAllFee() */\n      jump\t// in\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":8970:8987  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":8970:8981  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":8970:8987  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":8970:9007  _isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_404\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":8992:9007  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":8992:9003  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":8992:9007  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":8991:9007  !_isExcluded[to] */\n      iszero\n        /* \"shoaib.sol\":8970:9007  _isExcluded[from] && !_isExcluded[to] */\n    tag_404:\n        /* \"shoaib.sol\":8966:9497  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"shoaib.sol\":9026:9064  _transferFromExcluded(from, to, value) */\n      tag_406\n        /* \"shoaib.sol\":9048:9052  from */\n      dup5\n        /* \"shoaib.sol\":9054:9056  to */\n      dup5\n        /* \"shoaib.sol\":9058:9063  value */\n      dup5\n        /* \"shoaib.sol\":9026:9047  _transferFromExcluded */\n      tag_407\n        /* \"shoaib.sol\":9026:9064  _transferFromExcluded(from, to, value) */\n      jump\t// in\n    tag_406:\n        /* \"shoaib.sol\":8966:9497  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      jump(tag_424)\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9089:9106  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9089:9100  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9089:9106  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9088:9106  !_isExcluded[from] */\n      iszero\n        /* \"shoaib.sol\":9088:9125  !_isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9110:9125  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9110:9121  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9110:9125  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9088:9125  !_isExcluded[from] && _isExcluded[to] */\n    tag_409:\n        /* \"shoaib.sol\":9084:9497  if (!_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_410\n      jumpi\n        /* \"shoaib.sol\":9144:9180  _transferToExcluded(from, to, value) */\n      tag_406\n        /* \"shoaib.sol\":9164:9168  from */\n      dup5\n        /* \"shoaib.sol\":9170:9172  to */\n      dup5\n        /* \"shoaib.sol\":9174:9179  value */\n      dup5\n        /* \"shoaib.sol\":9144:9163  _transferToExcluded */\n      tag_412\n        /* \"shoaib.sol\":9144:9180  _transferToExcluded(from, to, value) */\n      jump\t// in\n        /* \"shoaib.sol\":9084:9497  if (!_isExcluded[from] && _isExcluded[to]) {... */\n    tag_410:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9205:9222  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9205:9216  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9205:9222  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9204:9222  !_isExcluded[from] */\n      iszero\n        /* \"shoaib.sol\":9204:9242  !_isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_414\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9227:9242  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9227:9238  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9227:9242  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9226:9242  !_isExcluded[to] */\n      iszero\n        /* \"shoaib.sol\":9204:9242  !_isExcluded[from] && !_isExcluded[to] */\n    tag_414:\n        /* \"shoaib.sol\":9200:9497  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"shoaib.sol\":9261:9295  _transferStandard(from, to, value) */\n      tag_406\n        /* \"shoaib.sol\":9279:9283  from */\n      dup5\n        /* \"shoaib.sol\":9285:9287  to */\n      dup5\n        /* \"shoaib.sol\":9289:9294  value */\n      dup5\n        /* \"shoaib.sol\":9261:9278  _transferStandard */\n      tag_417\n        /* \"shoaib.sol\":9261:9295  _transferStandard(from, to, value) */\n      jump\t// in\n        /* \"shoaib.sol\":9200:9497  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9319:9336  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9319:9330  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9319:9336  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9319:9355  _isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_419\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":9340:9355  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":9340:9351  _isExcluded */\n      0x09\n        /* \"shoaib.sol\":9340:9355  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"shoaib.sol\":9319:9355  _isExcluded[from] && _isExcluded[to] */\n    tag_419:\n        /* \"shoaib.sol\":9315:9497  if (_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"shoaib.sol\":9374:9412  _transferBothExcluded(from, to, value) */\n      tag_406\n        /* \"shoaib.sol\":9396:9400  from */\n      dup5\n        /* \"shoaib.sol\":9402:9404  to */\n      dup5\n        /* \"shoaib.sol\":9406:9411  value */\n      dup5\n        /* \"shoaib.sol\":9374:9395  _transferBothExcluded */\n      tag_422\n        /* \"shoaib.sol\":9374:9412  _transferBothExcluded(from, to, value) */\n      jump\t// in\n        /* \"shoaib.sol\":9315:9497  if (_isExcluded[from] && _isExcluded[to]) {... */\n    tag_420:\n        /* \"shoaib.sol\":9449:9483  _transferStandard(from, to, value) */\n      tag_424\n        /* \"shoaib.sol\":9467:9471  from */\n      dup5\n        /* \"shoaib.sol\":9473:9475  to */\n      dup5\n        /* \"shoaib.sol\":9477:9482  value */\n      dup5\n        /* \"shoaib.sol\":9449:9466  _transferStandard */\n      tag_417\n        /* \"shoaib.sol\":9449:9483  _transferStandard(from, to, value) */\n      jump\t// in\n    tag_424:\n        /* \"shoaib.sol\":9518:9525  takeFee */\n      dup1\n        /* \"shoaib.sol\":9513:9573  if (!takeFee) {... */\n      tag_342\n      jumpi\n        /* \"shoaib.sol\":9544:9559  restoreAllFee() */\n      tag_342\n        /* \"shoaib.sol\":9924:9946  _previousReflectionFee */\n      sload(0x10)\n        /* \"shoaib.sol\":9907:9921  _reflectionFee */\n      0x0f\n        /* \"shoaib.sol\":9907:9946  _reflectionFee = _previousReflectionFee */\n      sstore\n        /* \"shoaib.sol\":9969:9984  _previousTaxFee */\n      sload(0x12)\n        /* \"shoaib.sol\":9959:9966  _taxFee */\n      0x11\n        /* \"shoaib.sol\":9959:9984  _taxFee = _previousTaxFee */\n      sstore\n        /* \"shoaib.sol\":9861:9994  function restoreAllFee() private {... */\n      jump\n        /* \"shoaib.sol\":14225:14927  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_391:\n        /* \"shoaib.sol\":14325:14332  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":14363:14370  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":14276:14283  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"shoaib.sol\":14387:14771  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_429:\n        /* \"shoaib.sol\":14411:14420  _excluded */\n      0x0a\n        /* \"shoaib.sol\":14411:14427  _excluded.length */\n      sload\n        /* \"shoaib.sol\":14407:14427  i < _excluded.length */\n      dup2\n      lt\n        /* \"shoaib.sol\":14387:14771  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_430\n      jumpi\n        /* \"shoaib.sol\":14499:14506  rSupply */\n      dup3\n        /* \"shoaib.sol\":14475:14482  _rOwned */\n      0x05\n        /* \"shoaib.sol\":14475:14496  _rOwned[_excluded[i]] */\n      0x00\n        /* \"shoaib.sol\":14483:14492  _excluded */\n      0x0a\n        /* \"shoaib.sol\":14493:14494  i */\n      dup5\n        /* \"shoaib.sol\":14483:14495  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_433\n      jumpi\n      tag_433\n      tag_309\n      jump\t// in\n    tag_433:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":14475:14496  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":14475:14506  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"shoaib.sol\":14475:14560  _rOwned[_excluded[i]] > rSupply ||... */\n      tag_435\n      jumpi\n      pop\n        /* \"shoaib.sol\":14553:14560  tSupply */\n      dup2\n        /* \"shoaib.sol\":14529:14536  _tOwned */\n      0x06\n        /* \"shoaib.sol\":14529:14550  _tOwned[_excluded[i]] */\n      0x00\n        /* \"shoaib.sol\":14537:14546  _excluded */\n      0x0a\n        /* \"shoaib.sol\":14547:14548  i */\n      dup5\n        /* \"shoaib.sol\":14537:14549  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_437\n      jumpi\n      tag_437\n      tag_309\n      jump\t// in\n    tag_437:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":14529:14550  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":14529:14560  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"shoaib.sol\":14475:14560  _rOwned[_excluded[i]] > rSupply ||... */\n    tag_435:\n        /* \"shoaib.sol\":14451:14642  if (... */\n      iszero\n      tag_439\n      jumpi\n        /* \"shoaib.sol\":14607:14614  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":14616:14623  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":14599:14624  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":14225:14927  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"shoaib.sol\":14451:14642  if (... */\n    tag_439:\n        /* \"shoaib.sol\":14678:14685  _rOwned */\n      0x05\n        /* \"shoaib.sol\":14678:14699  _rOwned[_excluded[i]] */\n      0x00\n        /* \"shoaib.sol\":14686:14695  _excluded */\n      0x0a\n        /* \"shoaib.sol\":14696:14697  i */\n      dup4\n        /* \"shoaib.sol\":14686:14698  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_441\n      jumpi\n      tag_441\n      tag_309\n      jump\t// in\n    tag_441:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":14678:14699  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":14668:14699  rSupply - _rOwned[_excluded[i]] */\n      tag_443\n      swap1\n        /* \"shoaib.sol\":14668:14675  rSupply */\n      dup5\n        /* \"shoaib.sol\":14668:14699  rSupply - _rOwned[_excluded[i]] */\n      tag_201\n      jump\t// in\n    tag_443:\n        /* \"shoaib.sol\":14658:14699  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"shoaib.sol\":14736:14743  _tOwned */\n      0x06\n        /* \"shoaib.sol\":14736:14757  _tOwned[_excluded[i]] */\n      0x00\n        /* \"shoaib.sol\":14744:14753  _excluded */\n      0x0a\n        /* \"shoaib.sol\":14754:14755  i */\n      dup4\n        /* \"shoaib.sol\":14744:14756  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_445\n      jumpi\n      tag_445\n      tag_309\n      jump\t// in\n    tag_445:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"shoaib.sol\":14736:14757  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":14726:14757  tSupply - _tOwned[_excluded[i]] */\n      tag_447\n      swap1\n        /* \"shoaib.sol\":14726:14733  tSupply */\n      dup4\n        /* \"shoaib.sol\":14726:14757  tSupply - _tOwned[_excluded[i]] */\n      tag_201\n      jump\t// in\n    tag_447:\n        /* \"shoaib.sol\":14716:14757  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"shoaib.sol\":14429:14432  i++ */\n      0x01\n      add\n        /* \"shoaib.sol\":14387:14771  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_429)\n    tag_430:\n      pop\n        /* \"shoaib.sol\":14811:14818  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":14801:14808  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":14801:14818  _rTotal / _tTotal */\n      tag_448\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_448:\n        /* \"shoaib.sol\":14791:14798  rSupply */\n      dup3\n        /* \"shoaib.sol\":14791:14818  rSupply < _rTotal / _tTotal */\n      lt\n        /* \"shoaib.sol\":14787:14876  if (rSupply < _rTotal / _tTotal) {... */\n      iszero\n      tag_449\n      jumpi\n        /* \"shoaib.sol\":14845:14852  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":14854:14861  _tTotal */\n      sload(0x0c)\n        /* \"shoaib.sol\":14837:14862  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":14225:14927  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"shoaib.sol\":14787:14876  if (rSupply < _rTotal / _tTotal) {... */\n    tag_449:\n        /* \"shoaib.sol\":14900:14907  rSupply */\n      swap1\n      swap4\n        /* \"shoaib.sol\":14909:14916  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"shoaib.sol\":14225:14927  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":9594:9849  function removeAllFee() private {... */\n    tag_403:\n        /* \"shoaib.sol\":9643:9657  _reflectionFee */\n      sload(0x0f)\n        /* \"shoaib.sol\":9643:9662  _reflectionFee == 0 */\n      iszero\n        /* \"shoaib.sol\":9643:9678  _reflectionFee == 0 && _taxFee == 0 */\n      dup1\n      iszero\n      tag_451\n      jumpi\n      pop\n        /* \"shoaib.sol\":9666:9673  _taxFee */\n      sload(0x11)\n        /* \"shoaib.sol\":9666:9678  _taxFee == 0 */\n      iszero\n        /* \"shoaib.sol\":9643:9678  _reflectionFee == 0 && _taxFee == 0 */\n    tag_451:\n        /* \"shoaib.sol\":9639:9687  if (_reflectionFee == 0 && _taxFee == 0) return; */\n      iszero\n      tag_452\n      jumpi\n        /* \"shoaib.sol\":9594:9849  function removeAllFee() private {... */\n      jump\t// out\n        /* \"shoaib.sol\":9639:9687  if (_reflectionFee == 0 && _taxFee == 0) return; */\n    tag_452:\n        /* \"shoaib.sol\":9728:9742  _reflectionFee */\n      0x0f\n      dup1\n      sload\n        /* \"shoaib.sol\":9703:9725  _previousReflectionFee */\n      0x10\n        /* \"shoaib.sol\":9703:9742  _previousReflectionFee = _reflectionFee */\n      sstore\n        /* \"shoaib.sol\":9773:9780  _taxFee */\n      0x11\n      dup1\n      sload\n        /* \"shoaib.sol\":9755:9770  _previousTaxFee */\n      0x12\n        /* \"shoaib.sol\":9755:9780  _previousTaxFee = _taxFee */\n      sstore\n      0x00\n        /* \"shoaib.sol\":9797:9815  _reflectionFee = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"shoaib.sol\":9828:9839  _taxFee = 0 */\n      sstore\n        /* \"shoaib.sol\":9594:9849  function removeAllFee() private {... */\n      jump\t// out\n        /* \"shoaib.sol\":11390:12092  function _transferFromExcluded(... */\n    tag_407:\n        /* \"shoaib.sol\":11553:11568  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":11585:11608  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":11625:11648  uint256 tTransferAmount */\n      0x00\n        /* \"shoaib.sol\":11665:11684  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":11700:11727  _getTransferValues(tAmount) */\n      tag_454\n        /* \"shoaib.sol\":11719:11726  tAmount */\n      dup6\n        /* \"shoaib.sol\":11700:11718  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":11700:11727  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_454:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11758:11773  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11758:11765  _tOwned */\n      0x06\n        /* \"shoaib.sol\":11758:11773  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":11536:11727  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"shoaib.sol\":11758:11783  _tOwned[sender] - tAmount */\n      tag_455\n      swap1\n        /* \"shoaib.sol\":11776:11783  tAmount */\n      dup7\n      swap1\n        /* \"shoaib.sol\":11758:11783  _tOwned[sender] - tAmount */\n      tag_201\n      jump\t// in\n    tag_455:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11740:11755  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11740:11747  _tOwned */\n      0x06\n        /* \"shoaib.sol\":11740:11755  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"shoaib.sol\":11740:11783  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":11814:11821  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11814:11829  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":11814:11839  _rOwned[sender] - rAmount */\n      tag_456\n      swap1\n        /* \"shoaib.sol\":11832:11839  rAmount */\n      dup6\n      swap1\n        /* \"shoaib.sol\":11814:11839  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_456:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11796:11811  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11796:11803  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11796:11811  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"shoaib.sol\":11796:11839  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":11873:11891  _rOwned[recipient] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":11873:11909  _rOwned[recipient] + rTransferAmount */\n      tag_457\n      swap1\n        /* \"shoaib.sol\":11894:11909  rTransferAmount */\n      dup5\n      swap1\n        /* \"shoaib.sol\":11873:11909  _rOwned[recipient] + rTransferAmount */\n      tag_204\n      jump\t// in\n    tag_457:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11852:11870  _rOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11852:11859  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11852:11870  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"shoaib.sol\":11852:11909  _rOwned[recipient] = _rOwned[recipient] + rTransferAmount */\n      sstore\n        /* \"shoaib.sol\":11926:11970  taxFeeTransfer(sender, tAmount, currentRate) */\n      tag_458\n        /* \"shoaib.sol\":11941:11947  sender */\n      dup8\n        /* \"shoaib.sol\":11949:11956  tAmount */\n      dup7\n        /* \"shoaib.sol\":11958:11969  currentRate */\n      dup4\n        /* \"shoaib.sol\":11926:11940  taxFeeTransfer */\n      tag_459\n        /* \"shoaib.sol\":11926:11970  taxFeeTransfer(sender, tAmount, currentRate) */\n      jump\t// in\n    tag_458:\n        /* \"shoaib.sol\":11983:12016  _reflectFee(tAmount, currentRate) */\n      tag_460\n        /* \"shoaib.sol\":11995:12002  tAmount */\n      dup6\n        /* \"shoaib.sol\":12004:12015  currentRate */\n      dup3\n        /* \"shoaib.sol\":11983:11994  _reflectFee */\n      tag_461\n        /* \"shoaib.sol\":11983:12016  _reflectFee(tAmount, currentRate) */\n      jump\t// in\n    tag_460:\n        /* \"shoaib.sol\":12055:12064  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":12038:12082  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"shoaib.sol\":12047:12053  sender */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":12038:12082  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"shoaib.sol\":12066:12081  tTransferAmount */\n      dup5\n        /* \"shoaib.sol\":12038:12082  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_462\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"shoaib.sol\":12038:12082  Transfer(sender, recipient, tTransferAmount) */\n    tag_462:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"shoaib.sol\":11523:12092  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":11390:12092  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":10664:11378  function _transferToExcluded(... */\n    tag_412:\n        /* \"shoaib.sol\":10825:10840  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":10857:10880  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":10897:10920  uint256 tTransferAmount */\n      0x00\n        /* \"shoaib.sol\":10937:10956  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":10972:10999  _getTransferValues(tAmount) */\n      tag_464\n        /* \"shoaib.sol\":10991:10998  tAmount */\n      dup6\n        /* \"shoaib.sol\":10972:10990  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":10972:10999  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11030:11045  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11030:11037  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11030:11045  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":10808:10999  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"shoaib.sol\":11030:11055  _rOwned[sender] - rAmount */\n      tag_465\n      swap1\n        /* \"shoaib.sol\":10808:10999  (... */\n      dup6\n      swap1\n        /* \"shoaib.sol\":11030:11055  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_465:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11012:11027  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11012:11019  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11012:11027  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"shoaib.sol\":11012:11055  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"shoaib.sol\":11089:11107  _tOwned[recipient] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"shoaib.sol\":11089:11096  _tOwned */\n      0x06\n        /* \"shoaib.sol\":11089:11107  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":11089:11125  _tOwned[recipient] + tTransferAmount */\n      tag_466\n      swap1\n        /* \"shoaib.sol\":11110:11125  tTransferAmount */\n      dup4\n      swap1\n        /* \"shoaib.sol\":11089:11125  _tOwned[recipient] + tTransferAmount */\n      tag_204\n      jump\t// in\n    tag_466:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":11068:11086  _tOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":11068:11075  _tOwned */\n      0x06\n        /* \"shoaib.sol\":11068:11086  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"shoaib.sol\":11068:11125  _tOwned[recipient] = _tOwned[recipient] + tTransferAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":11159:11166  _rOwned */\n      0x05\n        /* \"shoaib.sol\":11159:11177  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":11159:11195  _rOwned[recipient] + rTransferAmount */\n      tag_457\n      swap1\n        /* \"shoaib.sol\":11180:11195  rTransferAmount */\n      dup5\n      swap1\n        /* \"shoaib.sol\":11159:11195  _rOwned[recipient] + rTransferAmount */\n      tag_204\n      jump\t// in\n        /* \"shoaib.sol\":10006:10652  function _transferStandard(... */\n    tag_417:\n        /* \"shoaib.sol\":10165:10180  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":10197:10220  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":10237:10260  uint256 tTransferAmount */\n      0x00\n        /* \"shoaib.sol\":10277:10296  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":10312:10339  _getTransferValues(tAmount) */\n      tag_472\n        /* \"shoaib.sol\":10331:10338  tAmount */\n      dup6\n        /* \"shoaib.sol\":10312:10330  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":10312:10339  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_472:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":10374:10389  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":10374:10381  _rOwned */\n      0x05\n        /* \"shoaib.sol\":10374:10389  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":10148:10339  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"shoaib.sol\":10374:10399  _rOwned[sender] - rAmount */\n      tag_456\n      swap1\n        /* \"shoaib.sol\":10148:10339  (... */\n      dup6\n      swap1\n        /* \"shoaib.sol\":10374:10399  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n        /* \"shoaib.sol\":12104:12876  function _transferBothExcluded(... */\n    tag_422:\n        /* \"shoaib.sol\":12267:12282  uint256 rAmount */\n      0x00\n        /* \"shoaib.sol\":12299:12322  uint256 rTransferAmount */\n      0x00\n        /* \"shoaib.sol\":12339:12362  uint256 tTransferAmount */\n      0x00\n        /* \"shoaib.sol\":12379:12398  uint256 currentRate */\n      0x00\n        /* \"shoaib.sol\":12414:12441  _getTransferValues(tAmount) */\n      tag_479\n        /* \"shoaib.sol\":12433:12440  tAmount */\n      dup6\n        /* \"shoaib.sol\":12414:12432  _getTransferValues */\n      tag_199\n        /* \"shoaib.sol\":12414:12441  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_479:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":12472:12487  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":12472:12479  _tOwned */\n      0x06\n        /* \"shoaib.sol\":12472:12487  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":12250:12441  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"shoaib.sol\":12472:12497  _tOwned[sender] - tAmount */\n      tag_480\n      swap1\n        /* \"shoaib.sol\":12490:12497  tAmount */\n      dup7\n      swap1\n        /* \"shoaib.sol\":12472:12497  _tOwned[sender] - tAmount */\n      tag_201\n      jump\t// in\n    tag_480:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":12454:12469  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":12454:12461  _tOwned */\n      0x06\n        /* \"shoaib.sol\":12454:12469  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"shoaib.sol\":12454:12497  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":12528:12535  _rOwned */\n      0x05\n        /* \"shoaib.sol\":12528:12543  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":12528:12553  _rOwned[sender] - rAmount */\n      tag_465\n      swap1\n        /* \"shoaib.sol\":12546:12553  rAmount */\n      dup6\n      swap1\n        /* \"shoaib.sol\":12528:12553  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n        /* \"shoaib.sol\":14939:15578  function taxFeeTransfer(... */\n    tag_459:\n        /* \"shoaib.sol\":15080:15095  uint256 tTaxFee */\n      0x00\n        /* \"shoaib.sol\":15120:15123  100 */\n      0x64\n        /* \"shoaib.sol\":15109:15116  _taxFee */\n      sload(0x11)\n        /* \"shoaib.sol\":15099:15106  tAmount */\n      dup5\n        /* \"shoaib.sol\":15099:15116  tAmount * _taxFee */\n      tag_489\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_489:\n        /* \"shoaib.sol\":15098:15123  (tAmount * _taxFee) / 100 */\n      tag_490\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_490:\n        /* \"shoaib.sol\":15080:15123  uint256 tTaxFee = (tAmount * _taxFee) / 100 */\n      swap1\n      pop\n        /* \"shoaib.sol\":15140:15151  tTaxFee > 0 */\n      dup1\n      iszero\n        /* \"shoaib.sol\":15136:15569  if (tTaxFee > 0) {... */\n      tag_342\n      jumpi\n        /* \"shoaib.sol\":15170:15185  uint256 rTaxFee */\n      0x00\n        /* \"shoaib.sol\":15214:15215  2 */\n      0x02\n        /* \"shoaib.sol\":15189:15210  tTaxFee * currentRate */\n      tag_492\n        /* \"shoaib.sol\":15199:15210  currentRate */\n      dup5\n        /* \"shoaib.sol\":15189:15196  tTaxFee */\n      dup5\n        /* \"shoaib.sol\":15189:15210  tTaxFee * currentRate */\n      tag_331\n      jump\t// in\n    tag_492:\n        /* \"shoaib.sol\":15188:15215  (tTaxFee * currentRate) / 2 */\n      tag_493\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_493:\n        /* \"shoaib.sol\":15269:15286  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"shoaib.sol\":15261:15287  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":15261:15268  _rOwned */\n      0x05\n        /* \"shoaib.sol\":15261:15287  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"shoaib.sol\":15170:15215  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      swap1\n      swap2\n      pop\n        /* \"shoaib.sol\":15261:15297  _rOwned[_marketingAccount] + rTaxFee */\n      tag_494\n      swap1\n        /* \"shoaib.sol\":15170:15215  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      dup3\n      swap1\n        /* \"shoaib.sol\":15261:15297  _rOwned[_marketingAccount] + rTaxFee */\n      tag_204\n      jump\t// in\n    tag_494:\n        /* \"shoaib.sol\":15240:15257  _marketingAccount */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"shoaib.sol\":15232:15258  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":15232:15239  _rOwned */\n      0x05\n        /* \"shoaib.sol\":15232:15258  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"shoaib.sol\":15232:15297  _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":15372:15391  _developmentAccount */\n      sload(0x14)\n      swap1\n      swap2\n      and\n        /* \"shoaib.sol\":15364:15392  _rOwned[_developmentAccount] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"shoaib.sol\":15364:15421  _rOwned[_developmentAccount] +... */\n      tag_495\n      swap1\n        /* \"shoaib.sol\":15414:15421  rTaxFee */\n      dup3\n      swap1\n        /* \"shoaib.sol\":15364:15421  _rOwned[_developmentAccount] +... */\n      tag_204\n      jump\t// in\n    tag_495:\n        /* \"shoaib.sol\":15322:15341  _developmentAccount */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"shoaib.sol\":15314:15342  _rOwned[_developmentAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"shoaib.sol\":15314:15321  _rOwned */\n      0x05\n        /* \"shoaib.sol\":15314:15342  _rOwned[_developmentAccount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"shoaib.sol\":15314:15421  _rOwned[_developmentAccount] =... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"shoaib.sol\":15460:15477  _marketingAccount */\n      sload(0x13)\n        /* \"shoaib.sol\":15443:15487  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap1\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup6\n      dup2\n      mstore\n        /* \"shoaib.sol\":15460:15477  _marketingAccount */\n      swap1\n      dup3\n      and\n      swap3\n        /* \"shoaib.sol\":15443:15487  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap2\n      dup9\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"shoaib.sol\":15443:15487  Transfer(sender, _marketingAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"shoaib.sol\":15526:15545  _developmentAccount */\n      sload(0x14)\n        /* \"shoaib.sol\":15509:15555  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"shoaib.sol\":15526:15545  _developmentAccount */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"shoaib.sol\":15509:15555  Transfer(sender, _developmentAccount, tTaxFee) */\n      dup8\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"shoaib.sol\":15509:15555  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"shoaib.sol\":15153:15569  {... */\n      pop\n        /* \"shoaib.sol\":15067:15578  {... */\n      pop\n        /* \"shoaib.sol\":14939:15578  function taxFeeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoaib.sol\":13767:14034  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n    tag_461:\n        /* \"shoaib.sol\":13847:13859  uint256 tFee */\n      0x00\n        /* \"shoaib.sol\":13891:13894  100 */\n      0x64\n        /* \"shoaib.sol\":13873:13887  _reflectionFee */\n      sload(0x0f)\n        /* \"shoaib.sol\":13863:13870  tAmount */\n      dup5\n        /* \"shoaib.sol\":13863:13887  tAmount * _reflectionFee */\n      tag_499\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_499:\n        /* \"shoaib.sol\":13862:13894  (tAmount * _reflectionFee) / 100 */\n      tag_500\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_500:\n        /* \"shoaib.sol\":13847:13894  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      swap1\n      pop\n        /* \"shoaib.sol\":13907:13919  uint256 rFee */\n      0x00\n        /* \"shoaib.sol\":13922:13940  tFee * currentRate */\n      tag_501\n        /* \"shoaib.sol\":13929:13940  currentRate */\n      dup4\n        /* \"shoaib.sol\":13847:13894  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      dup4\n        /* \"shoaib.sol\":13922:13940  tFee * currentRate */\n      tag_331\n      jump\t// in\n    tag_501:\n        /* \"shoaib.sol\":13907:13940  uint256 rFee = tFee * currentRate */\n      swap1\n      pop\n        /* \"shoaib.sol\":13977:13981  rFee */\n      dup1\n        /* \"shoaib.sol\":13967:13974  _rTotal */\n      sload(0x0d)\n        /* \"shoaib.sol\":13967:13981  _rTotal - rFee */\n      tag_502\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_502:\n        /* \"shoaib.sol\":13957:13964  _rTotal */\n      0x0d\n        /* \"shoaib.sol\":13957:13981  _rTotal = _rTotal - rFee */\n      sstore\n        /* \"shoaib.sol\":14007:14017  _tFeeTotal */\n      sload(0x0e)\n        /* \"shoaib.sol\":14007:14024  _tFeeTotal + tFee */\n      tag_503\n      swap1\n        /* \"shoaib.sol\":14020:14024  tFee */\n      dup4\n      swap1\n        /* \"shoaib.sol\":14007:14024  _tFeeTotal + tFee */\n      tag_204\n      jump\t// in\n    tag_503:\n        /* \"shoaib.sol\":13994:14004  _tFeeTotal */\n      0x0e\n        /* \"shoaib.sol\":13994:14024  _tFeeTotal = _tFeeTotal + tFee */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"shoaib.sol\":13767:14034  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_47:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_508:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:663   */\n    tag_53:\n        /* \"#utility.yul\":394:396   */\n      0x20\n        /* \"#utility.yul\":383:392   */\n      dup2\n        /* \"#utility.yul\":376:397   */\n      mstore\n        /* \"#utility.yul\":357:361   */\n      0x00\n        /* \"#utility.yul\":426:432   */\n      dup3\n        /* \"#utility.yul\":420:433   */\n      mload\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":464:466   */\n      0x20\n        /* \"#utility.yul\":453:462   */\n      dup5\n        /* \"#utility.yul\":449:467   */\n      add\n        /* \"#utility.yul\":442:476   */\n      mstore\n        /* \"#utility.yul\":528:534   */\n      dup1\n        /* \"#utility.yul\":523:525   */\n      0x20\n        /* \"#utility.yul\":515:521   */\n      dup6\n        /* \"#utility.yul\":511:526   */\n      add\n        /* \"#utility.yul\":506:508   */\n      0x40\n        /* \"#utility.yul\":495:504   */\n      dup6\n        /* \"#utility.yul\":491:509   */\n      add\n        /* \"#utility.yul\":485:535   */\n      mcopy\n        /* \"#utility.yul\":584:585   */\n      0x00\n        /* \"#utility.yul\":579:581   */\n      0x40\n        /* \"#utility.yul\":570:576   */\n      dup3\n        /* \"#utility.yul\":559:568   */\n      dup6\n        /* \"#utility.yul\":555:577   */\n      add\n        /* \"#utility.yul\":551:582   */\n      add\n        /* \"#utility.yul\":544:586   */\n      mstore\n        /* \"#utility.yul\":654:656   */\n      0x40\n        /* \"#utility.yul\":647:649   */\n      0x1f\n        /* \"#utility.yul\":643:650   */\n      not\n        /* \"#utility.yul\":638:640   */\n      0x1f\n        /* \"#utility.yul\":630:636   */\n      dup4\n        /* \"#utility.yul\":626:641   */\n      add\n        /* \"#utility.yul\":622:651   */\n      and\n        /* \"#utility.yul\":611:620   */\n      dup5\n        /* \"#utility.yul\":607:652   */\n      add\n        /* \"#utility.yul\":603:657   */\n      add\n        /* \"#utility.yul\":595:657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":245:663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:841   */\n    tag_504:\n        /* \"#utility.yul\":736:756   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":785:816   */\n      dup2\n      and\n        /* \"#utility.yul\":775:817   */\n      dup2\n      eq\n        /* \"#utility.yul\":765:835   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":831:832   */\n      0x00\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":821:833   */\n      revert\n        /* \"#utility.yul\":765:835   */\n    tag_511:\n        /* \"#utility.yul\":668:841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":846:1146   */\n    tag_57:\n        /* \"#utility.yul\":914:920   */\n      0x00\n        /* \"#utility.yul\":922:928   */\n      0x00\n        /* \"#utility.yul\":975:977   */\n      0x40\n        /* \"#utility.yul\":963:972   */\n      dup4\n        /* \"#utility.yul\":954:961   */\n      dup6\n        /* \"#utility.yul\":950:973   */\n      sub\n        /* \"#utility.yul\":946:978   */\n      slt\n        /* \"#utility.yul\":943:995   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":981:993   */\n      revert\n        /* \"#utility.yul\":943:995   */\n    tag_513:\n        /* \"#utility.yul\":1014:1043   */\n      tag_514\n        /* \"#utility.yul\":1033:1042   */\n      dup4\n        /* \"#utility.yul\":1014:1043   */\n      tag_504\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1004:1043   */\n      swap5\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1097:1115   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1084:1116   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":846:1146   */\n      jump\t// out\n        /* \"#utility.yul\":1733:2107   */\n    tag_74:\n        /* \"#utility.yul\":1810:1816   */\n      0x00\n        /* \"#utility.yul\":1818:1824   */\n      0x00\n        /* \"#utility.yul\":1826:1832   */\n      0x00\n        /* \"#utility.yul\":1879:1881   */\n      0x60\n        /* \"#utility.yul\":1867:1876   */\n      dup5\n        /* \"#utility.yul\":1858:1865   */\n      dup7\n        /* \"#utility.yul\":1854:1877   */\n      sub\n        /* \"#utility.yul\":1850:1882   */\n      slt\n        /* \"#utility.yul\":1847:1899   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":1895:1896   */\n      0x00\n        /* \"#utility.yul\":1892:1893   */\n      0x00\n        /* \"#utility.yul\":1885:1897   */\n      revert\n        /* \"#utility.yul\":1847:1899   */\n    tag_519:\n        /* \"#utility.yul\":1918:1947   */\n      tag_520\n        /* \"#utility.yul\":1937:1946   */\n      dup5\n        /* \"#utility.yul\":1918:1947   */\n      tag_504\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":1908:1947   */\n      swap3\n      pop\n        /* \"#utility.yul\":1966:2004   */\n      tag_521\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"#utility.yul\":1989:1998   */\n      dup6\n        /* \"#utility.yul\":1985:2003   */\n      add\n        /* \"#utility.yul\":1966:2004   */\n      tag_504\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":1733:2107   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1956:2004   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x40\n        /* \"#utility.yul\":2058:2076   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2045:2077   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1733:2107   */\n      jump\t// out\n        /* \"#utility.yul\":2301:2487   */\n    tag_89:\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2392:2399   */\n      dup5\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_524:\n        /* \"#utility.yul\":2452:2481   */\n      tag_383\n        /* \"#utility.yul\":2471:2480   */\n      dup3\n        /* \"#utility.yul\":2452:2481   */\n      tag_504\n      jump\t// in\n        /* \"#utility.yul\":2492:2887   */\n    tag_99:\n        /* \"#utility.yul\":2557:2563   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x40\n        /* \"#utility.yul\":2606:2615   */\n      dup4\n        /* \"#utility.yul\":2597:2604   */\n      dup6\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      0x00\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_527:\n        /* \"#utility.yul\":2679:2702   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2763:2781   */\n      dup4\n      add\n        /* \"#utility.yul\":2750:2782   */\n      calldataload\n        /* \"#utility.yul\":2820:2835   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2813:2836   */\n      iszero\n        /* \"#utility.yul\":2801:2837   */\n      dup2\n      eq\n        /* \"#utility.yul\":2791:2855   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2853   */\n      revert\n        /* \"#utility.yul\":2791:2855   */\n    tag_528:\n        /* \"#utility.yul\":2874:2881   */\n      dup1\n        /* \"#utility.yul\":2864:2881   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2492:2887   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3152   */\n    tag_177:\n        /* \"#utility.yul\":2960:2966   */\n      0x00\n        /* \"#utility.yul\":2968:2974   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x40\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3000:3007   */\n      dup6\n        /* \"#utility.yul\":2996:3019   */\n      sub\n        /* \"#utility.yul\":2992:3024   */\n      slt\n        /* \"#utility.yul\":2989:3041   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":3037:3038   */\n      0x00\n        /* \"#utility.yul\":3034:3035   */\n      0x00\n        /* \"#utility.yul\":3027:3039   */\n      revert\n        /* \"#utility.yul\":2989:3041   */\n    tag_530:\n        /* \"#utility.yul\":3060:3089   */\n      tag_531\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3060:3089   */\n      tag_504\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3050:3089   */\n      swap2\n      pop\n        /* \"#utility.yul\":3108:3146   */\n      tag_532\n        /* \"#utility.yul\":3142:3144   */\n      0x20\n        /* \"#utility.yul\":3131:3140   */\n      dup5\n        /* \"#utility.yul\":3127:3145   */\n      add\n        /* \"#utility.yul\":3108:3146   */\n      tag_504\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3098:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:3152   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3697   */\n    tag_505:\n        /* \"#utility.yul\":3631:3641   */\n      0x4e487b71\n        /* \"#utility.yul\":3626:3629   */\n      0xe0\n        /* \"#utility.yul\":3622:3642   */\n      shl\n        /* \"#utility.yul\":3619:3620   */\n      0x00\n        /* \"#utility.yul\":3612:3643   */\n      mstore\n        /* \"#utility.yul\":3662:3666   */\n      0x11\n        /* \"#utility.yul\":3659:3660   */\n      0x04\n        /* \"#utility.yul\":3652:3667   */\n      mstore\n        /* \"#utility.yul\":3686:3690   */\n      0x24\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3676:3691   */\n      revert\n        /* \"#utility.yul\":3702:3830   */\n    tag_201:\n        /* \"#utility.yul\":3769:3778   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3790:3801   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3787:3824   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3804:3822   */\n      tag_212\n      tag_505\n      jump\t// in\n        /* \"#utility.yul\":3835:3960   */\n    tag_204:\n        /* \"#utility.yul\":3900:3909   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3921:3931   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3918:3954   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3934:3952   */\n      tag_212\n      tag_505\n      jump\t// in\n        /* \"#utility.yul\":3965:4345   */\n    tag_207:\n        /* \"#utility.yul\":4044:4045   */\n      0x01\n        /* \"#utility.yul\":4040:4052   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4087:4099   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4108:4169   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":4162:4166   */\n      0x7f\n        /* \"#utility.yul\":4154:4160   */\n      dup3\n        /* \"#utility.yul\":4150:4167   */\n      and\n        /* \"#utility.yul\":4140:4167   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4169   */\n    tag_542:\n        /* \"#utility.yul\":4215:4217   */\n      0x20\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4204:4218   */\n      lt\n        /* \"#utility.yul\":4184:4202   */\n      dup2\n        /* \"#utility.yul\":4181:4219   */\n      sub\n        /* \"#utility.yul\":4178:4339   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":4261:4271   */\n      0x4e487b71\n        /* \"#utility.yul\":4256:4259   */\n      0xe0\n        /* \"#utility.yul\":4252:4272   */\n      shl\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4242:4273   */\n      mstore\n        /* \"#utility.yul\":4296:4300   */\n      0x22\n        /* \"#utility.yul\":4293:4294   */\n      0x04\n        /* \"#utility.yul\":4286:4301   */\n      mstore\n        /* \"#utility.yul\":4324:4328   */\n      0x24\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4329   */\n      revert\n        /* \"#utility.yul\":4178:4339   */\n    tag_543:\n      pop\n        /* \"#utility.yul\":3965:4345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5468   */\n    tag_257:\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5250:5271   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5307:5309   */\n      0x26\n        /* \"#utility.yul\":5287:5305   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5280:5310   */\n      mstore\n        /* \"#utility.yul\":5346:5380   */\n      0x7a65726f20616464726573732063616e206e6f74206265207468652046656541\n        /* \"#utility.yul\":5341:5343   */\n      0x40\n        /* \"#utility.yul\":5326:5344   */\n      dup3\n      add\n        /* \"#utility.yul\":5319:5381   */\n      mstore\n      shl(0xd2, 0x18d8dbdd5b9d)\n        /* \"#utility.yul\":5412:5414   */\n      0x60\n        /* \"#utility.yul\":5397:5415   */\n      dup3\n      add\n        /* \"#utility.yul\":5390:5426   */\n      mstore\n        /* \"#utility.yul\":5458:5461   */\n      0x80\n        /* \"#utility.yul\":5443:5462   */\n      add\n      swap1\n        /* \"#utility.yul\":5066:5468   */\n      jump\t// out\n        /* \"#utility.yul\":6188:6315   */\n    tag_309:\n        /* \"#utility.yul\":6249:6259   */\n      0x4e487b71\n        /* \"#utility.yul\":6244:6247   */\n      0xe0\n        /* \"#utility.yul\":6240:6260   */\n      shl\n        /* \"#utility.yul\":6237:6238   */\n      0x00\n        /* \"#utility.yul\":6230:6261   */\n      mstore\n        /* \"#utility.yul\":6280:6284   */\n      0x32\n        /* \"#utility.yul\":6277:6278   */\n      0x04\n        /* \"#utility.yul\":6270:6285   */\n      mstore\n        /* \"#utility.yul\":6304:6308   */\n      0x24\n        /* \"#utility.yul\":6301:6302   */\n      0x00\n        /* \"#utility.yul\":6294:6309   */\n      revert\n        /* \"#utility.yul\":6320:6447   */\n    tag_321:\n        /* \"#utility.yul\":6381:6391   */\n      0x4e487b71\n        /* \"#utility.yul\":6376:6379   */\n      0xe0\n        /* \"#utility.yul\":6372:6392   */\n      shl\n        /* \"#utility.yul\":6369:6370   */\n      0x00\n        /* \"#utility.yul\":6362:6393   */\n      mstore\n        /* \"#utility.yul\":6412:6416   */\n      0x31\n        /* \"#utility.yul\":6409:6410   */\n      0x04\n        /* \"#utility.yul\":6402:6417   */\n      mstore\n        /* \"#utility.yul\":6436:6440   */\n      0x24\n        /* \"#utility.yul\":6433:6434   */\n      0x00\n        /* \"#utility.yul\":6426:6441   */\n      revert\n        /* \"#utility.yul\":6452:6620   */\n    tag_331:\n        /* \"#utility.yul\":6525:6534   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6556:6565   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6573:6588   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6567:6589   */\n      dup5\n      eq\n        /* \"#utility.yul\":6553:6590   */\n      or\n        /* \"#utility.yul\":6543:6614   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6594:6612   */\n      tag_212\n      tag_505\n      jump\t// in\n        /* \"#utility.yul\":9703:9920   */\n    tag_384:\n        /* \"#utility.yul\":9743:9744   */\n      0x00\n        /* \"#utility.yul\":9769:9770   */\n      dup3\n        /* \"#utility.yul\":9759:9891   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":9813:9823   */\n      0x4e487b71\n        /* \"#utility.yul\":9808:9811   */\n      0xe0\n        /* \"#utility.yul\":9804:9824   */\n      shl\n        /* \"#utility.yul\":9801:9802   */\n      0x00\n        /* \"#utility.yul\":9794:9825   */\n      mstore\n        /* \"#utility.yul\":9848:9852   */\n      0x12\n        /* \"#utility.yul\":9845:9846   */\n      0x04\n        /* \"#utility.yul\":9838:9853   */\n      mstore\n        /* \"#utility.yul\":9876:9880   */\n      0x24\n        /* \"#utility.yul\":9873:9874   */\n      0x00\n        /* \"#utility.yul\":9866:9881   */\n      revert\n        /* \"#utility.yul\":9759:9891   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":9905:9914   */\n      div\n      swap1\n        /* \"#utility.yul\":9703:9920   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220848b53d8ff40033ea81a10385d5e69bebcaac47ddb9ebfda710545112606e45864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 612,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 673,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5597:6",
										"nodeType": "YulBlock",
										"src": "0:5597:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "201:325:6",
													"nodeType": "YulBlock",
													"src": "201:325:6",
													"statements": [
														{
															"nativeSrc": "211:22:6",
															"nodeType": "YulAssignment",
															"src": "211:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "225:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:6"
																},
																"nativeSrc": "221:12:6",
																"nodeType": "YulFunctionCall",
																"src": "221:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																}
															]
														},
														{
															"nativeSrc": "242:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:6"
																},
																"nativeSrc": "268:12:6",
																"nodeType": "YulFunctionCall",
																"src": "268:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:6",
																	"nodeType": "YulTypedName",
																	"src": "246:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:6",
																"nodeType": "YulBlock",
																"src": "319:31:6",
																"statements": [
																	{
																		"nativeSrc": "321:27:6",
																		"nodeType": "YulAssignment",
																		"src": "321:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:6",
																					"nodeType": "YulLiteral",
																					"src": "343:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:6"
																			},
																			"nativeSrc": "331:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:6"
																},
																"nativeSrc": "292:26:6",
																"nodeType": "YulFunctionCall",
																"src": "292:26:6"
															},
															"nativeSrc": "289:61:6",
															"nodeType": "YulIf",
															"src": "289:61:6"
														},
														{
															"body": {
																"nativeSrc": "409:111:6",
																"nodeType": "YulBlock",
																"src": "409:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:6",
																					"nodeType": "YulLiteral",
																					"src": "430:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:6",
																							"nodeType": "YulLiteral",
																							"src": "437:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:6",
																							"nodeType": "YulLiteral",
																							"src": "442:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:6"
																					},
																					"nativeSrc": "433:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:6"
																			},
																			"nativeSrc": "423:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:6"
																		},
																		"nativeSrc": "423:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:6",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:6",
																					"nodeType": "YulLiteral",
																					"src": "477:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:6"
																			},
																			"nativeSrc": "467:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:6"
																		},
																		"nativeSrc": "467:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:6",
																					"nodeType": "YulLiteral",
																					"src": "502:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:6",
																					"nodeType": "YulLiteral",
																					"src": "505:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:6"
																			},
																			"nativeSrc": "495:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:6"
																		},
																		"nativeSrc": "495:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:6",
																				"nodeType": "YulLiteral",
																				"src": "396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:6"
																		},
																		"nativeSrc": "385:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:6"
																},
																"nativeSrc": "362:38:6",
																"nodeType": "YulFunctionCall",
																"src": "362:38:6"
															},
															"nativeSrc": "359:161:6",
															"nodeType": "YulIf",
															"src": "359:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:6",
														"nodeType": "YulTypedName",
														"src": "181:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:6",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													}
												],
												"src": "146:380:6"
											},
											{
												"body": {
													"nativeSrc": "587:65:6",
													"nodeType": "YulBlock",
													"src": "587:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:6",
																		"nodeType": "YulLiteral",
																		"src": "604:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																},
																"nativeSrc": "597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "597:14:6"
															},
															"nativeSrc": "597:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:6"
														},
														{
															"nativeSrc": "620:26:6",
															"nodeType": "YulAssignment",
															"src": "620:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:6",
																		"nodeType": "YulLiteral",
																		"src": "638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:6",
																		"nodeType": "YulLiteral",
																		"src": "641:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:6"
																},
																"nativeSrc": "628:18:6",
																"nodeType": "YulFunctionCall",
																"src": "628:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:6",
														"nodeType": "YulTypedName",
														"src": "570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:6",
														"nodeType": "YulTypedName",
														"src": "578:4:6",
														"type": ""
													}
												],
												"src": "531:121:6"
											},
											{
												"body": {
													"nativeSrc": "738:437:6",
													"nodeType": "YulBlock",
													"src": "738:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:6",
																"nodeType": "YulBlock",
																"src": "771:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:6",
																					"nodeType": "YulLiteral",
																					"src": "792:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:6"
																			},
																			"nativeSrc": "785:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:6"
																		},
																		"nativeSrc": "785:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:6"
																	},
																	{
																		"nativeSrc": "814:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:6",
																					"nodeType": "YulLiteral",
																					"src": "836:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:6",
																					"nodeType": "YulLiteral",
																					"src": "839:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:6"
																			},
																			"nativeSrc": "826:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:6",
																				"nodeType": "YulTypedName",
																				"src": "818:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:6",
																							"nodeType": "YulLiteral",
																							"src": "890:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:6",
																									"nodeType": "YulLiteral",
																									"src": "909:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:6"
																							},
																							"nativeSrc": "893:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:6"
																					},
																					"nativeSrc": "886:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:6"
																			},
																			"nativeSrc": "876:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:6",
																				"nodeType": "YulTypedName",
																				"src": "861:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:6",
																			"nodeType": "YulBlock",
																			"src": "951:23:6",
																			"statements": [
																				{
																					"nativeSrc": "953:19:6",
																					"nodeType": "YulAssignment",
																					"src": "953:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:6",
																					"nodeType": "YulLiteral",
																					"src": "945:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:6"
																			},
																			"nativeSrc": "930:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:6"
																		},
																		"nativeSrc": "927:47:6",
																		"nodeType": "YulIf",
																		"src": "927:47:6"
																	},
																	{
																		"nativeSrc": "987:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:6"
																							},
																							"nativeSrc": "1014:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:6"
																					},
																					"nativeSrc": "1007:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:6"
																			},
																			"nativeSrc": "997:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:6",
																				"nodeType": "YulTypedName",
																				"src": "991:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:6",
																			"nodeType": "YulBlock",
																			"src": "1139:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:6"
																						},
																						"nativeSrc": "1141:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:6"
																					},
																					"nativeSrc": "1141:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:6"
																			},
																			"nativeSrc": "1086:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:6"
																		},
																		"nativeSrc": "1078:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:6",
																			"nodeType": "YulBlock",
																			"src": "1100:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:6"
																						},
																						"nativeSrc": "1111:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:6",
																			"nodeType": "YulBlock",
																			"src": "1082:3:6",
																			"statements": []
																		},
																		"src": "1078:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:6",
																		"nodeType": "YulLiteral",
																		"src": "759:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:6"
																},
																"nativeSrc": "751:11:6",
																"nodeType": "YulFunctionCall",
																"src": "751:11:6"
															},
															"nativeSrc": "748:421:6",
															"nodeType": "YulIf",
															"src": "748:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:6",
														"nodeType": "YulTypedName",
														"src": "710:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:6",
														"nodeType": "YulTypedName",
														"src": "717:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:6",
														"nodeType": "YulTypedName",
														"src": "722:10:6",
														"type": ""
													}
												],
												"src": "657:518:6"
											},
											{
												"body": {
													"nativeSrc": "1265:81:6",
													"nodeType": "YulBlock",
													"src": "1265:81:6",
													"statements": [
														{
															"nativeSrc": "1275:65:6",
															"nodeType": "YulAssignment",
															"src": "1275:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:6"
																								},
																								"nativeSrc": "1304:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:6"
																								},
																								"nativeSrc": "1317:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:6"
																						},
																						"nativeSrc": "1300:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:6"
																				},
																				"nativeSrc": "1296:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:6"
																		},
																		"nativeSrc": "1286:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:6"
																		},
																		"nativeSrc": "1328:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:6"
																},
																"nativeSrc": "1283:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:6",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:6",
														"nodeType": "YulTypedName",
														"src": "1248:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:6",
														"nodeType": "YulTypedName",
														"src": "1256:4:6",
														"type": ""
													}
												],
												"src": "1180:166:6"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:6",
													"nodeType": "YulBlock",
													"src": "1447:1203:6",
													"statements": [
														{
															"nativeSrc": "1457:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:6"
																},
																"nativeSrc": "1471:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:6",
																"nodeType": "YulBlock",
																"src": "1524:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:6"
																			},
																			"nativeSrc": "1526:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:6"
																		},
																		"nativeSrc": "1526:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:6"
																				},
																				"nativeSrc": "1508:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:6"
																		},
																		"nativeSrc": "1504:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:6"
																},
																"nativeSrc": "1493:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:6"
															},
															"nativeSrc": "1490:56:6",
															"nodeType": "YulIf",
															"src": "1490:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:6"
																				},
																				"nativeSrc": "1631:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:6"
																		},
																		"nativeSrc": "1605:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:6"
																},
																"nativeSrc": "1555:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:6"
															},
															"nativeSrc": "1555:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:6"
														},
														{
															"nativeSrc": "1661:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:6",
																"nodeType": "YulLiteral",
																"src": "1678:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:6",
															"nodeType": "YulAssignment",
															"src": "1688:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:6",
																"nodeType": "YulLiteral",
																"src": "1701:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:6",
																		"nodeType": "YulBlock",
																		"src": "1751:642:6",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:6"
																							},
																							"nativeSrc": "1792:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:6"
																					},
																					"nativeSrc": "1780:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:6",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:6"
																					},
																					"nativeSrc": "1827:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:6",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:6",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:6",
																					"nodeType": "YulBlock",
																					"src": "1955:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:6"
																												},
																												"nativeSrc": "1994:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:6"
																										},
																										"nativeSrc": "1988:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:6"
																								},
																								"nativeSrc": "1973:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:6"
																							},
																							"nativeSrc": "1973:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:6"
																						},
																						{
																							"nativeSrc": "2032:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:6"
																								},
																								"nativeSrc": "2042:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:6",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:6"
																								},
																								"nativeSrc": "2086:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:6"
																					},
																					"nativeSrc": "1906:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:6"
																				},
																				"nativeSrc": "1898:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:6",
																					"nodeType": "YulBlock",
																					"src": "1921:21:6",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:6",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:6",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:6"
																								},
																								"nativeSrc": "1928:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:6",
																					"nodeType": "YulBlock",
																					"src": "1902:3:6",
																					"statements": []
																				},
																				"src": "1898:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:6",
																					"nodeType": "YulBlock",
																					"src": "2168:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:6"
																										},
																										"nativeSrc": "2209:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:6"
																								},
																								"nativeSrc": "2203:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:6"
																																		},
																																		"nativeSrc": "2288:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:6"
																																},
																																"nativeSrc": "2284:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:6"
																																},
																																"nativeSrc": "2310:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:6"
																														},
																														"nativeSrc": "2280:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:6"
																												},
																												"nativeSrc": "2276:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:6"
																										},
																										"nativeSrc": "2261:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:6"
																								},
																								"nativeSrc": "2246:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:6"
																							},
																							"nativeSrc": "2246:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:6"
																					},
																					"nativeSrc": "2136:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:6"
																				},
																				"nativeSrc": "2133:201:6",
																				"nodeType": "YulIf",
																				"src": "2133:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:6"
																									},
																									"nativeSrc": "2364:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:6"
																							},
																							"nativeSrc": "2360:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:6"
																					},
																					"nativeSrc": "2347:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:6"
																				},
																				"nativeSrc": "2347:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:6"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:6",
																	"nodeType": "YulCase",
																	"src": "1744:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:6",
																		"nodeType": "YulBlock",
																		"src": "2410:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:6",
																					"nodeType": "YulBlock",
																					"src": "2473:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:6"
																										},
																										"nativeSrc": "2506:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:6"
																								},
																								"nativeSrc": "2500:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:6"
																				},
																				"nativeSrc": "2451:89:6",
																				"nodeType": "YulIf",
																				"src": "2451:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:6"
																							},
																							"nativeSrc": "2566:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:6"
																					},
																					"nativeSrc": "2553:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:6"
																				},
																				"nativeSrc": "2553:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:6",
																	"nodeType": "YulCase",
																	"src": "2402:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:6"
																},
																"nativeSrc": "1721:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:6"
															},
															"nativeSrc": "1714:930:6",
															"nodeType": "YulSwitch",
															"src": "1714:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:6",
														"nodeType": "YulTypedName",
														"src": "1432:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:6",
														"nodeType": "YulTypedName",
														"src": "1438:3:6",
														"type": ""
													}
												],
												"src": "1351:1299:6"
											},
											{
												"body": {
													"nativeSrc": "2687:95:6",
													"nodeType": "YulBlock",
													"src": "2687:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2704:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2704:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2711:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2711:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:10:6",
																				"nodeType": "YulLiteral",
																				"src": "2716:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:6"
																		},
																		"nativeSrc": "2707:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:6"
																},
																"nativeSrc": "2697:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2697:31:6"
															},
															"nativeSrc": "2697:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2697:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:6"
																},
																"nativeSrc": "2737:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:6"
															},
															"nativeSrc": "2737:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:6"
																},
																"nativeSrc": "2761:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:6"
															},
															"nativeSrc": "2761:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2655:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2655:127:6"
											},
											{
												"body": {
													"nativeSrc": "2856:306:6",
													"nodeType": "YulBlock",
													"src": "2856:306:6",
													"statements": [
														{
															"nativeSrc": "2866:10:6",
															"nodeType": "YulAssignment",
															"src": "2866:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2875:1:6",
																"nodeType": "YulLiteral",
																"src": "2875:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2866:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:6"
																}
															]
														},
														{
															"nativeSrc": "2885:13:6",
															"nodeType": "YulAssignment",
															"src": "2885:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "2893:5:6",
																"nodeType": "YulIdentifier",
																"src": "2893:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2885:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2943:213:6",
																"nodeType": "YulBlock",
																"src": "2943:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "2985:22:6",
																			"nodeType": "YulBlock",
																			"src": "2985:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2987:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "2987:16:6"
																						},
																						"nativeSrc": "2987:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2987:18:6"
																					},
																					"nativeSrc": "2987:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2987:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2963:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2963:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "2973:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2973:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "2978:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2978:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "2969:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2969:3:6"
																					},
																					"nativeSrc": "2969:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2969:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "2960:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2960:2:6"
																			},
																			"nativeSrc": "2960:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2960:24:6"
																		},
																		"nativeSrc": "2957:50:6",
																		"nodeType": "YulIf",
																		"src": "2957:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "3040:29:6",
																			"nodeType": "YulBlock",
																			"src": "3040:29:6",
																			"statements": [
																				{
																					"nativeSrc": "3042:25:6",
																					"nodeType": "YulAssignment",
																					"src": "3042:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3055:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3055:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3062:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "3062:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3051:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3051:3:6"
																						},
																						"nativeSrc": "3051:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3051:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3042:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "3042:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3027:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3027:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3023:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3023:3:6"
																			},
																			"nativeSrc": "3023:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3023:16:6"
																		},
																		"nativeSrc": "3020:49:6",
																		"nodeType": "YulIf",
																		"src": "3020:49:6"
																	},
																	{
																		"nativeSrc": "3082:23:6",
																		"nodeType": "YulAssignment",
																		"src": "3082:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3094:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3094:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3100:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3100:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3090:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3090:3:6"
																			},
																			"nativeSrc": "3090:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3090:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3082:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3082:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3118:28:6",
																		"nodeType": "YulAssignment",
																		"src": "3118:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3134:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3134:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3137:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3137:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3130:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3130:3:6"
																			},
																			"nativeSrc": "3130:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3130:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3118:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3118:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2918:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2918:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2928:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2915:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2915:2:6"
																},
																"nativeSrc": "2915:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2915:15:6"
															},
															"nativeSrc": "2907:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2931:3:6",
																"nodeType": "YulBlock",
																"src": "2931:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2911:3:6",
																"nodeType": "YulBlock",
																"src": "2911:3:6",
																"statements": []
															},
															"src": "2907:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2787:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2815:5:6",
														"nodeType": "YulTypedName",
														"src": "2815:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2822:8:6",
														"nodeType": "YulTypedName",
														"src": "2822:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "2832:3:6",
														"nodeType": "YulTypedName",
														"src": "2832:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2840:5:6",
														"nodeType": "YulTypedName",
														"src": "2840:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2847:4:6",
														"nodeType": "YulTypedName",
														"src": "2847:4:6",
														"type": ""
													}
												],
												"src": "2787:375:6"
											},
											{
												"body": {
													"nativeSrc": "3226:843:6",
													"nodeType": "YulBlock",
													"src": "3226:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:52:6",
																"nodeType": "YulBlock",
																"src": "3264:52:6",
																"statements": [
																	{
																		"nativeSrc": "3278:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3278:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3287:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3287:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3278:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3278:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3301:5:6",
																		"nodeType": "YulLeave",
																		"src": "3301:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3246:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3246:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:6"
																},
																"nativeSrc": "3239:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3239:16:6"
															},
															"nativeSrc": "3236:80:6",
															"nodeType": "YulIf",
															"src": "3236:80:6"
														},
														{
															"body": {
																"nativeSrc": "3349:52:6",
																"nodeType": "YulBlock",
																"src": "3349:52:6",
																"statements": [
																	{
																		"nativeSrc": "3363:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3363:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3372:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3372:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3363:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3386:5:6",
																		"nodeType": "YulLeave",
																		"src": "3386:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3335:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3335:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3328:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:6"
																},
																"nativeSrc": "3328:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3328:12:6"
															},
															"nativeSrc": "3325:76:6",
															"nodeType": "YulIf",
															"src": "3325:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3437:52:6",
																		"nodeType": "YulBlock",
																		"src": "3437:52:6",
																		"statements": [
																			{
																				"nativeSrc": "3451:10:6",
																				"nodeType": "YulAssignment",
																				"src": "3451:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3460:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3460:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3451:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3451:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3474:5:6",
																				"nodeType": "YulLeave",
																				"src": "3474:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3430:59:6",
																	"nodeType": "YulCase",
																	"src": "3430:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3435:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3435:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3505:167:6",
																		"nodeType": "YulBlock",
																		"src": "3505:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3540:22:6",
																					"nodeType": "YulBlock",
																					"src": "3540:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3542:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "3542:16:6"
																								},
																								"nativeSrc": "3542:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3542:18:6"
																							},
																							"nativeSrc": "3542:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3542:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3525:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3525:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3535:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3535:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3522:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3522:2:6"
																					},
																					"nativeSrc": "3522:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3522:17:6"
																				},
																				"nativeSrc": "3519:43:6",
																				"nodeType": "YulIf",
																				"src": "3519:43:6"
																			},
																			{
																				"nativeSrc": "3575:25:6",
																				"nodeType": "YulAssignment",
																				"src": "3575:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3588:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3588:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3598:1:6",
																							"nodeType": "YulLiteral",
																							"src": "3598:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3584:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3584:3:6"
																					},
																					"nativeSrc": "3584:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3584:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3575:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3575:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3613:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3613:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3623:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3623:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "3617:2:6",
																						"nodeType": "YulTypedName",
																						"src": "3617:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3637:7:6",
																				"nodeType": "YulAssignment",
																				"src": "3637:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3643:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3643:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "3637:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3637:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3657:5:6",
																				"nodeType": "YulLeave",
																				"src": "3657:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3498:174:6",
																	"nodeType": "YulCase",
																	"src": "3498:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3503:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3417:4:6",
																"nodeType": "YulIdentifier",
																"src": "3417:4:6"
															},
															"nativeSrc": "3410:262:6",
															"nodeType": "YulSwitch",
															"src": "3410:262:6"
														},
														{
															"body": {
																"nativeSrc": "3770:114:6",
																"nodeType": "YulBlock",
																"src": "3770:114:6",
																"statements": [
																	{
																		"nativeSrc": "3784:28:6",
																		"nodeType": "YulAssignment",
																		"src": "3784:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3797:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3797:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3803:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3803:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3793:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3793:3:6"
																			},
																			"nativeSrc": "3793:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3793:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3784:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3784:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3825:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3825:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3835:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3835:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "3829:2:6",
																				"nodeType": "YulTypedName",
																				"src": "3829:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3849:7:6",
																		"nodeType": "YulAssignment",
																		"src": "3849:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3855:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3855:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "3849:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3849:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3869:5:6",
																		"nodeType": "YulLeave",
																		"src": "3869:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3694:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3694:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3700:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3700:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3691:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3691:2:6"
																				},
																				"nativeSrc": "3691:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3691:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3708:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3708:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3718:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3718:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3705:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3705:2:6"
																				},
																				"nativeSrc": "3705:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:6"
																		},
																		"nativeSrc": "3687:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3731:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3731:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3737:3:6",
																						"nodeType": "YulLiteral",
																						"src": "3737:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3728:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3728:2:6"
																				},
																				"nativeSrc": "3728:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3728:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3746:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3746:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3756:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3756:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3743:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3743:2:6"
																				},
																				"nativeSrc": "3743:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3743:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3724:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:6"
																		},
																		"nativeSrc": "3724:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3724:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3684:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:6"
																},
																"nativeSrc": "3684:77:6",
																"nodeType": "YulFunctionCall",
																"src": "3684:77:6"
															},
															"nativeSrc": "3681:203:6",
															"nodeType": "YulIf",
															"src": "3681:203:6"
														},
														{
															"nativeSrc": "3893:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3893:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3935:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3935:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3941:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3941:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3955:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3955:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:6"
																		},
																		"nativeSrc": "3951:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3916:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3916:18:6"
																},
																"nativeSrc": "3916:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3916:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3897:7:6",
																	"nodeType": "YulTypedName",
																	"src": "3897:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3906:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3906:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4003:22:6",
																"nodeType": "YulBlock",
																"src": "4003:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4005:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4005:16:6"
																			},
																			"nativeSrc": "4005:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4005:18:6"
																		},
																		"nativeSrc": "4005:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4005:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3973:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3973:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3990:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3990:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3986:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3986:3:6"
																				},
																				"nativeSrc": "3986:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3986:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3994:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3994:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3982:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:6"
																		},
																		"nativeSrc": "3982:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3970:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3970:2:6"
																},
																"nativeSrc": "3970:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3970:32:6"
															},
															"nativeSrc": "3967:58:6",
															"nodeType": "YulIf",
															"src": "3967:58:6"
														},
														{
															"nativeSrc": "4034:29:6",
															"nodeType": "YulAssignment",
															"src": "4034:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4047:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4056:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4056:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4043:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:6"
																},
																"nativeSrc": "4043:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4043:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4034:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4034:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3167:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3197:4:6",
														"nodeType": "YulTypedName",
														"src": "3197:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3203:8:6",
														"nodeType": "YulTypedName",
														"src": "3203:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3216:5:6",
														"nodeType": "YulTypedName",
														"src": "3216:5:6",
														"type": ""
													}
												],
												"src": "3167:902:6"
											},
											{
												"body": {
													"nativeSrc": "4144:61:6",
													"nodeType": "YulBlock",
													"src": "4144:61:6",
													"statements": [
														{
															"nativeSrc": "4154:45:6",
															"nodeType": "YulAssignment",
															"src": "4154:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4184:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4184:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4190:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4190:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4163:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "4163:20:6"
																},
																"nativeSrc": "4163:36:6",
																"nodeType": "YulFunctionCall",
																"src": "4163:36:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4154:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "4074:131:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4115:4:6",
														"nodeType": "YulTypedName",
														"src": "4115:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4121:8:6",
														"nodeType": "YulTypedName",
														"src": "4121:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4134:5:6",
														"nodeType": "YulTypedName",
														"src": "4134:5:6",
														"type": ""
													}
												],
												"src": "4074:131:6"
											},
											{
												"body": {
													"nativeSrc": "4262:116:6",
													"nodeType": "YulBlock",
													"src": "4262:116:6",
													"statements": [
														{
															"nativeSrc": "4272:20:6",
															"nodeType": "YulAssignment",
															"src": "4272:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4287:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4287:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4290:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4290:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4283:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:6"
																},
																"nativeSrc": "4283:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4283:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4272:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4350:22:6",
																"nodeType": "YulBlock",
																"src": "4350:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4352:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4352:16:6"
																			},
																			"nativeSrc": "4352:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:18:6"
																		},
																		"nativeSrc": "4352:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4321:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4321:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4314:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4314:6:6"
																				},
																				"nativeSrc": "4314:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4314:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4328:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4328:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4335:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4335:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4344:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4344:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4331:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4331:3:6"
																						},
																						"nativeSrc": "4331:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4331:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4325:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4325:2:6"
																				},
																				"nativeSrc": "4325:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4311:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:6"
																		},
																		"nativeSrc": "4311:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:6"
																},
																"nativeSrc": "4304:45:6",
																"nodeType": "YulFunctionCall",
																"src": "4304:45:6"
															},
															"nativeSrc": "4301:71:6",
															"nodeType": "YulIf",
															"src": "4301:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4210:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4241:1:6",
														"nodeType": "YulTypedName",
														"src": "4241:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4244:1:6",
														"nodeType": "YulTypedName",
														"src": "4244:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4250:7:6",
														"nodeType": "YulTypedName",
														"src": "4250:7:6",
														"type": ""
													}
												],
												"src": "4210:168:6"
											},
											{
												"body": {
													"nativeSrc": "4421:171:6",
													"nodeType": "YulBlock",
													"src": "4421:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4452:111:6",
																"nodeType": "YulBlock",
																"src": "4452:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4473:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4473:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4480:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4480:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4485:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4485:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4476:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4476:3:6"
																					},
																					"nativeSrc": "4476:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4476:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4466:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4466:6:6"
																			},
																			"nativeSrc": "4466:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4466:31:6"
																		},
																		"nativeSrc": "4466:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4517:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4520:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4520:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4510:6:6"
																			},
																			"nativeSrc": "4510:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4510:15:6"
																		},
																		"nativeSrc": "4510:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4545:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4545:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4548:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4538:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4538:6:6"
																			},
																			"nativeSrc": "4538:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4538:15:6"
																		},
																		"nativeSrc": "4538:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4441:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4441:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:6"
																},
																"nativeSrc": "4434:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4434:9:6"
															},
															"nativeSrc": "4431:132:6",
															"nodeType": "YulIf",
															"src": "4431:132:6"
														},
														{
															"nativeSrc": "4572:14:6",
															"nodeType": "YulAssignment",
															"src": "4572:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4584:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "4577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:6"
																},
																"nativeSrc": "4577:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4577:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4572:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4572:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "4383:209:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4406:1:6",
														"nodeType": "YulTypedName",
														"src": "4406:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4409:1:6",
														"nodeType": "YulTypedName",
														"src": "4409:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4415:1:6",
														"nodeType": "YulTypedName",
														"src": "4415:1:6",
														"type": ""
													}
												],
												"src": "4383:209:6"
											},
											{
												"body": {
													"nativeSrc": "4646:79:6",
													"nodeType": "YulBlock",
													"src": "4646:79:6",
													"statements": [
														{
															"nativeSrc": "4656:17:6",
															"nodeType": "YulAssignment",
															"src": "4656:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4668:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4668:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4671:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:6"
																},
																"nativeSrc": "4664:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4664:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4656:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4656:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4697:22:6",
																"nodeType": "YulBlock",
																"src": "4697:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4699:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4699:16:6"
																			},
																			"nativeSrc": "4699:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4699:18:6"
																		},
																		"nativeSrc": "4699:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4688:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4688:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4694:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4694:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4685:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:6"
																},
																"nativeSrc": "4685:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4685:11:6"
															},
															"nativeSrc": "4682:37:6",
															"nodeType": "YulIf",
															"src": "4682:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4597:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4628:1:6",
														"nodeType": "YulTypedName",
														"src": "4628:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4631:1:6",
														"nodeType": "YulTypedName",
														"src": "4631:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4637:4:6",
														"nodeType": "YulTypedName",
														"src": "4637:4:6",
														"type": ""
													}
												],
												"src": "4597:128:6"
											},
											{
												"body": {
													"nativeSrc": "4831:102:6",
													"nodeType": "YulBlock",
													"src": "4831:102:6",
													"statements": [
														{
															"nativeSrc": "4841:26:6",
															"nodeType": "YulAssignment",
															"src": "4841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4849:3:6"
																},
																"nativeSrc": "4849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4883:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4883:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4898:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4914:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4914:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4919:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4919:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4910:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4910:3:6"
																						},
																						"nativeSrc": "4910:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4910:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4923:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4923:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4906:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:6"
																				},
																				"nativeSrc": "4906:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4906:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:6"
																		},
																		"nativeSrc": "4894:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4876:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:6"
																},
																"nativeSrc": "4876:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4876:51:6"
															},
															"nativeSrc": "4876:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4876:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4730:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4800:9:6",
														"nodeType": "YulTypedName",
														"src": "4800:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4811:6:6",
														"nodeType": "YulTypedName",
														"src": "4811:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4822:4:6",
														"nodeType": "YulTypedName",
														"src": "4822:4:6",
														"type": ""
													}
												],
												"src": "4730:203:6"
											},
											{
												"body": {
													"nativeSrc": "4986:77:6",
													"nodeType": "YulBlock",
													"src": "4986:77:6",
													"statements": [
														{
															"nativeSrc": "4996:16:6",
															"nodeType": "YulAssignment",
															"src": "4996:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5007:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5007:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5010:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:6"
																},
																"nativeSrc": "5003:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5003:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5035:22:6",
																"nodeType": "YulBlock",
																"src": "5035:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5037:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5037:16:6"
																			},
																			"nativeSrc": "5037:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5037:18:6"
																		},
																		"nativeSrc": "5037:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5027:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5030:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5030:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5024:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5024:2:6"
																},
																"nativeSrc": "5024:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5024:10:6"
															},
															"nativeSrc": "5021:36:6",
															"nodeType": "YulIf",
															"src": "5021:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4938:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4969:1:6",
														"nodeType": "YulTypedName",
														"src": "4969:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4972:1:6",
														"nodeType": "YulTypedName",
														"src": "4972:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4978:3:6",
														"nodeType": "YulTypedName",
														"src": "4978:3:6",
														"type": ""
													}
												],
												"src": "4938:125:6"
											},
											{
												"body": {
													"nativeSrc": "5225:188:6",
													"nodeType": "YulBlock",
													"src": "5225:188:6",
													"statements": [
														{
															"nativeSrc": "5235:26:6",
															"nodeType": "YulAssignment",
															"src": "5235:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5247:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5247:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5258:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5243:3:6"
																},
																"nativeSrc": "5243:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5243:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5235:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5235:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5292:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5292:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5308:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5308:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5313:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5313:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5304:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5304:3:6"
																						},
																						"nativeSrc": "5304:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5304:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5317:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5317:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5300:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5300:3:6"
																				},
																				"nativeSrc": "5300:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5300:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nativeSrc": "5288:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:6"
																},
																"nativeSrc": "5270:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5270:51:6"
															},
															"nativeSrc": "5270:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5270:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5341:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5352:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:6"
																		},
																		"nativeSrc": "5337:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5357:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5357:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:6"
																},
																"nativeSrc": "5330:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5330:34:6"
															},
															"nativeSrc": "5330:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5330:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5380:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:6"
																		},
																		"nativeSrc": "5380:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5400:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5400:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5373:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:6"
																},
																"nativeSrc": "5373:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5373:34:6"
															},
															"nativeSrc": "5373:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5373:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5068:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5178:9:6",
														"nodeType": "YulTypedName",
														"src": "5178:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5189:6:6",
														"nodeType": "YulTypedName",
														"src": "5189:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5197:6:6",
														"nodeType": "YulTypedName",
														"src": "5197:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5205:6:6",
														"nodeType": "YulTypedName",
														"src": "5205:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5216:4:6",
														"nodeType": "YulTypedName",
														"src": "5216:4:6",
														"type": ""
													}
												],
												"src": "5068:345:6"
											},
											{
												"body": {
													"nativeSrc": "5519:76:6",
													"nodeType": "YulBlock",
													"src": "5519:76:6",
													"statements": [
														{
															"nativeSrc": "5529:26:6",
															"nodeType": "YulAssignment",
															"src": "5529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:3:6"
																},
																"nativeSrc": "5537:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5529:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5582:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:6"
																},
																"nativeSrc": "5564:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5564:25:6"
															},
															"nativeSrc": "5564:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5564:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5418:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5488:9:6",
														"nodeType": "YulTypedName",
														"src": "5488:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5499:6:6",
														"nodeType": "YulTypedName",
														"src": "5499:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5510:4:6",
														"nodeType": "YulTypedName",
														"src": "5510:4:6",
														"type": ""
													}
												],
												"src": "5418:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600b8054610100600160a81b03191633610100021790555f600e556018805460ff19169055348015610034575f5ffd5b506040518060400160405280600881526020016730b1319031b7b4b760c11b81525060405180604001604052806005815260200164435942434360d81b8152508160039081610083919061045f565b506004610090828261045f565b5050600b805460ff191660129081179091556100ae9150600a610612565b6100bc90633b9aca00610624565b600c8190556100cc905f1961063b565b6100d7905f1961065a565b600d556002600f81905560105560016011819055601255600b546013805461010083046001600160a01b03166001600160a01b0319918216811790925560148054909116909117905561012e9060ff16600a610612565b61013b9062989680610624565b601655600160075f61015a600b5461010090046001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182015f908120805495151560ff1996871617905560135482168152600790935281832080548516600190811790915560145490911683528183208054851682179055308352908220805490931681179092556008906101df600b5461010090046001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182015f908120805495151560ff19968716179055601354821681526008845282812080548616600190811790915560145483168252838220805490961617909455600d54600b5461010090049091168452600590925290912081905561025f903390610264565b610680565b6001600160a01b0382166102925760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b61029d5f83836102a1565b5050565b6001600160a01b0383166102cb578060025f8282546102c0919061066d565b9091555061033b9050565b6001600160a01b0383165f908152602081905260409020548181101561031d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610289565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661035757600280548290039055610375565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103ba91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806103ef57607f821691505b60208210810361040d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561045a57805f5260205f20601f840160051c810160208510156104385750805b601f840160051c820191505b81811015610457575f8155600101610444565b50505b505050565b81516001600160401b03811115610478576104786103c7565b61048c8161048684546103db565b84610413565b6020601f8211600181146104be575f83156104a75750848201515b5f19600385901b1c1916600184901b178455610457565b5f84815260208120601f198516915b828110156104ed57878501518255602094850194600190920191016104cd565b508482101561050a57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156105685780850481111561054c5761054c610519565b600184161561055a57908102905b60019390931c928002610531565b935093915050565b5f8261057e5750600161060c565b8161058a57505f61060c565b81600181146105a057600281146105aa576105c6565b600191505061060c565b60ff8411156105bb576105bb610519565b50506001821b61060c565b5060208310610133831016604e8410600b84101617156105e9575081810a61060c565b6105f55f19848461052d565b805f190482111561060857610608610519565b0290505b92915050565b5f61061d8383610570565b9392505050565b808202811582820484141761060c5761060c610519565b5f8261065557634e487b7160e01b5f52601260045260245ffd5b500690565b8181038181111561060c5761060c610519565b8082018082111561060c5761060c610519565b611d3f8061068d5f395ff3fe6080604052600436106101de575f3560e01c8063838fcc90116100fd578063c486377011610092578063dd62ed3e11610062578063dd62ed3e1461059f578063f66608fe146105e3578063fdeb889f146105f7578063ffb54a9914610616575f5ffd5b8063c486377014610520578063c9567bf91461053f578063cba0e99614610553578063d00efb2f1461058a575f5ffd5b806395d89b41116100cd57806395d89b41146104af578063a8b08982146104c3578063a9059cbb146104e2578063c30796ab14610501575f5ffd5b8063838fcc901461043d57806383ad79941461045a5780638873b15f1461046e5780638da5cb5b1461048d575f5ffd5b80633af32abf116101735780635fae0576116101435780635fae0576146103a95780636049876e146103e0578063706407fd146103ff57806370a082311461041e575f5ffd5b80633af32abf14610306578063437823ec146103345780634549b039146103535780635342acb414610372575f5ffd5b80631cf8fef5116101ae5780631cf8fef51461028157806323b872dd146102b2578063313ce567146102d157806332035504146102f2575f5ffd5b8063053ab182146101e957806306fdde031461020a578063095ea7b31461023457806318160ddd14610263575f5ffd5b366101e557005b5f5ffd5b3480156101f4575f5ffd5b50610208610203366004611aae565b61062f565b005b348015610215575f5ffd5b5061021e61071a565b60405161022b9190611ac5565b60405180910390f35b34801561023f575f5ffd5b5061025361024e366004611b15565b6107aa565b604051901515815260200161022b565b34801561026e575f5ffd5b50600c545b60405190815260200161022b565b34801561028c575f5ffd5b506014546001600160a01b03165b6040516001600160a01b03909116815260200161022b565b3480156102bd575f5ffd5b506102536102cc366004611b3d565b6107c3565b3480156102dc575f5ffd5b50600b5460405160ff909116815260200161022b565b3480156102fd575f5ffd5b50600e54610273565b348015610311575f5ffd5b50610253610320366004611b77565b60086020525f908152604090205460ff1681565b34801561033f575f5ffd5b5061020861034e366004611b77565b6107e6565b34801561035e575f5ffd5b5061027361036d366004611b90565b61082d565b34801561037d575f5ffd5b5061025361038c366004611b77565b6001600160a01b03165f9081526007602052604090205460ff1690565b3480156103b4575f5ffd5b506102536103c3366004611b77565b6001600160a01b03165f9081526008602052604090205460ff1690565b3480156103eb575f5ffd5b506102086103fa366004611b77565b6108b3565b34801561040a575f5ffd5b50610208610419366004611b77565b6109f8565b348015610429575f5ffd5b50610273610438366004611b77565b610a5f565b348015610448575f5ffd5b506013546001600160a01b031661029a565b348015610465575f5ffd5b50600f54610273565b348015610479575f5ffd5b50610208610488366004611b77565b610abb565b348015610498575f5ffd5b50600b5461010090046001600160a01b031661029a565b3480156104ba575f5ffd5b5061021e610b15565b3480156104ce575f5ffd5b5060155461029a906001600160a01b031681565b3480156104ed575f5ffd5b506102536104fc366004611b15565b610b24565b34801561050c575f5ffd5b5061020861051b366004611b77565b610b31565b34801561052b575f5ffd5b5061020861053a366004611b77565b610bdf565b34801561054a575f5ffd5b50610208610c46565b34801561055e575f5ffd5b5061025361056d366004611b77565b6001600160a01b03165f9081526009602052604090205460ff1690565b348015610595575f5ffd5b5061027360175481565b3480156105aa575f5ffd5b506102736105b9366004611bc2565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105ee575f5ffd5b50601154610273565b348015610602575f5ffd5b50610208610611366004611b77565b610c7b565b348015610621575f5ffd5b506018546102539060ff1681565b335f8181526009602052604090205460ff16156106a85760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6106b283610e17565b5050506001600160a01b0383165f908152600560205260409020549091506106db908290611c07565b6001600160a01b0383165f90815260056020526040902055600d54610701908290611c07565b600d55600e54610712908490611c1a565b600e55505050565b60606003805461072990611c2d565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611c2d565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f336107b7818585610e68565b60019150505b92915050565b5f336107d0858285610e7a565b6107db858585610ef6565b506001949350505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600c548311156108805760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015260640161069f565b8161089c575f61088f84610e17565b509193506107bd92505050565b5f6108a684610e17565b509093506107bd92505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff161561093c5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015260640161069f565b6001600160a01b0381165f9081526005602052604090205415610993576001600160a01b0381165f9081526005602052604090205461097a9061120a565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319169091179055565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610a3f5760405162461bcd60e51b815260040161069f90611c65565b601480546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526009602052604081205460ff1615610a9a57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546107bd9061120a565b600b54339061010090046001600160a01b03166001600160a01b03160361082a57601580546001600160a01b0319166001600160a01b039290921691821790555f908152600860205260409020805460ff19166001179055565b60606004805461072990611c2d565b5f336107b7818585610ef6565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526008602052604090205460ff1615610bba5760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c69737465640000604482015260640161069f565b6001600160a01b0381165f908152600860205260409020805460ff1916600117905550565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610c265760405162461bcd60e51b815260040161069f90611c65565b601380546001600160a01b0383166001600160a01b031990911617905550565b600b54339061010090046001600160a01b03166001600160a01b031603610c79576018805460ff19166001179055436017555b565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff16610d035760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c756465640000000000604482015260640161069f565b5f5b600a54811015610e1357816001600160a01b0316600a8281548110610d2c57610d2c611cab565b5f918252602090912001546001600160a01b031603610e0b57600a8054610d5590600190611c07565b81548110610d6557610d65611cab565b5f91825260209091200154600a80546001600160a01b039092169183908110610d9057610d90611cab565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600990925220805460ff19169055600a805480610de757610de7611cbf565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610d05565b5050565b5f5f5f5f5f610e258661128c565b90505f610e328288611c07565b90505f610e3d6112bf565b90505f610e4a8284611cd3565b90505f610e57838b611cd3565b9a9199509297509095509350505050565b610e7583838360016112e0565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610ef05781811015610ee257604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161069f565b610ef084848484035f6112e0565b50505050565b6018548390839060ff16610f70576001600160a01b0382165f9081526008602052604090205460ff16610f6b5760405162461bcd60e51b815260206004820152601760248201527f54726164696e67206e6f742079657420656e61626c6564000000000000000000604482015260640161069f565b610ff6565b601754610f7e906003611c1a565b4311610ff6576001600160a01b0381165f9081526008602052604090205460ff16610ff65760405162461bcd60e51b815260206004820152602260248201527f4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374604482015261195960f21b606482015260840161069f565b6001600160a01b03851661105a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069f565b6001600160a01b0384166110bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069f565b5f6110c686610a5f565b9050838110156111275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069f565b6001600160a01b0385165f9081526007602052604090205460ff1661119e576016548461115387610a5f565b61115d9190611c1a565b111561119e5760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b604482015260640161069f565b6015545f906001600160a01b03888116911614806111c957506015546001600160a01b038781169116145b156111d2575060015b6001600160a01b0387165f9081526007602052604090205460ff16156111f557505f5b611201878787846113b2565b50505050505050565b5f600d548211156112705760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b606482015260840161069f565b5f6112796112bf565b90506112858184611cea565b9392505050565b5f5f601154600f5461129e9190611c1a565b90505f60646112ad8386611cd3565b6112b79190611cea565b949350505050565b5f5f5f6112ca611521565b90925090506112d98183611cea565b9250505090565b6001600160a01b0384166113095760405163e602df0560e01b81525f600482015260240161069f565b6001600160a01b03831661133257604051634a1406b160e11b81525f600482015260240161069f565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ef057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113a491815260200190565b60405180910390a350505050565b806113bf576113bf611691565b6001600160a01b0384165f9081526009602052604090205460ff1680156113fe57506001600160a01b0383165f9081526009602052604090205460ff16155b156114135761140e8484846116be565b61150b565b6001600160a01b0384165f9081526009602052604090205460ff1615801561145257506001600160a01b0383165f9081526009602052604090205460ff165b156114625761140e8484846117d9565b6001600160a01b0384165f9081526009602052604090205460ff161580156114a257506001600160a01b0383165f9081526009602052604090205460ff16155b156114b25761140e848484611878565b6001600160a01b0384165f9081526009602052604090205460ff1680156114f057506001600160a01b0383165f9081526009602052604090205460ff165b156115005761140e8484846118b2565b61150b848484611878565b80610ef057610ef0601054600f55601254601155565b600d54600c545f918291825b600a54811015611660578260055f600a848154811061154e5761154e611cab565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205411806115b657508160065f600a848154811061159057611590611cab565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b156115cc57600d54600c54945094505050509091565b60055f600a83815481106115e2576115e2611cab565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546116109084611c07565b925060065f600a838154811061162857611628611cab565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546116569083611c07565b915060010161152d565b50600c54600d546116719190611cea565b82101561168857600d54600c549350935050509091565b90939092509050565b600f541580156116a15750601154155b156116a857565b600f8054601055601180546012555f9182905555565b5f5f5f5f6116cb85610e17565b6001600160a01b038b165f90815260066020526040902054939750919550935091506116f8908690611c07565b6001600160a01b0388165f90815260066020908152604080832093909355600590522054611727908590611c07565b6001600160a01b038089165f908152600560205260408082209390935590881681522054611756908490611c1a565b6001600160a01b0387165f9081526005602052604090205561177987868361191b565b6117838582611a5c565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117c891815260200190565b60405180910390a350505050505050565b5f5f5f5f6117e685610e17565b6001600160a01b038b165f9081526005602052604090205493975091955093509150611813908590611c07565b6001600160a01b038089165f90815260056020908152604080832094909455918916815260069091522054611849908390611c1a565b6001600160a01b0387165f90815260066020908152604080832093909355600590522054611756908490611c1a565b5f5f5f5f61188585610e17565b6001600160a01b038b165f9081526005602052604090205493975091955093509150611727908590611c07565b5f5f5f5f6118bf85610e17565b6001600160a01b038b165f90815260066020526040902054939750919550935091506118ec908690611c07565b6001600160a01b0388165f90815260066020908152604080832093909355600590522054611813908590611c07565b5f60646011548461192c9190611cd3565b6119369190611cea565b90508015610ef0575f600261194b8484611cd3565b6119559190611cea565b6013546001600160a01b03165f9081526005602052604090205490915061197d908290611c1a565b6013546001600160a01b039081165f9081526005602052604080822093909355601454909116815220546119b2908290611c1a565b6014546001600160a01b039081165f9081526005602090815260409182902093909355601354905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36014546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600f5484611a6d9190611cd3565b611a779190611cea565b90505f611a848383611cd3565b905080600d54611a949190611c07565b600d55600e54611aa5908390611c1a565b600e5550505050565b5f60208284031215611abe575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611b10575f5ffd5b919050565b5f5f60408385031215611b26575f5ffd5b611b2f83611afa565b946020939093013593505050565b5f5f5f60608486031215611b4f575f5ffd5b611b5884611afa565b9250611b6660208501611afa565b929592945050506040919091013590565b5f60208284031215611b87575f5ffd5b61128582611afa565b5f5f60408385031215611ba1575f5ffd5b8235915060208301358015158114611bb7575f5ffd5b809150509250929050565b5f5f60408385031215611bd3575f5ffd5b611bdc83611afa565b9150611bea60208401611afa565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107bd576107bd611bf3565b808201808211156107bd576107bd611bf3565b600181811c90821680611c4157607f821691505b602082108103611c5f57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b80820281158282048414176107bd576107bd611bf3565b5f82611d0457634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220848b53d8ff40033ea81a10385d5e69bebcaac47ddb9ebfda710545112606e45864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH0 PUSH1 0xE SSTORE PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x30B1319031B7B4B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4359424343 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x90 DUP3 DUP3 PUSH2 0x45F JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0xAE SWAP2 POP PUSH1 0xA PUSH2 0x612 JUMP JUMPDEST PUSH2 0xBC SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x624 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH2 0xCC SWAP1 PUSH0 NOT PUSH2 0x63B JUMP JUMPDEST PUSH2 0xD7 SWAP1 PUSH0 NOT PUSH2 0x65A JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x2 PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 SSTORE PUSH1 0x1 PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x12 SSTORE PUSH1 0xB SLOAD PUSH1 0x13 DUP1 SLOAD PUSH2 0x100 DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x14 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x12E SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x612 JUMP JUMPDEST PUSH2 0x13B SWAP1 PUSH3 0x989680 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x15A PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD DUP3 AND DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x14 SLOAD SWAP1 SWAP2 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND DUP3 OR SWAP1 SSTORE ADDRESS DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SWAP1 PUSH2 0x1DF PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD DUP3 AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD DUP7 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x14 SLOAD DUP4 AND DUP3 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE PUSH1 0xD SLOAD PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x25F SWAP1 CALLER SWAP1 PUSH2 0x264 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29D PUSH0 DUP4 DUP4 PUSH2 0x2A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2CB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x33B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x289 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x357 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x40D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x45A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x438 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x444 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x486 DUP5 SLOAD PUSH2 0x3DB JUMP JUMPDEST DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4BE JUMPI PUSH0 DUP4 ISZERO PUSH2 0x4A7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x457 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4ED JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4CD JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x50A JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x568 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x55A JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x531 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x57E JUMPI POP PUSH1 0x1 PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH2 0x58A JUMPI POP PUSH0 PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5A0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5AA JUMPI PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x60C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5BB JUMPI PUSH2 0x5BB PUSH2 0x519 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x60C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5E9 JUMPI POP DUP2 DUP2 EXP PUSH2 0x60C JUMP JUMPDEST PUSH2 0x5F5 PUSH0 NOT DUP5 DUP5 PUSH2 0x52D JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x608 JUMPI PUSH2 0x608 PUSH2 0x519 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x61D DUP4 DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x519 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x655 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x519 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1D3F DUP1 PUSH2 0x68D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x838FCC90 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xC4863770 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC4863770 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x58A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x5FAE0576 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x5FAE0576 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x706407FD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x372 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1CF8FEF5 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x2F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E5 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xB15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x29A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0xB24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x253 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B2 DUP4 PUSH2 0xE17 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x6DB SWAP1 DUP3 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x701 SWAP1 DUP3 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x712 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7D0 DUP6 DUP3 DUP6 PUSH2 0xE7A JUMP JUMPDEST PUSH2 0x7DB DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST DUP2 PUSH2 0x89C JUMPI PUSH0 PUSH2 0x88F DUP5 PUSH2 0xE17 JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A6 DUP5 PUSH2 0xE17 JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x993 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320616C72656164792077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC79 JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x17 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xE13 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE0B JUMPI PUSH1 0xA DUP1 SLOAD PUSH2 0xD55 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD65 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD90 JUMPI PUSH2 0xD90 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xDE7 JUMPI PUSH2 0xDE7 PUSH2 0x1CBF JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xE25 DUP7 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE32 DUP3 DUP9 PUSH2 0x1C07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3D PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE4A DUP3 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE57 DUP4 DUP12 PUSH2 0x1CD3 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE75 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xEF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xEF0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF70 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xF7E SWAP1 PUSH1 0x3 PUSH2 0x1C1A JUMP JUMPDEST NUMBER GT PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x10C6 DUP7 PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119E JUMPI PUSH1 0x16 SLOAD DUP5 PUSH2 0x1153 DUP8 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST GT ISZERO PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11C9 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F5 JUMPI POP PUSH0 JUMPDEST PUSH2 0x1201 DUP8 DUP8 DUP8 DUP5 PUSH2 0x13B2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD DUP3 GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x1279 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1285 DUP2 DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x12AD DUP4 DUP7 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x12CA PUSH2 0x1521 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1332 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13A4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x13BF JUMPI PUSH2 0x13BF PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1413 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1452 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1462 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14A2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1500 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x150B DUP5 DUP5 DUP5 PUSH2 0x1878 JUMP JUMPDEST DUP1 PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1660 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x154E JUMPI PUSH2 0x154E PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x15B6 JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1590 JUMPI PUSH2 0x1590 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x15CC JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15E2 JUMPI PUSH2 0x15E2 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1610 SWAP1 DUP5 PUSH2 0x1C07 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1656 SWAP1 DUP4 PUSH2 0x1C07 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x152D JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1688 JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD ISZERO DUP1 ISZERO PUSH2 0x16A1 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x16A8 JUMPI JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x16CB DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16F8 SWAP1 DUP7 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1727 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1756 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1779 DUP8 DUP7 DUP4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x1783 DUP6 DUP3 PUSH2 0x1A5C JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17C8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x17E6 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1813 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1849 SWAP1 DUP4 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1756 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1885 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1727 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x18BF DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x18EC SWAP1 DUP7 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1813 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0x192C SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF0 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x194B DUP5 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x197D SWAP1 DUP3 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x14 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x19B2 SWAP1 DUP3 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP5 PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1A77 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A84 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x1AA5 SWAP1 DUP4 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B2F DUP4 PUSH2 0x1AFA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B58 DUP5 PUSH2 0x1AFA JUMP JUMPDEST SWAP3 POP PUSH2 0x1B66 PUSH1 0x20 DUP6 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1285 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BB7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1BDC DUP4 PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEA PUSH1 0x20 DUP5 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP12 MSTORE8 0xD8 SELFDESTRUCT BLOCKHASH SUB RETURNDATACOPY 0xA8 BYTE LT CODESIZE TSTORE MCOPY PUSH10 0xBEBCAAC47DDB9EBFDA71 SDIV GASLIMIT GT 0x26 MOD RETF PC PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "143:15440:5:-:0;;;523:35;;;-1:-1:-1;;;;;;523:35:5;548:10;523:35;;;;;-1:-1:-1;682:30:5;;1099:31;;;-1:-1:-1;;1099:31:5;;;1143:998;;;;;;;;;;1582:113:1;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;1197:9:5::1;:14:::0;;-1:-1:-1;;1197:14:5::1;1209:2;1197:14:::0;;::::1;::::0;;;1247:22:::1;::::0;-1:-1:-1;1247:2:5::1;:22;:::i;:::-;1234:35;::::0;:10:::1;:35;:::i;:::-;1224:7;:45:::0;;;1300:13:::1;::::0;-1:-1:-1;;1300:13:5::1;:::i;:::-;1293:21;::::0;-1:-1:-1;;1293:21:5::1;:::i;:::-;1282:7;:33:::0;1349:1:::1;1332:14;:18:::0;;;1363:22:::1;:39:::0;1429:1:::1;1419:7;:11:::0;;;1443:15:::1;:25:::0;1505:6:::1;::::0;1485:17:::1;:26:::0;;1505:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1505:6:5::1;-1:-1:-1::0;;;;;;1485:26:5;;::::1;::::0;::::1;::::0;;;1524:19:::1;:28:::0;;;;::::1;::::0;;::::1;::::0;;1598:22:::1;::::0;1610:9:::1;;1598:2;:22;:::i;:::-;1587:33;::::0;:8:::1;:33;:::i;:::-;1569:15;:51:::0;1733:4:::1;1703:18;:27;1722:7;2269:6:::0;;;;;-1:-1:-1;;;;;2269:6:5;;2194:91;1722:7:::1;-1:-1:-1::0;;;;;1703:27:5;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1703:27:5;;;:34;;;::::1;;-1:-1:-1::0;;1703:34:5;;::::1;;::::0;;1769:17:::1;::::0;;::::1;1750:37:::0;;:18:::1;:37:::0;;;;;;:44;;;::::1;1703:34:::0;1750:44;;::::1;::::0;;;1826:19:::1;::::0;;;::::1;1807:39:::0;;;;;:46;;;::::1;::::0;::::1;::::0;;1893:4:::1;1866:33:::0;;;;;:40;;;;::::1;::::0;::::1;::::0;;;1919:13:::1;::::0;1933:7:::1;2269:6:::0;;;;;-1:-1:-1;;;;;2269:6:5;;2194:91;1933:7:::1;-1:-1:-1::0;;;;;1919:22:5;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1919:22:5;;;:29;;;::::1;;-1:-1:-1::0;;1919:29:5;;::::1;;::::0;;1975:17:::1;::::0;;::::1;1961:32:::0;;:13:::1;:32:::0;;;;;:39;;;::::1;1919:29:::0;1961:39;;::::1;::::0;;;2027:19:::1;::::0;;::::1;2013:34:::0;;;;;:41;;;;::::1;;::::0;;;2085:7:::1;::::0;2075:6:::1;::::0;1919:29:::1;2075:6:::0;::::1;::::0;;::::1;2067:15:::0;;:7:::1;:15:::0;;;;;;:25;;;2105:26:::1;::::0;2111:10:::1;::::0;2105:5:::1;:26::i;:::-;143:15440:::0;;7447:208:1;-1:-1:-1;;;;;7517:21:1;;7513:91;;7561:32;;-1:-1:-1;;;7561:32:1;;7590:1;7561:32;;;4876:51:6;4849:18;;7561:32:1;;;;;;;;7513:91;7613:35;7629:1;7633:7;7642:5;7613:7;:35::i;:::-;7447:208;;:::o;5997:1107::-;-1:-1:-1;;;;;6086:18:1;;6082:540;;6238:5;6222:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6082:540:1;;-1:-1:-1;6082:540:1;;-1:-1:-1;;;;;6296:15:1;;6274:19;6296:15;;;;;;;;;;;6329:19;;;6325:115;;;6375:50;;-1:-1:-1;;;6375:50:1;;-1:-1:-1;;;;;5288:32:6;;6375:50:1;;;5270:51:6;5337:18;;;5330:34;;;5380:18;;;5373:34;;;5243:18;;6375:50:1;5068:345:6;6325:115:1;-1:-1:-1;;;;;6560:15:1;;:9;:15;;;;;;;;;;6578:19;;;;6560:37;;6082:540;-1:-1:-1;;;;;6636:16:1;;6632:425;;6799:12;:21;;;;;;;6632:425;;;-1:-1:-1;;;;;7010:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6632:425;7087:2;-1:-1:-1;;;;;7072:25:1;7081:4;-1:-1:-1;;;;;7072:25:1;;7091:5;7072:25;;;;5564::6;;5552:2;5537:18;;5418:177;7072:25:1;;;;;;;;5997:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:6;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:6;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:6;;;2500:26;2451:89;-1:-1:-1;;1308:1:6;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:6;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:6;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:6;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:6:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:375;2875:1;2893:5;2907:249;2928:1;2918:8;2915:15;2907:249;;;2978:4;2973:3;2969:14;2963:4;2960:24;2957:50;;;2987:18;;:::i;:::-;3037:1;3027:8;3023:16;3020:49;;;3051:16;;;;3020:49;3134:1;3130:16;;;;;3090:15;;2907:249;;;2787:375;;;;;;:::o;3167:902::-;3216:5;3246:8;3236:80;;-1:-1:-1;3287:1:6;3301:5;;3236:80;3335:4;3325:76;;-1:-1:-1;3372:1:6;3386:5;;3325:76;3417:4;3435:1;3430:59;;;;3503:1;3498:174;;;;3410:262;;3430:59;3460:1;3451:10;;3474:5;;;3498:174;3535:3;3525:8;3522:17;3519:43;;;3542:18;;:::i;:::-;-1:-1:-1;;3598:1:6;3584:16;;3657:5;;3410:262;;3756:2;3746:8;3743:16;3737:3;3731:4;3728:13;3724:36;3718:2;3708:8;3705:16;3700:2;3694:4;3691:12;3687:35;3684:77;3681:203;;;-1:-1:-1;3793:19:6;;;3869:5;;3681:203;3916:42;-1:-1:-1;;3941:8:6;3935:4;3916:42;:::i;:::-;3994:6;3990:1;3986:6;3982:19;3973:7;3970:32;3967:58;;;4005:18;;:::i;:::-;4043:20;;-1:-1:-1;3167:902:6;;;;;:::o;4074:131::-;4134:5;4163:36;4190:8;4184:4;4163:36;:::i;:::-;4154:45;4074:131;-1:-1:-1;;;4074:131:6:o;4210:168::-;4283:9;;;4314;;4331:15;;;4325:22;;4311:37;4301:71;;4352:18;;:::i;4383:209::-;4415:1;4441;4431:132;;4485:10;4480:3;4476:20;4473:1;4466:31;4520:4;4517:1;4510:15;4548:4;4545:1;4538:15;4431:132;-1:-1:-1;4577:9:6;;4383:209::o;4597:128::-;4664:9;;;4685:11;;;4682:37;;;4699:18;;:::i;4938:125::-;5003:9;;;5024:10;;;5021:36;;;5037:18;;:::i;5418:177::-;143:15440:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 3688,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4832,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getCompleteTaxValue_2023": {
									"entryPoint": 4748,
									"id": 2023,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getCurrentSupply_2209": {
									"entryPoint": 5409,
									"id": 2209,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_2124": {
									"entryPoint": 4799,
									"id": 2124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTransferValues_2072": {
									"entryPoint": 3607,
									"id": 2072,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_2107": {
									"entryPoint": 6748,
									"id": 2107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 3706,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tokenTransfer_1681": {
									"entryPoint": 5042,
									"id": 1681,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1998": {
									"entryPoint": 6322,
									"id": 1998,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1919": {
									"entryPoint": 5822,
									"id": 1919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferStandard_1781": {
									"entryPoint": 6264,
									"id": 1781,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1850": {
									"entryPoint": 6105,
									"id": 1850,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1584": {
									"entryPoint": 3830,
									"id": 1584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1962,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1090": {
									"entryPoint": 2655,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeDevelopmentAccount_1168": {
									"entryPoint": 2552,
									"id": 1168,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMarketingAccount_1146": {
									"entryPoint": 3039,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePairAddress_1186": {
									"entryPoint": 2747,
									"id": 1186,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1013": {
									"entryPoint": null,
									"id": 1013,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeAccountFromReward_1340": {
									"entryPoint": 2227,
									"id": 1340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromFee_1124": {
									"entryPoint": 2022,
									"id": 1124,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getDevelopmentAccount_1054": {
									"entryPoint": null,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMarketingAccount_1046": {
									"entryPoint": null,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@includeAccountinReward_1404": {
									"entryPoint": 3195,
									"id": 1404,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistedAddress_1416": {
									"entryPoint": null,
									"id": 1416,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelisted_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launchBlock_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 1818,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@openTrading_1453": {
									"entryPoint": 3142,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reflect_1233": {
									"entryPoint": 1583,
									"id": 1233,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reflectionFee_1030": {
									"entryPoint": null,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflectionFromToken_1271": {
									"entryPoint": 2093,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_1710": {
									"entryPoint": 5777,
									"id": 1710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_1722": {
									"entryPoint": null,
									"id": 1722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2837,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFeeTransfer_2274": {
									"entryPoint": 6427,
									"id": 2274,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenFromReflection_1295": {
									"entryPoint": 4618,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFeesRedistributed_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingOpen_855": {
									"entryPoint": null,
									"id": 855,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_334": {
									"entryPoint": 1987,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2852,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@whitelistedAddress_1438": {
									"entryPoint": 2865,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9922:6",
										"nodeType": "YulBlock",
										"src": "0:9922:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:6",
													"nodeType": "YulBlock",
													"src": "84:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:6",
																"nodeType": "YulLiteral",
																"src": "168:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:6",
																	"nodeType": "YulTypedName",
																	"src": "159:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:6",
															"nodeType": "YulAssignment",
															"src": "178:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:6"
																},
																"nativeSrc": "187:23:6",
																"nodeType": "YulFunctionCall",
																"src": "187:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:6"
																}
															]
														},
														{
															"nativeSrc": "219:15:6",
															"nodeType": "YulAssignment",
															"src": "219:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:6",
																"nodeType": "YulIdentifier",
																"src": "229:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:226:6"
											},
											{
												"body": {
													"nativeSrc": "366:297:6",
													"nodeType": "YulBlock",
													"src": "366:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "383:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "383:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "394:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:6"
																},
																"nativeSrc": "376:21:6",
																"nodeType": "YulFunctionCall",
																"src": "376:21:6"
															},
															"nativeSrc": "376:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "376:21:6"
														},
														{
															"nativeSrc": "406:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "406:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "426:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "426:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "420:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "420:5:6"
																},
																"nativeSrc": "420:13:6",
																"nodeType": "YulFunctionCall",
																"src": "420:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "410:6:6",
																	"nodeType": "YulTypedName",
																	"src": "410:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "453:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "453:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "464:2:6",
																				"nodeType": "YulLiteral",
																				"src": "464:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "449:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:6"
																		},
																		"nativeSrc": "449:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "449:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:6"
																},
																"nativeSrc": "442:34:6",
																"nodeType": "YulFunctionCall",
																"src": "442:34:6"
															},
															"nativeSrc": "442:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "442:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "495:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "506:2:6",
																				"nodeType": "YulLiteral",
																				"src": "506:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:6"
																		},
																		"nativeSrc": "491:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "491:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "515:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulLiteral",
																				"src": "523:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "511:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:6"
																		},
																		"nativeSrc": "511:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "511:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "485:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:6"
																},
																"nativeSrc": "485:50:6",
																"nodeType": "YulFunctionCall",
																"src": "485:50:6"
															},
															"nativeSrc": "485:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "485:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "559:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "559:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "570:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "570:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "555:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:6"
																				},
																				"nativeSrc": "555:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "555:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "579:2:6",
																				"nodeType": "YulLiteral",
																				"src": "579:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "551:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:6"
																		},
																		"nativeSrc": "551:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:6",
																		"nodeType": "YulLiteral",
																		"src": "584:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "544:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "544:42:6"
														},
														{
															"nativeSrc": "595:62:6",
															"nodeType": "YulAssignment",
															"src": "595:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "611:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "611:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "630:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "630:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "638:2:6",
																								"nodeType": "YulLiteral",
																								"src": "638:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "626:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "626:3:6"
																						},
																						"nativeSrc": "626:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "626:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "647:2:6",
																								"nodeType": "YulLiteral",
																								"src": "647:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "643:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "643:3:6"
																						},
																						"nativeSrc": "643:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "643:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "622:3:6"
																				},
																				"nativeSrc": "622:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "622:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "607:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:6"
																		},
																		"nativeSrc": "607:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "607:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "654:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "603:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:6"
																},
																"nativeSrc": "603:54:6",
																"nodeType": "YulFunctionCall",
																"src": "603:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "595:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "595:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "245:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "335:9:6",
														"nodeType": "YulTypedName",
														"src": "335:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "346:6:6",
														"nodeType": "YulTypedName",
														"src": "346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "357:4:6",
														"nodeType": "YulTypedName",
														"src": "357:4:6",
														"type": ""
													}
												],
												"src": "245:418:6"
											},
											{
												"body": {
													"nativeSrc": "717:124:6",
													"nodeType": "YulBlock",
													"src": "717:124:6",
													"statements": [
														{
															"nativeSrc": "727:29:6",
															"nodeType": "YulAssignment",
															"src": "727:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "749:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "736:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:6"
																},
																"nativeSrc": "736:20:6",
																"nodeType": "YulFunctionCall",
																"src": "736:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "727:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "819:16:6",
																"nodeType": "YulBlock",
																"src": "819:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "828:1:6",
																					"nodeType": "YulLiteral",
																					"src": "828:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "831:1:6",
																					"nodeType": "YulLiteral",
																					"src": "831:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "821:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:6"
																			},
																			"nativeSrc": "821:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "821:12:6"
																		},
																		"nativeSrc": "821:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "778:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "778:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "789:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "789:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "804:3:6",
																										"nodeType": "YulLiteral",
																										"src": "804:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "809:1:6",
																										"nodeType": "YulLiteral",
																										"src": "809:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "800:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "800:3:6"
																								},
																								"nativeSrc": "800:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "800:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "813:1:6",
																								"nodeType": "YulLiteral",
																								"src": "813:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "796:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "796:3:6"
																						},
																						"nativeSrc": "796:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "796:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "785:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:6"
																				},
																				"nativeSrc": "785:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "785:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "775:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "775:2:6"
																		},
																		"nativeSrc": "775:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "775:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:6"
																},
																"nativeSrc": "768:50:6",
																"nodeType": "YulFunctionCall",
																"src": "768:50:6"
															},
															"nativeSrc": "765:70:6",
															"nodeType": "YulIf",
															"src": "765:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "668:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "696:6:6",
														"nodeType": "YulTypedName",
														"src": "696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "707:5:6",
														"nodeType": "YulTypedName",
														"src": "707:5:6",
														"type": ""
													}
												],
												"src": "668:173:6"
											},
											{
												"body": {
													"nativeSrc": "933:213:6",
													"nodeType": "YulBlock",
													"src": "933:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "979:16:6",
																"nodeType": "YulBlock",
																"src": "979:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:6",
																					"nodeType": "YulLiteral",
																					"src": "991:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "981:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:6"
																			},
																			"nativeSrc": "981:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "981:12:6"
																		},
																		"nativeSrc": "981:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "954:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "954:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "963:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "963:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "950:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:6"
																		},
																		"nativeSrc": "950:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "950:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "975:2:6",
																		"nodeType": "YulLiteral",
																		"src": "975:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:6"
																},
																"nativeSrc": "946:32:6",
																"nodeType": "YulFunctionCall",
																"src": "946:32:6"
															},
															"nativeSrc": "943:52:6",
															"nodeType": "YulIf",
															"src": "943:52:6"
														},
														{
															"nativeSrc": "1004:39:6",
															"nodeType": "YulAssignment",
															"src": "1004:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1033:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1033:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1014:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1014:18:6"
																},
																"nativeSrc": "1014:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1014:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1004:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:6"
																}
															]
														},
														{
															"nativeSrc": "1052:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1052:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1065:1:6",
																"nodeType": "YulLiteral",
																"src": "1065:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1056:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1056:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1075:41:6",
															"nodeType": "YulAssignment",
															"src": "1075:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1101:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1112:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1112:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1097:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:6"
																		},
																		"nativeSrc": "1097:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1097:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1084:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1084:12:6"
																},
																"nativeSrc": "1084:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1084:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1075:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1075:5:6"
																}
															]
														},
														{
															"nativeSrc": "1125:15:6",
															"nodeType": "YulAssignment",
															"src": "1125:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1135:5:6",
																"nodeType": "YulIdentifier",
																"src": "1135:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1125:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "846:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "891:9:6",
														"nodeType": "YulTypedName",
														"src": "891:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "902:7:6",
														"nodeType": "YulTypedName",
														"src": "902:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "914:6:6",
														"nodeType": "YulTypedName",
														"src": "914:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "922:6:6",
														"nodeType": "YulTypedName",
														"src": "922:6:6",
														"type": ""
													}
												],
												"src": "846:300:6"
											},
											{
												"body": {
													"nativeSrc": "1246:92:6",
													"nodeType": "YulBlock",
													"src": "1246:92:6",
													"statements": [
														{
															"nativeSrc": "1256:26:6",
															"nodeType": "YulAssignment",
															"src": "1256:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1268:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1268:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1279:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1279:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1264:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:6"
																},
																"nativeSrc": "1264:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1264:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1256:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1298:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1298:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1323:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1316:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1316:6:6"
																				},
																				"nativeSrc": "1316:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1316:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1309:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1309:6:6"
																		},
																		"nativeSrc": "1309:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1309:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:6"
																},
																"nativeSrc": "1291:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1291:41:6"
															},
															"nativeSrc": "1291:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1291:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1151:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:6",
														"nodeType": "YulTypedName",
														"src": "1215:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1226:6:6",
														"nodeType": "YulTypedName",
														"src": "1226:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:6",
														"nodeType": "YulTypedName",
														"src": "1237:4:6",
														"type": ""
													}
												],
												"src": "1151:187:6"
											},
											{
												"body": {
													"nativeSrc": "1444:76:6",
													"nodeType": "YulBlock",
													"src": "1444:76:6",
													"statements": [
														{
															"nativeSrc": "1454:26:6",
															"nodeType": "YulAssignment",
															"src": "1454:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:6"
																},
																"nativeSrc": "1462:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1462:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1454:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1507:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1507:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:6"
																},
																"nativeSrc": "1489:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1489:25:6"
															},
															"nativeSrc": "1489:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1489:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1343:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1413:9:6",
														"nodeType": "YulTypedName",
														"src": "1413:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1424:6:6",
														"nodeType": "YulTypedName",
														"src": "1424:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1435:4:6",
														"nodeType": "YulTypedName",
														"src": "1435:4:6",
														"type": ""
													}
												],
												"src": "1343:177:6"
											},
											{
												"body": {
													"nativeSrc": "1626:102:6",
													"nodeType": "YulBlock",
													"src": "1626:102:6",
													"statements": [
														{
															"nativeSrc": "1636:26:6",
															"nodeType": "YulAssignment",
															"src": "1636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1644:3:6"
																},
																"nativeSrc": "1644:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1636:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1693:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1709:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1709:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1714:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1714:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1705:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1705:3:6"
																						},
																						"nativeSrc": "1705:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1705:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1718:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1718:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1701:3:6"
																				},
																				"nativeSrc": "1701:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1701:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1689:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:6"
																		},
																		"nativeSrc": "1689:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1671:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																},
																"nativeSrc": "1671:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1671:51:6"
															},
															"nativeSrc": "1671:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1671:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1525:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1595:9:6",
														"nodeType": "YulTypedName",
														"src": "1595:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1606:6:6",
														"nodeType": "YulTypedName",
														"src": "1606:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1617:4:6",
														"nodeType": "YulTypedName",
														"src": "1617:4:6",
														"type": ""
													}
												],
												"src": "1525:203:6"
											},
											{
												"body": {
													"nativeSrc": "1837:270:6",
													"nodeType": "YulBlock",
													"src": "1837:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1883:16:6",
																"nodeType": "YulBlock",
																"src": "1883:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:6"
																			},
																			"nativeSrc": "1885:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:12:6"
																		},
																		"nativeSrc": "1885:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1854:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:6"
																		},
																		"nativeSrc": "1854:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:6"
																},
																"nativeSrc": "1850:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:32:6"
															},
															"nativeSrc": "1847:52:6",
															"nodeType": "YulIf",
															"src": "1847:52:6"
														},
														{
															"nativeSrc": "1908:39:6",
															"nodeType": "YulAssignment",
															"src": "1908:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1937:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1918:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1918:18:6"
																},
																"nativeSrc": "1918:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1918:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:6"
																}
															]
														},
														{
															"nativeSrc": "1956:48:6",
															"nodeType": "YulAssignment",
															"src": "1956:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:6"
																		},
																		"nativeSrc": "1985:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1966:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:18:6"
																},
																"nativeSrc": "1966:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1956:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:6"
																}
															]
														},
														{
															"nativeSrc": "2013:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2013:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2026:1:6",
																"nodeType": "YulLiteral",
																"src": "2026:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2017:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2017:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2036:41:6",
															"nodeType": "YulAssignment",
															"src": "2036:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2062:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2062:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2073:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2073:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:6"
																		},
																		"nativeSrc": "2058:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2045:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2045:12:6"
																},
																"nativeSrc": "2045:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2045:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2036:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:5:6"
																}
															]
														},
														{
															"nativeSrc": "2086:15:6",
															"nodeType": "YulAssignment",
															"src": "2086:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2096:5:6",
																"nodeType": "YulIdentifier",
																"src": "2096:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1733:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1787:9:6",
														"nodeType": "YulTypedName",
														"src": "1787:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1798:7:6",
														"nodeType": "YulTypedName",
														"src": "1798:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1810:6:6",
														"nodeType": "YulTypedName",
														"src": "1810:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1818:6:6",
														"nodeType": "YulTypedName",
														"src": "1818:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1826:6:6",
														"nodeType": "YulTypedName",
														"src": "1826:6:6",
														"type": ""
													}
												],
												"src": "1733:374:6"
											},
											{
												"body": {
													"nativeSrc": "2209:87:6",
													"nodeType": "YulBlock",
													"src": "2209:87:6",
													"statements": [
														{
															"nativeSrc": "2219:26:6",
															"nodeType": "YulAssignment",
															"src": "2219:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2231:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:6"
																},
																"nativeSrc": "2227:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2227:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2219:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2261:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2276:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2284:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2284:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:6"
																		},
																		"nativeSrc": "2272:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:6"
																},
																"nativeSrc": "2254:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2254:36:6"
															},
															"nativeSrc": "2254:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2254:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2112:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:6",
														"nodeType": "YulTypedName",
														"src": "2178:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2189:6:6",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2200:4:6",
														"nodeType": "YulTypedName",
														"src": "2200:4:6",
														"type": ""
													}
												],
												"src": "2112:184:6"
											},
											{
												"body": {
													"nativeSrc": "2371:116:6",
													"nodeType": "YulBlock",
													"src": "2371:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:6",
																"nodeType": "YulBlock",
																"src": "2417:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:6"
																			},
																			"nativeSrc": "2419:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:6"
																		},
																		"nativeSrc": "2419:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:6"
																		},
																		"nativeSrc": "2388:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:6"
																},
																"nativeSrc": "2384:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:6"
															},
															"nativeSrc": "2381:52:6",
															"nodeType": "YulIf",
															"src": "2381:52:6"
														},
														{
															"nativeSrc": "2442:39:6",
															"nodeType": "YulAssignment",
															"src": "2442:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:6"
																},
																"nativeSrc": "2452:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2301:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:6",
														"nodeType": "YulTypedName",
														"src": "2337:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2348:7:6",
														"nodeType": "YulTypedName",
														"src": "2348:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2360:6:6",
														"nodeType": "YulTypedName",
														"src": "2360:6:6",
														"type": ""
													}
												],
												"src": "2301:186:6"
											},
											{
												"body": {
													"nativeSrc": "2576:311:6",
													"nodeType": "YulBlock",
													"src": "2576:311:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2622:16:6",
																"nodeType": "YulBlock",
																"src": "2622:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2631:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2624:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:6"
																			},
																			"nativeSrc": "2624:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:6"
																		},
																		"nativeSrc": "2624:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2597:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2606:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:6"
																		},
																		"nativeSrc": "2593:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2618:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2589:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:6"
																},
																"nativeSrc": "2589:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2589:32:6"
															},
															"nativeSrc": "2586:52:6",
															"nodeType": "YulIf",
															"src": "2586:52:6"
														},
														{
															"nativeSrc": "2647:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2647:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2660:1:6",
																"nodeType": "YulLiteral",
																"src": "2660:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2651:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2651:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2670:32:6",
															"nodeType": "YulAssignment",
															"src": "2670:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2692:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2692:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2679:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2679:12:6"
																},
																"nativeSrc": "2679:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2679:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2670:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2670:5:6"
																}
															]
														},
														{
															"nativeSrc": "2711:15:6",
															"nodeType": "YulAssignment",
															"src": "2711:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2721:5:6",
																"nodeType": "YulIdentifier",
																"src": "2721:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																}
															]
														},
														{
															"nativeSrc": "2735:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2735:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2767:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2778:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:6"
																		},
																		"nativeSrc": "2763:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2763:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2750:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2750:12:6"
																},
																"nativeSrc": "2750:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2750:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2739:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2739:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2839:16:6",
																"nodeType": "YulBlock",
																"src": "2839:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2851:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2851:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:6"
																			},
																			"nativeSrc": "2841:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:12:6"
																		},
																		"nativeSrc": "2841:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2804:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2804:7:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "2827:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2827:7:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2820:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2820:6:6"
																						},
																						"nativeSrc": "2820:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2820:15:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2813:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2813:6:6"
																				},
																				"nativeSrc": "2813:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2813:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2801:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2801:2:6"
																		},
																		"nativeSrc": "2801:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:36:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2794:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:6"
																},
																"nativeSrc": "2794:44:6",
																"nodeType": "YulFunctionCall",
																"src": "2794:44:6"
															},
															"nativeSrc": "2791:64:6",
															"nodeType": "YulIf",
															"src": "2791:64:6"
														},
														{
															"nativeSrc": "2864:17:6",
															"nodeType": "YulAssignment",
															"src": "2864:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "2874:7:6",
																"nodeType": "YulIdentifier",
																"src": "2874:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "2492:395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2534:9:6",
														"nodeType": "YulTypedName",
														"src": "2534:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2545:7:6",
														"nodeType": "YulTypedName",
														"src": "2545:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2557:6:6",
														"nodeType": "YulTypedName",
														"src": "2557:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2565:6:6",
														"nodeType": "YulTypedName",
														"src": "2565:6:6",
														"type": ""
													}
												],
												"src": "2492:395:6"
											},
											{
												"body": {
													"nativeSrc": "2979:173:6",
													"nodeType": "YulBlock",
													"src": "2979:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3025:16:6",
																"nodeType": "YulBlock",
																"src": "3025:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3034:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:6"
																			},
																			"nativeSrc": "3027:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:12:6"
																		},
																		"nativeSrc": "3027:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3000:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3000:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3009:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:6"
																		},
																		"nativeSrc": "2996:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2992:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:6"
																},
																"nativeSrc": "2992:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2992:32:6"
															},
															"nativeSrc": "2989:52:6",
															"nodeType": "YulIf",
															"src": "2989:52:6"
														},
														{
															"nativeSrc": "3050:39:6",
															"nodeType": "YulAssignment",
															"src": "3050:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3079:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3079:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3060:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3060:18:6"
																},
																"nativeSrc": "3060:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3060:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:6"
																}
															]
														},
														{
															"nativeSrc": "3098:48:6",
															"nodeType": "YulAssignment",
															"src": "3098:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3131:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3142:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:6"
																		},
																		"nativeSrc": "3127:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3108:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3108:18:6"
																},
																"nativeSrc": "3108:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3108:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3098:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2892:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2937:9:6",
														"nodeType": "YulTypedName",
														"src": "2937:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2948:7:6",
														"nodeType": "YulTypedName",
														"src": "2948:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2960:6:6",
														"nodeType": "YulTypedName",
														"src": "2960:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2968:6:6",
														"nodeType": "YulTypedName",
														"src": "2968:6:6",
														"type": ""
													}
												],
												"src": "2892:260:6"
											},
											{
												"body": {
													"nativeSrc": "3331:234:6",
													"nodeType": "YulBlock",
													"src": "3331:234:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3341:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:6"
																},
																"nativeSrc": "3341:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3341:21:6"
															},
															"nativeSrc": "3341:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3341:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3382:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3393:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3378:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:6"
																		},
																		"nativeSrc": "3378:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3398:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:6"
																},
																"nativeSrc": "3371:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3371:30:6"
															},
															"nativeSrc": "3371:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3371:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:6"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nativeSrc": "3437:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3437:34:6",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3410:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:6"
																},
																"nativeSrc": "3410:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3410:62:6"
															},
															"nativeSrc": "3410:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3410:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3492:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3503:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3488:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:6"
																		},
																		"nativeSrc": "3488:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3508:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3508:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:6"
																},
																"nativeSrc": "3481:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3481:42:6"
															},
															"nativeSrc": "3481:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3481:42:6"
														},
														{
															"nativeSrc": "3532:27:6",
															"nodeType": "YulAssignment",
															"src": "3532:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3544:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3544:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3555:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:6"
																},
																"nativeSrc": "3540:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3540:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3532:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3157:408:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3308:9:6",
														"nodeType": "YulTypedName",
														"src": "3308:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3322:4:6",
														"nodeType": "YulTypedName",
														"src": "3322:4:6",
														"type": ""
													}
												],
												"src": "3157:408:6"
											},
											{
												"body": {
													"nativeSrc": "3602:95:6",
													"nodeType": "YulBlock",
													"src": "3602:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3619:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3626:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3626:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3631:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3631:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3622:3:6"
																		},
																		"nativeSrc": "3622:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:6"
																},
																"nativeSrc": "3612:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3612:31:6"
															},
															"nativeSrc": "3612:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3612:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3659:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3662:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3662:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:6"
																},
																"nativeSrc": "3652:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3652:15:6"
															},
															"nativeSrc": "3652:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3652:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3686:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:6"
																},
																"nativeSrc": "3676:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3676:15:6"
															},
															"nativeSrc": "3676:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3676:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3570:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3570:127:6"
											},
											{
												"body": {
													"nativeSrc": "3751:79:6",
													"nodeType": "YulBlock",
													"src": "3751:79:6",
													"statements": [
														{
															"nativeSrc": "3761:17:6",
															"nodeType": "YulAssignment",
															"src": "3761:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3773:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3773:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3776:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3776:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:6"
																},
																"nativeSrc": "3769:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3769:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3761:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3761:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3802:22:6",
																"nodeType": "YulBlock",
																"src": "3802:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3804:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:16:6"
																			},
																			"nativeSrc": "3804:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3804:18:6"
																		},
																		"nativeSrc": "3804:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3804:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3793:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3793:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3799:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3799:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3790:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3790:2:6"
																},
																"nativeSrc": "3790:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3790:11:6"
															},
															"nativeSrc": "3787:37:6",
															"nodeType": "YulIf",
															"src": "3787:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3702:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3733:1:6",
														"nodeType": "YulTypedName",
														"src": "3733:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3736:1:6",
														"nodeType": "YulTypedName",
														"src": "3736:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3742:4:6",
														"nodeType": "YulTypedName",
														"src": "3742:4:6",
														"type": ""
													}
												],
												"src": "3702:128:6"
											},
											{
												"body": {
													"nativeSrc": "3883:77:6",
													"nodeType": "YulBlock",
													"src": "3883:77:6",
													"statements": [
														{
															"nativeSrc": "3893:16:6",
															"nodeType": "YulAssignment",
															"src": "3893:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3904:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3907:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3907:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:6"
																},
																"nativeSrc": "3900:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3900:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3893:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3932:22:6",
																"nodeType": "YulBlock",
																"src": "3932:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3934:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3934:16:6"
																			},
																			"nativeSrc": "3934:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3934:18:6"
																		},
																		"nativeSrc": "3934:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3934:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3924:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3924:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3927:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3921:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3921:2:6"
																},
																"nativeSrc": "3921:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3921:10:6"
															},
															"nativeSrc": "3918:36:6",
															"nodeType": "YulIf",
															"src": "3918:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3835:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3866:1:6",
														"nodeType": "YulTypedName",
														"src": "3866:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3869:1:6",
														"nodeType": "YulTypedName",
														"src": "3869:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3875:3:6",
														"nodeType": "YulTypedName",
														"src": "3875:3:6",
														"type": ""
													}
												],
												"src": "3835:125:6"
											},
											{
												"body": {
													"nativeSrc": "4020:325:6",
													"nodeType": "YulBlock",
													"src": "4020:325:6",
													"statements": [
														{
															"nativeSrc": "4030:22:6",
															"nodeType": "YulAssignment",
															"src": "4030:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4044:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4047:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4040:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:6"
																},
																"nativeSrc": "4040:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4040:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:6"
																}
															]
														},
														{
															"nativeSrc": "4061:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4061:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4091:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4091:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:6"
																},
																"nativeSrc": "4087:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4087:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4065:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4065:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4138:31:6",
																"nodeType": "YulBlock",
																"src": "4138:31:6",
																"statements": [
																	{
																		"nativeSrc": "4140:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4140:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4154:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4154:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4162:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4162:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4150:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:3:6"
																			},
																			"nativeSrc": "4150:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4150:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4140:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4118:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4118:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:6"
																},
																"nativeSrc": "4111:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4111:26:6"
															},
															"nativeSrc": "4108:61:6",
															"nodeType": "YulIf",
															"src": "4108:61:6"
														},
														{
															"body": {
																"nativeSrc": "4228:111:6",
																"nodeType": "YulBlock",
																"src": "4228:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4256:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4256:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4261:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4261:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4252:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:6"
																					},
																					"nativeSrc": "4252:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4252:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:6"
																			},
																			"nativeSrc": "4242:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:31:6"
																		},
																		"nativeSrc": "4242:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4293:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4293:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4296:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4296:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4286:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:6"
																			},
																			"nativeSrc": "4286:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4286:15:6"
																		},
																		"nativeSrc": "4286:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4286:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4324:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:6"
																			},
																			"nativeSrc": "4314:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:15:6"
																		},
																		"nativeSrc": "4314:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4184:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4184:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4207:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4215:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4215:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4204:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4204:2:6"
																		},
																		"nativeSrc": "4204:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4181:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4181:2:6"
																},
																"nativeSrc": "4181:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4181:38:6"
															},
															"nativeSrc": "4178:161:6",
															"nodeType": "YulIf",
															"src": "4178:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3965:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4000:4:6",
														"nodeType": "YulTypedName",
														"src": "4000:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4009:6:6",
														"nodeType": "YulTypedName",
														"src": "4009:6:6",
														"type": ""
													}
												],
												"src": "3965:380:6"
											},
											{
												"body": {
													"nativeSrc": "4524:181:6",
													"nodeType": "YulBlock",
													"src": "4524:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:6"
																},
																"nativeSrc": "4534:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4534:21:6"
															},
															"nativeSrc": "4534:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:6"
																		},
																		"nativeSrc": "4571:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:6"
																},
																"nativeSrc": "4564:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:6"
															},
															"nativeSrc": "4564:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4614:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:6"
																		},
																		"nativeSrc": "4610:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nativeSrc": "4630:33:6",
																		"nodeType": "YulLiteral",
																		"src": "4630:33:6",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:6"
																},
																"nativeSrc": "4603:61:6",
																"nodeType": "YulFunctionCall",
																"src": "4603:61:6"
															},
															"nativeSrc": "4603:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "4603:61:6"
														},
														{
															"nativeSrc": "4673:26:6",
															"nodeType": "YulAssignment",
															"src": "4673:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4685:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4685:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:6"
																},
																"nativeSrc": "4681:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4681:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4673:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4350:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:6",
														"nodeType": "YulTypedName",
														"src": "4501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4515:4:6",
														"nodeType": "YulTypedName",
														"src": "4515:4:6",
														"type": ""
													}
												],
												"src": "4350:355:6"
											},
											{
												"body": {
													"nativeSrc": "4884:177:6",
													"nodeType": "YulBlock",
													"src": "4884:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4901:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:6"
																},
																"nativeSrc": "4894:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4894:21:6"
															},
															"nativeSrc": "4894:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4894:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4935:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4946:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:6"
																		},
																		"nativeSrc": "4931:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4951:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4924:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:6"
																},
																"nativeSrc": "4924:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4924:30:6"
															},
															"nativeSrc": "4924:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4924:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4974:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4974:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4985:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4985:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4970:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:6"
																		},
																		"nativeSrc": "4970:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4970:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nativeSrc": "4990:29:6",
																		"nodeType": "YulLiteral",
																		"src": "4990:29:6",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:6"
																},
																"nativeSrc": "4963:57:6",
																"nodeType": "YulFunctionCall",
																"src": "4963:57:6"
															},
															"nativeSrc": "4963:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "4963:57:6"
														},
														{
															"nativeSrc": "5029:26:6",
															"nodeType": "YulAssignment",
															"src": "5029:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5041:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5052:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5037:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:6"
																},
																"nativeSrc": "5037:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5037:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4710:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4861:9:6",
														"nodeType": "YulTypedName",
														"src": "4861:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													}
												],
												"src": "4710:351:6"
											},
											{
												"body": {
													"nativeSrc": "5240:228:6",
													"nodeType": "YulBlock",
													"src": "5240:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5257:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:6"
																},
																"nativeSrc": "5250:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5250:21:6"
															},
															"nativeSrc": "5250:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5250:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5291:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5302:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5287:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:6"
																		},
																		"nativeSrc": "5287:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5280:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:6"
																},
																"nativeSrc": "5280:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5280:30:6"
															},
															"nativeSrc": "5280:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5280:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5341:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5326:3:6"
																		},
																		"nativeSrc": "5326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:18:6"
																	},
																	{
																		"hexValue": "7a65726f20616464726573732063616e206e6f74206265207468652046656541",
																		"kind": "string",
																		"nativeSrc": "5346:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5346:34:6",
																		"type": "",
																		"value": "zero address can not be the FeeA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:6"
																},
																"nativeSrc": "5319:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5319:62:6"
															},
															"nativeSrc": "5319:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5319:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5412:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5412:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5397:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:6"
																		},
																		"nativeSrc": "5397:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:18:6"
																	},
																	{
																		"hexValue": "63636f756e74",
																		"kind": "string",
																		"nativeSrc": "5417:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5417:8:6",
																		"type": "",
																		"value": "ccount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:6"
																},
																"nativeSrc": "5390:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5390:36:6"
															},
															"nativeSrc": "5390:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5390:36:6"
														},
														{
															"nativeSrc": "5435:27:6",
															"nodeType": "YulAssignment",
															"src": "5435:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5447:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5458:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5458:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:6"
																},
																"nativeSrc": "5443:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5443:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5435:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5066:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:6",
														"nodeType": "YulTypedName",
														"src": "5217:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5231:4:6",
														"nodeType": "YulTypedName",
														"src": "5231:4:6",
														"type": ""
													}
												],
												"src": "5066:402:6"
											},
											{
												"body": {
													"nativeSrc": "5647:180:6",
													"nodeType": "YulBlock",
													"src": "5647:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:6"
																},
																"nativeSrc": "5657:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5657:21:6"
															},
															"nativeSrc": "5657:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5657:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5698:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5709:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5709:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5694:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:6"
																		},
																		"nativeSrc": "5694:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5694:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5714:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:6"
																},
																"nativeSrc": "5687:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5687:30:6"
															},
															"nativeSrc": "5687:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5687:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:6"
																		},
																		"nativeSrc": "5733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:6"
																	},
																	{
																		"hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "5753:32:6",
																		"nodeType": "YulLiteral",
																		"src": "5753:32:6",
																		"type": "",
																		"value": "Address is already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:6"
																},
																"nativeSrc": "5726:60:6",
																"nodeType": "YulFunctionCall",
																"src": "5726:60:6"
															},
															"nativeSrc": "5726:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "5726:60:6"
														},
														{
															"nativeSrc": "5795:26:6",
															"nodeType": "YulAssignment",
															"src": "5795:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5807:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5818:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5818:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:6"
																},
																"nativeSrc": "5803:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5803:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5795:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5473:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5624:9:6",
														"nodeType": "YulTypedName",
														"src": "5624:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5638:4:6",
														"nodeType": "YulTypedName",
														"src": "5638:4:6",
														"type": ""
													}
												],
												"src": "5473:354:6"
											},
											{
												"body": {
													"nativeSrc": "6006:177:6",
													"nodeType": "YulBlock",
													"src": "6006:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6023:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6023:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6034:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:6"
																},
																"nativeSrc": "6016:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:21:6"
															},
															"nativeSrc": "6016:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6016:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6057:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6068:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6068:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6053:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:6"
																		},
																		"nativeSrc": "6053:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6053:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6073:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6046:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6046:6:6"
																},
																"nativeSrc": "6046:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6046:30:6"
															},
															"nativeSrc": "6046:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6046:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6096:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6107:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6092:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:6"
																		},
																		"nativeSrc": "6092:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6092:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
																		"kind": "string",
																		"nativeSrc": "6112:29:6",
																		"nodeType": "YulLiteral",
																		"src": "6112:29:6",
																		"type": "",
																		"value": "Account is already included"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:6"
																},
																"nativeSrc": "6085:57:6",
																"nodeType": "YulFunctionCall",
																"src": "6085:57:6"
															},
															"nativeSrc": "6085:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "6085:57:6"
														},
														{
															"nativeSrc": "6151:26:6",
															"nodeType": "YulAssignment",
															"src": "6151:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6163:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6163:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6174:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6174:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:6"
																},
																"nativeSrc": "6159:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6159:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6151:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6151:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5832:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5983:9:6",
														"nodeType": "YulTypedName",
														"src": "5983:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5997:4:6",
														"nodeType": "YulTypedName",
														"src": "5997:4:6",
														"type": ""
													}
												],
												"src": "5832:351:6"
											},
											{
												"body": {
													"nativeSrc": "6220:95:6",
													"nodeType": "YulBlock",
													"src": "6220:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6237:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6237:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6244:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6244:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6249:10:6",
																				"nodeType": "YulLiteral",
																				"src": "6249:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6240:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:6"
																		},
																		"nativeSrc": "6240:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6240:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6230:6:6"
																},
																"nativeSrc": "6230:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6230:31:6"
															},
															"nativeSrc": "6230:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6230:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6277:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6277:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6280:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6280:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:6"
																},
																"nativeSrc": "6270:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6270:15:6"
															},
															"nativeSrc": "6270:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6270:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6301:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6301:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6304:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6304:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6294:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:6"
																},
																"nativeSrc": "6294:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6294:15:6"
															},
															"nativeSrc": "6294:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6294:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6188:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6188:127:6"
											},
											{
												"body": {
													"nativeSrc": "6352:95:6",
													"nodeType": "YulBlock",
													"src": "6352:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6369:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6369:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6376:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6376:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6381:10:6",
																				"nodeType": "YulLiteral",
																				"src": "6381:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6372:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:6"
																		},
																		"nativeSrc": "6372:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:6"
																},
																"nativeSrc": "6362:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6362:31:6"
															},
															"nativeSrc": "6362:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6362:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6409:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6409:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6412:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6412:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:6"
																},
																"nativeSrc": "6402:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6402:15:6"
															},
															"nativeSrc": "6402:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6402:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6433:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6433:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6436:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6436:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:6"
																},
																"nativeSrc": "6426:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6426:15:6"
															},
															"nativeSrc": "6426:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6426:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "6320:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6320:127:6"
											},
											{
												"body": {
													"nativeSrc": "6504:116:6",
													"nodeType": "YulBlock",
													"src": "6504:116:6",
													"statements": [
														{
															"nativeSrc": "6514:20:6",
															"nodeType": "YulAssignment",
															"src": "6514:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6529:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6529:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6532:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6532:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6525:3:6"
																},
																"nativeSrc": "6525:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6525:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6514:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6514:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6592:22:6",
																"nodeType": "YulBlock",
																"src": "6592:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6594:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6594:16:6"
																			},
																			"nativeSrc": "6594:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6594:18:6"
																		},
																		"nativeSrc": "6594:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6594:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6563:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6563:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6556:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6556:6:6"
																				},
																				"nativeSrc": "6556:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6556:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6570:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6570:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6577:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6577:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6586:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6586:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6573:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6573:3:6"
																						},
																						"nativeSrc": "6573:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6573:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6567:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6567:2:6"
																				},
																				"nativeSrc": "6567:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6567:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6553:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6553:2:6"
																		},
																		"nativeSrc": "6553:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6553:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6546:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6546:6:6"
																},
																"nativeSrc": "6546:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6546:45:6"
															},
															"nativeSrc": "6543:71:6",
															"nodeType": "YulIf",
															"src": "6543:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6452:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6483:1:6",
														"nodeType": "YulTypedName",
														"src": "6483:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6486:1:6",
														"nodeType": "YulTypedName",
														"src": "6486:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6492:7:6",
														"nodeType": "YulTypedName",
														"src": "6492:7:6",
														"type": ""
													}
												],
												"src": "6452:168:6"
											},
											{
												"body": {
													"nativeSrc": "6782:188:6",
													"nodeType": "YulBlock",
													"src": "6782:188:6",
													"statements": [
														{
															"nativeSrc": "6792:26:6",
															"nodeType": "YulAssignment",
															"src": "6792:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6804:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6804:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6815:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6815:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6800:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6800:3:6"
																},
																"nativeSrc": "6800:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6800:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6792:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6792:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6834:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6834:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6849:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6849:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6865:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6865:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6870:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6870:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6861:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6861:3:6"
																						},
																						"nativeSrc": "6861:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6861:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6874:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6874:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6857:3:6"
																				},
																				"nativeSrc": "6857:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6857:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6845:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6845:3:6"
																		},
																		"nativeSrc": "6845:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6845:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6827:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:6"
																},
																"nativeSrc": "6827:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6827:51:6"
															},
															"nativeSrc": "6827:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6827:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6898:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6898:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6909:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6909:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6894:3:6"
																		},
																		"nativeSrc": "6894:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6894:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6914:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6914:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:6"
																},
																"nativeSrc": "6887:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6887:34:6"
															},
															"nativeSrc": "6887:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6887:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6952:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6952:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6937:3:6"
																		},
																		"nativeSrc": "6937:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6937:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6957:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6957:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:6"
																},
																"nativeSrc": "6930:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6930:34:6"
															},
															"nativeSrc": "6930:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6930:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6625:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6735:9:6",
														"nodeType": "YulTypedName",
														"src": "6735:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6746:6:6",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6754:6:6",
														"nodeType": "YulTypedName",
														"src": "6754:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6762:6:6",
														"nodeType": "YulTypedName",
														"src": "6762:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6773:4:6",
														"nodeType": "YulTypedName",
														"src": "6773:4:6",
														"type": ""
													}
												],
												"src": "6625:345:6"
											},
											{
												"body": {
													"nativeSrc": "7149:173:6",
													"nodeType": "YulBlock",
													"src": "7149:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7166:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7177:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7159:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:6"
																},
																"nativeSrc": "7159:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7159:21:6"
															},
															"nativeSrc": "7159:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7159:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7200:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7200:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7211:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7196:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:6"
																		},
																		"nativeSrc": "7196:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7189:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:6"
																},
																"nativeSrc": "7189:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7189:30:6"
															},
															"nativeSrc": "7189:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7189:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7250:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7250:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:6"
																		},
																		"nativeSrc": "7235:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7235:18:6"
																	},
																	{
																		"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
																		"kind": "string",
																		"nativeSrc": "7255:25:6",
																		"nodeType": "YulLiteral",
																		"src": "7255:25:6",
																		"type": "",
																		"value": "Trading not yet enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7228:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:6"
																},
																"nativeSrc": "7228:53:6",
																"nodeType": "YulFunctionCall",
																"src": "7228:53:6"
															},
															"nativeSrc": "7228:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "7228:53:6"
														},
														{
															"nativeSrc": "7290:26:6",
															"nodeType": "YulAssignment",
															"src": "7290:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7302:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7302:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7313:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7298:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7298:3:6"
																},
																"nativeSrc": "7298:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7298:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7290:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7290:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6975:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7126:9:6",
														"nodeType": "YulTypedName",
														"src": "7126:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7140:4:6",
														"nodeType": "YulTypedName",
														"src": "7140:4:6",
														"type": ""
													}
												],
												"src": "6975:347:6"
											},
											{
												"body": {
													"nativeSrc": "7501:224:6",
													"nodeType": "YulBlock",
													"src": "7501:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7518:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7518:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7529:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7529:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7511:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7511:6:6"
																},
																"nativeSrc": "7511:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7511:21:6"
															},
															"nativeSrc": "7511:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7511:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7552:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7563:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7563:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7548:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:6"
																		},
																		"nativeSrc": "7548:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7548:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7568:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7568:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7541:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:6"
																},
																"nativeSrc": "7541:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7541:30:6"
															},
															"nativeSrc": "7541:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7541:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7591:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7591:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7602:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7602:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7587:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7587:3:6"
																		},
																		"nativeSrc": "7587:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7587:18:6"
																	},
																	{
																		"hexValue": "4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "7607:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7607:34:6",
																		"type": "",
																		"value": "Launch protection: not whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7580:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:6"
																},
																"nativeSrc": "7580:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7580:62:6"
															},
															"nativeSrc": "7580:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7580:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7662:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7673:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7673:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7658:3:6"
																		},
																		"nativeSrc": "7658:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7658:18:6"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "7678:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7678:4:6",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7651:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:6"
																},
																"nativeSrc": "7651:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7651:32:6"
															},
															"nativeSrc": "7651:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "7651:32:6"
														},
														{
															"nativeSrc": "7692:27:6",
															"nodeType": "YulAssignment",
															"src": "7692:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7704:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7704:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7715:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7715:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:6"
																},
																"nativeSrc": "7700:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7700:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7692:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7327:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7478:9:6",
														"nodeType": "YulTypedName",
														"src": "7478:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7492:4:6",
														"nodeType": "YulTypedName",
														"src": "7492:4:6",
														"type": ""
													}
												],
												"src": "7327:398:6"
											},
											{
												"body": {
													"nativeSrc": "7904:227:6",
													"nodeType": "YulBlock",
													"src": "7904:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7921:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7921:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7914:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:6"
																},
																"nativeSrc": "7914:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7914:21:6"
															},
															"nativeSrc": "7914:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7914:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7955:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7966:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7966:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nativeSrc": "7951:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7971:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:6"
																},
																"nativeSrc": "7944:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:6"
															},
															"nativeSrc": "7944:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7944:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7994:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8005:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7990:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:6"
																		},
																		"nativeSrc": "7990:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "8010:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8010:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7983:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:6"
																},
																"nativeSrc": "7983:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7983:62:6"
															},
															"nativeSrc": "7983:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7983:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8065:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8065:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8076:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8076:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:6"
																		},
																		"nativeSrc": "8061:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8061:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8081:7:6",
																		"nodeType": "YulLiteral",
																		"src": "8081:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:6"
																},
																"nativeSrc": "8054:35:6",
																"nodeType": "YulFunctionCall",
																"src": "8054:35:6"
															},
															"nativeSrc": "8054:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "8054:35:6"
														},
														{
															"nativeSrc": "8098:27:6",
															"nodeType": "YulAssignment",
															"src": "8098:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8110:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8110:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8121:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8121:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8106:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8106:3:6"
																},
																"nativeSrc": "8106:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8106:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8098:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8098:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7730:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7881:9:6",
														"nodeType": "YulTypedName",
														"src": "7881:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7895:4:6",
														"nodeType": "YulTypedName",
														"src": "7895:4:6",
														"type": ""
													}
												],
												"src": "7730:401:6"
											},
											{
												"body": {
													"nativeSrc": "8310:225:6",
													"nodeType": "YulBlock",
													"src": "8310:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8327:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8327:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:6"
																},
																"nativeSrc": "8320:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8320:21:6"
															},
															"nativeSrc": "8320:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8320:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8372:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8372:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:6"
																		},
																		"nativeSrc": "8357:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8377:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8377:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:6"
																},
																"nativeSrc": "8350:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8350:30:6"
															},
															"nativeSrc": "8350:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8350:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8411:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8396:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:6"
																		},
																		"nativeSrc": "8396:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "8416:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8416:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8389:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8389:6:6"
																},
																"nativeSrc": "8389:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8389:62:6"
															},
															"nativeSrc": "8389:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8389:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8471:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8471:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8482:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8482:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8467:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8467:3:6"
																		},
																		"nativeSrc": "8467:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "8487:5:6",
																		"nodeType": "YulLiteral",
																		"src": "8487:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8460:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:6"
																},
																"nativeSrc": "8460:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8460:33:6"
															},
															"nativeSrc": "8460:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8460:33:6"
														},
														{
															"nativeSrc": "8502:27:6",
															"nodeType": "YulAssignment",
															"src": "8502:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8514:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8514:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8525:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8525:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8510:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8510:3:6"
																},
																"nativeSrc": "8510:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8510:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8502:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8502:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8136:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8287:9:6",
														"nodeType": "YulTypedName",
														"src": "8287:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8301:4:6",
														"nodeType": "YulTypedName",
														"src": "8301:4:6",
														"type": ""
													}
												],
												"src": "8136:399:6"
											},
											{
												"body": {
													"nativeSrc": "8714:228:6",
													"nodeType": "YulBlock",
													"src": "8714:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8731:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8731:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8742:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8742:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:6"
																},
																"nativeSrc": "8724:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8724:21:6"
															},
															"nativeSrc": "8724:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8724:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8765:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8776:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8761:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:6"
																		},
																		"nativeSrc": "8761:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8781:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8781:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:6"
																},
																"nativeSrc": "8754:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8754:30:6"
															},
															"nativeSrc": "8754:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8754:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8804:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8804:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8815:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8815:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8800:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:6"
																		},
																		"nativeSrc": "8800:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8800:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "8820:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8820:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8793:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8793:6:6"
																},
																"nativeSrc": "8793:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8793:62:6"
															},
															"nativeSrc": "8793:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8793:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8886:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8886:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:6"
																		},
																		"nativeSrc": "8871:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8871:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8891:8:6",
																		"nodeType": "YulLiteral",
																		"src": "8891:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:6"
																},
																"nativeSrc": "8864:36:6",
																"nodeType": "YulFunctionCall",
																"src": "8864:36:6"
															},
															"nativeSrc": "8864:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "8864:36:6"
														},
														{
															"nativeSrc": "8909:27:6",
															"nodeType": "YulAssignment",
															"src": "8909:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8921:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8921:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8932:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8932:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8917:3:6"
																},
																"nativeSrc": "8917:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8917:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8909:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8909:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8540:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8691:9:6",
														"nodeType": "YulTypedName",
														"src": "8691:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8705:4:6",
														"nodeType": "YulTypedName",
														"src": "8705:4:6",
														"type": ""
													}
												],
												"src": "8540:402:6"
											},
											{
												"body": {
													"nativeSrc": "9121:166:6",
													"nodeType": "YulBlock",
													"src": "9121:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9138:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9138:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9149:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9149:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9131:6:6"
																},
																"nativeSrc": "9131:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9131:21:6"
															},
															"nativeSrc": "9131:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9131:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9172:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9172:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9183:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9183:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9168:3:6"
																		},
																		"nativeSrc": "9168:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9168:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9161:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9161:6:6"
																},
																"nativeSrc": "9161:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9161:30:6"
															},
															"nativeSrc": "9161:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9161:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9211:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9211:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9222:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9222:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9207:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:6"
																		},
																		"nativeSrc": "9207:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9207:18:6"
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"kind": "string",
																		"nativeSrc": "9227:18:6",
																		"nodeType": "YulLiteral",
																		"src": "9227:18:6",
																		"type": "",
																		"value": "Whale detected!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:6"
																},
																"nativeSrc": "9200:46:6",
																"nodeType": "YulFunctionCall",
																"src": "9200:46:6"
															},
															"nativeSrc": "9200:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "9200:46:6"
														},
														{
															"nativeSrc": "9255:26:6",
															"nodeType": "YulAssignment",
															"src": "9255:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9267:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9267:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9278:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9263:3:6"
																},
																"nativeSrc": "9263:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9263:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9255:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9255:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8947:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9098:9:6",
														"nodeType": "YulTypedName",
														"src": "9098:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9112:4:6",
														"nodeType": "YulTypedName",
														"src": "9112:4:6",
														"type": ""
													}
												],
												"src": "8947:340:6"
											},
											{
												"body": {
													"nativeSrc": "9466:232:6",
													"nodeType": "YulBlock",
													"src": "9466:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9483:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9483:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9494:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9494:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:6"
																},
																"nativeSrc": "9476:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9476:21:6"
															},
															"nativeSrc": "9476:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9476:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9517:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9517:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9528:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9528:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:6"
																		},
																		"nativeSrc": "9513:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9506:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9506:6:6"
																},
																"nativeSrc": "9506:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9506:30:6"
															},
															"nativeSrc": "9506:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9506:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9556:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9567:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9567:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9552:3:6"
																		},
																		"nativeSrc": "9552:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9552:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nativeSrc": "9572:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9572:34:6",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:6"
																},
																"nativeSrc": "9545:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9545:62:6"
															},
															"nativeSrc": "9545:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9545:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9627:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9627:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9638:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9638:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:6"
																		},
																		"nativeSrc": "9623:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9623:18:6"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nativeSrc": "9643:12:6",
																		"nodeType": "YulLiteral",
																		"src": "9643:12:6",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9616:6:6"
																},
																"nativeSrc": "9616:40:6",
																"nodeType": "YulFunctionCall",
																"src": "9616:40:6"
															},
															"nativeSrc": "9616:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "9616:40:6"
														},
														{
															"nativeSrc": "9665:27:6",
															"nodeType": "YulAssignment",
															"src": "9665:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9677:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9677:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9688:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9688:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9673:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9673:3:6"
																},
																"nativeSrc": "9673:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9673:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9665:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9665:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9292:406:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9443:9:6",
														"nodeType": "YulTypedName",
														"src": "9443:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9457:4:6",
														"nodeType": "YulTypedName",
														"src": "9457:4:6",
														"type": ""
													}
												],
												"src": "9292:406:6"
											},
											{
												"body": {
													"nativeSrc": "9749:171:6",
													"nodeType": "YulBlock",
													"src": "9749:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9780:111:6",
																"nodeType": "YulBlock",
																"src": "9780:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9801:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9801:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9808:3:6",
																							"nodeType": "YulLiteral",
																							"src": "9808:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9813:10:6",
																							"nodeType": "YulLiteral",
																							"src": "9813:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9804:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9804:3:6"
																					},
																					"nativeSrc": "9804:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9804:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9794:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9794:6:6"
																			},
																			"nativeSrc": "9794:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9794:31:6"
																		},
																		"nativeSrc": "9794:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9794:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9845:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9845:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9848:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9848:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9838:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9838:6:6"
																			},
																			"nativeSrc": "9838:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9838:15:6"
																		},
																		"nativeSrc": "9838:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9838:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9873:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9873:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9876:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9876:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9866:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9866:6:6"
																			},
																			"nativeSrc": "9866:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9866:15:6"
																		},
																		"nativeSrc": "9866:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9866:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9769:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9769:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:6"
																},
																"nativeSrc": "9762:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9762:9:6"
															},
															"nativeSrc": "9759:132:6",
															"nodeType": "YulIf",
															"src": "9759:132:6"
														},
														{
															"nativeSrc": "9900:14:6",
															"nodeType": "YulAssignment",
															"src": "9900:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9909:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9909:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9912:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9912:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9905:3:6"
																},
																"nativeSrc": "9905:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9905:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9900:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9900:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9703:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9734:1:6",
														"nodeType": "YulTypedName",
														"src": "9734:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9737:1:6",
														"nodeType": "YulTypedName",
														"src": "9737:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9743:1:6",
														"nodeType": "YulTypedName",
														"src": "9743:1:6",
														"type": ""
													}
												],
												"src": "9703:217:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"zero address can not be the FeeA\")\n        mstore(add(headStart, 96), \"ccount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Address is already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already included\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Trading not yet enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Launch protection: not whitelist\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Whale detected!!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101de575f3560e01c8063838fcc90116100fd578063c486377011610092578063dd62ed3e11610062578063dd62ed3e1461059f578063f66608fe146105e3578063fdeb889f146105f7578063ffb54a9914610616575f5ffd5b8063c486377014610520578063c9567bf91461053f578063cba0e99614610553578063d00efb2f1461058a575f5ffd5b806395d89b41116100cd57806395d89b41146104af578063a8b08982146104c3578063a9059cbb146104e2578063c30796ab14610501575f5ffd5b8063838fcc901461043d57806383ad79941461045a5780638873b15f1461046e5780638da5cb5b1461048d575f5ffd5b80633af32abf116101735780635fae0576116101435780635fae0576146103a95780636049876e146103e0578063706407fd146103ff57806370a082311461041e575f5ffd5b80633af32abf14610306578063437823ec146103345780634549b039146103535780635342acb414610372575f5ffd5b80631cf8fef5116101ae5780631cf8fef51461028157806323b872dd146102b2578063313ce567146102d157806332035504146102f2575f5ffd5b8063053ab182146101e957806306fdde031461020a578063095ea7b31461023457806318160ddd14610263575f5ffd5b366101e557005b5f5ffd5b3480156101f4575f5ffd5b50610208610203366004611aae565b61062f565b005b348015610215575f5ffd5b5061021e61071a565b60405161022b9190611ac5565b60405180910390f35b34801561023f575f5ffd5b5061025361024e366004611b15565b6107aa565b604051901515815260200161022b565b34801561026e575f5ffd5b50600c545b60405190815260200161022b565b34801561028c575f5ffd5b506014546001600160a01b03165b6040516001600160a01b03909116815260200161022b565b3480156102bd575f5ffd5b506102536102cc366004611b3d565b6107c3565b3480156102dc575f5ffd5b50600b5460405160ff909116815260200161022b565b3480156102fd575f5ffd5b50600e54610273565b348015610311575f5ffd5b50610253610320366004611b77565b60086020525f908152604090205460ff1681565b34801561033f575f5ffd5b5061020861034e366004611b77565b6107e6565b34801561035e575f5ffd5b5061027361036d366004611b90565b61082d565b34801561037d575f5ffd5b5061025361038c366004611b77565b6001600160a01b03165f9081526007602052604090205460ff1690565b3480156103b4575f5ffd5b506102536103c3366004611b77565b6001600160a01b03165f9081526008602052604090205460ff1690565b3480156103eb575f5ffd5b506102086103fa366004611b77565b6108b3565b34801561040a575f5ffd5b50610208610419366004611b77565b6109f8565b348015610429575f5ffd5b50610273610438366004611b77565b610a5f565b348015610448575f5ffd5b506013546001600160a01b031661029a565b348015610465575f5ffd5b50600f54610273565b348015610479575f5ffd5b50610208610488366004611b77565b610abb565b348015610498575f5ffd5b50600b5461010090046001600160a01b031661029a565b3480156104ba575f5ffd5b5061021e610b15565b3480156104ce575f5ffd5b5060155461029a906001600160a01b031681565b3480156104ed575f5ffd5b506102536104fc366004611b15565b610b24565b34801561050c575f5ffd5b5061020861051b366004611b77565b610b31565b34801561052b575f5ffd5b5061020861053a366004611b77565b610bdf565b34801561054a575f5ffd5b50610208610c46565b34801561055e575f5ffd5b5061025361056d366004611b77565b6001600160a01b03165f9081526009602052604090205460ff1690565b348015610595575f5ffd5b5061027360175481565b3480156105aa575f5ffd5b506102736105b9366004611bc2565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105ee575f5ffd5b50601154610273565b348015610602575f5ffd5b50610208610611366004611b77565b610c7b565b348015610621575f5ffd5b506018546102539060ff1681565b335f8181526009602052604090205460ff16156106a85760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6106b283610e17565b5050506001600160a01b0383165f908152600560205260409020549091506106db908290611c07565b6001600160a01b0383165f90815260056020526040902055600d54610701908290611c07565b600d55600e54610712908490611c1a565b600e55505050565b60606003805461072990611c2d565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611c2d565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f336107b7818585610e68565b60019150505b92915050565b5f336107d0858285610e7a565b6107db858585610ef6565b506001949350505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600c548311156108805760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015260640161069f565b8161089c575f61088f84610e17565b509193506107bd92505050565b5f6108a684610e17565b509093506107bd92505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff161561093c5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015260640161069f565b6001600160a01b0381165f9081526005602052604090205415610993576001600160a01b0381165f9081526005602052604090205461097a9061120a565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319169091179055565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610a3f5760405162461bcd60e51b815260040161069f90611c65565b601480546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526009602052604081205460ff1615610a9a57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546107bd9061120a565b600b54339061010090046001600160a01b03166001600160a01b03160361082a57601580546001600160a01b0319166001600160a01b039290921691821790555f908152600860205260409020805460ff19166001179055565b60606004805461072990611c2d565b5f336107b7818585610ef6565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526008602052604090205460ff1615610bba5760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c69737465640000604482015260640161069f565b6001600160a01b0381165f908152600860205260409020805460ff1916600117905550565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610c265760405162461bcd60e51b815260040161069f90611c65565b601380546001600160a01b0383166001600160a01b031990911617905550565b600b54339061010090046001600160a01b03166001600160a01b031603610c79576018805460ff19166001179055436017555b565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff16610d035760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c756465640000000000604482015260640161069f565b5f5b600a54811015610e1357816001600160a01b0316600a8281548110610d2c57610d2c611cab565b5f918252602090912001546001600160a01b031603610e0b57600a8054610d5590600190611c07565b81548110610d6557610d65611cab565b5f91825260209091200154600a80546001600160a01b039092169183908110610d9057610d90611cab565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600990925220805460ff19169055600a805480610de757610de7611cbf565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610d05565b5050565b5f5f5f5f5f610e258661128c565b90505f610e328288611c07565b90505f610e3d6112bf565b90505f610e4a8284611cd3565b90505f610e57838b611cd3565b9a9199509297509095509350505050565b610e7583838360016112e0565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610ef05781811015610ee257604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161069f565b610ef084848484035f6112e0565b50505050565b6018548390839060ff16610f70576001600160a01b0382165f9081526008602052604090205460ff16610f6b5760405162461bcd60e51b815260206004820152601760248201527f54726164696e67206e6f742079657420656e61626c6564000000000000000000604482015260640161069f565b610ff6565b601754610f7e906003611c1a565b4311610ff6576001600160a01b0381165f9081526008602052604090205460ff16610ff65760405162461bcd60e51b815260206004820152602260248201527f4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374604482015261195960f21b606482015260840161069f565b6001600160a01b03851661105a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069f565b6001600160a01b0384166110bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069f565b5f6110c686610a5f565b9050838110156111275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069f565b6001600160a01b0385165f9081526007602052604090205460ff1661119e576016548461115387610a5f565b61115d9190611c1a565b111561119e5760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b604482015260640161069f565b6015545f906001600160a01b03888116911614806111c957506015546001600160a01b038781169116145b156111d2575060015b6001600160a01b0387165f9081526007602052604090205460ff16156111f557505f5b611201878787846113b2565b50505050505050565b5f600d548211156112705760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b606482015260840161069f565b5f6112796112bf565b90506112858184611cea565b9392505050565b5f5f601154600f5461129e9190611c1a565b90505f60646112ad8386611cd3565b6112b79190611cea565b949350505050565b5f5f5f6112ca611521565b90925090506112d98183611cea565b9250505090565b6001600160a01b0384166113095760405163e602df0560e01b81525f600482015260240161069f565b6001600160a01b03831661133257604051634a1406b160e11b81525f600482015260240161069f565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ef057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113a491815260200190565b60405180910390a350505050565b806113bf576113bf611691565b6001600160a01b0384165f9081526009602052604090205460ff1680156113fe57506001600160a01b0383165f9081526009602052604090205460ff16155b156114135761140e8484846116be565b61150b565b6001600160a01b0384165f9081526009602052604090205460ff1615801561145257506001600160a01b0383165f9081526009602052604090205460ff165b156114625761140e8484846117d9565b6001600160a01b0384165f9081526009602052604090205460ff161580156114a257506001600160a01b0383165f9081526009602052604090205460ff16155b156114b25761140e848484611878565b6001600160a01b0384165f9081526009602052604090205460ff1680156114f057506001600160a01b0383165f9081526009602052604090205460ff165b156115005761140e8484846118b2565b61150b848484611878565b80610ef057610ef0601054600f55601254601155565b600d54600c545f918291825b600a54811015611660578260055f600a848154811061154e5761154e611cab565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205411806115b657508160065f600a848154811061159057611590611cab565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b156115cc57600d54600c54945094505050509091565b60055f600a83815481106115e2576115e2611cab565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546116109084611c07565b925060065f600a838154811061162857611628611cab565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546116569083611c07565b915060010161152d565b50600c54600d546116719190611cea565b82101561168857600d54600c549350935050509091565b90939092509050565b600f541580156116a15750601154155b156116a857565b600f8054601055601180546012555f9182905555565b5f5f5f5f6116cb85610e17565b6001600160a01b038b165f90815260066020526040902054939750919550935091506116f8908690611c07565b6001600160a01b0388165f90815260066020908152604080832093909355600590522054611727908590611c07565b6001600160a01b038089165f908152600560205260408082209390935590881681522054611756908490611c1a565b6001600160a01b0387165f9081526005602052604090205561177987868361191b565b6117838582611a5c565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117c891815260200190565b60405180910390a350505050505050565b5f5f5f5f6117e685610e17565b6001600160a01b038b165f9081526005602052604090205493975091955093509150611813908590611c07565b6001600160a01b038089165f90815260056020908152604080832094909455918916815260069091522054611849908390611c1a565b6001600160a01b0387165f90815260066020908152604080832093909355600590522054611756908490611c1a565b5f5f5f5f61188585610e17565b6001600160a01b038b165f9081526005602052604090205493975091955093509150611727908590611c07565b5f5f5f5f6118bf85610e17565b6001600160a01b038b165f90815260066020526040902054939750919550935091506118ec908690611c07565b6001600160a01b0388165f90815260066020908152604080832093909355600590522054611813908590611c07565b5f60646011548461192c9190611cd3565b6119369190611cea565b90508015610ef0575f600261194b8484611cd3565b6119559190611cea565b6013546001600160a01b03165f9081526005602052604090205490915061197d908290611c1a565b6013546001600160a01b039081165f9081526005602052604080822093909355601454909116815220546119b2908290611c1a565b6014546001600160a01b039081165f9081526005602090815260409182902093909355601354905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36014546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600f5484611a6d9190611cd3565b611a779190611cea565b90505f611a848383611cd3565b905080600d54611a949190611c07565b600d55600e54611aa5908390611c1a565b600e5550505050565b5f60208284031215611abe575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611b10575f5ffd5b919050565b5f5f60408385031215611b26575f5ffd5b611b2f83611afa565b946020939093013593505050565b5f5f5f60608486031215611b4f575f5ffd5b611b5884611afa565b9250611b6660208501611afa565b929592945050506040919091013590565b5f60208284031215611b87575f5ffd5b61128582611afa565b5f5f60408385031215611ba1575f5ffd5b8235915060208301358015158114611bb7575f5ffd5b809150509250929050565b5f5f60408385031215611bd3575f5ffd5b611bdc83611afa565b9150611bea60208401611afa565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107bd576107bd611bf3565b808201808211156107bd576107bd611bf3565b600181811c90821680611c4157607f821691505b602082108103611c5f57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b80820281158282048414176107bd576107bd611bf3565b5f82611d0457634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220848b53d8ff40033ea81a10385d5e69bebcaac47ddb9ebfda710545112606e45864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x838FCC90 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xC4863770 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC4863770 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x58A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x5FAE0576 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x5FAE0576 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x706407FD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x372 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1CF8FEF5 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x2F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E5 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xB15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x29A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0xB24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x253 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B2 DUP4 PUSH2 0xE17 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x6DB SWAP1 DUP3 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x701 SWAP1 DUP3 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x712 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7D0 DUP6 DUP3 DUP6 PUSH2 0xE7A JUMP JUMPDEST PUSH2 0x7DB DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST DUP2 PUSH2 0x89C JUMPI PUSH0 PUSH2 0x88F DUP5 PUSH2 0xE17 JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A6 DUP5 PUSH2 0xE17 JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x993 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320616C72656164792077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC79 JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x17 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xE13 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE0B JUMPI PUSH1 0xA DUP1 SLOAD PUSH2 0xD55 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD65 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD90 JUMPI PUSH2 0xD90 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xDE7 JUMPI PUSH2 0xDE7 PUSH2 0x1CBF JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xE25 DUP7 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE32 DUP3 DUP9 PUSH2 0x1C07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3D PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE4A DUP3 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE57 DUP4 DUP12 PUSH2 0x1CD3 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE75 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xEF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xEF0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF70 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xF7E SWAP1 PUSH1 0x3 PUSH2 0x1C1A JUMP JUMPDEST NUMBER GT PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x10C6 DUP7 PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119E JUMPI PUSH1 0x16 SLOAD DUP5 PUSH2 0x1153 DUP8 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST GT ISZERO PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11C9 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F5 JUMPI POP PUSH0 JUMPDEST PUSH2 0x1201 DUP8 DUP8 DUP8 DUP5 PUSH2 0x13B2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD DUP3 GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x1279 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1285 DUP2 DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x12AD DUP4 DUP7 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x12CA PUSH2 0x1521 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1332 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13A4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x13BF JUMPI PUSH2 0x13BF PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1413 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1452 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1462 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14A2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1500 JUMPI PUSH2 0x140E DUP5 DUP5 DUP5 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x150B DUP5 DUP5 DUP5 PUSH2 0x1878 JUMP JUMPDEST DUP1 PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1660 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x154E JUMPI PUSH2 0x154E PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x15B6 JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1590 JUMPI PUSH2 0x1590 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x15CC JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15E2 JUMPI PUSH2 0x15E2 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1610 SWAP1 DUP5 PUSH2 0x1C07 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x1CAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1656 SWAP1 DUP4 PUSH2 0x1C07 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x152D JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1688 JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD ISZERO DUP1 ISZERO PUSH2 0x16A1 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x16A8 JUMPI JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x16CB DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16F8 SWAP1 DUP7 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1727 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1756 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1779 DUP8 DUP7 DUP4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x1783 DUP6 DUP3 PUSH2 0x1A5C JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17C8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x17E6 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1813 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1849 SWAP1 DUP4 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1756 SWAP1 DUP5 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1885 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1727 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x18BF DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x18EC SWAP1 DUP7 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1813 SWAP1 DUP6 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0x192C SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF0 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x194B DUP5 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x197D SWAP1 DUP3 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x14 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x19B2 SWAP1 DUP3 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP5 PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1A77 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A84 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x1AA5 SWAP1 DUP4 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B2F DUP4 PUSH2 0x1AFA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B58 DUP5 PUSH2 0x1AFA JUMP JUMPDEST SWAP3 POP PUSH2 0x1B66 PUSH1 0x20 DUP6 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1285 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BB7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1BDC DUP4 PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEA PUSH1 0x20 DUP5 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BF3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP12 MSTORE8 0xD8 SELFDESTRUCT BLOCKHASH SUB RETURNDATACOPY 0xA8 BYTE LT CODESIZE TSTORE MCOPY PUSH10 0xBEBCAAC47DDB9EBFDA71 SDIV GASLIMIT GT 0x26 MOD RETF PC PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "143:15440:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4617:434;;;;;;;;;;-1:-1:-1;4617:434:5;;;;;:::i;:::-;;:::i;:::-;;1760:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;-1:-1:-1;3979:186:1;;;;;:::i;:::-;;:::i;:::-;;;1316:14:6;;1309:22;1291:41;;1279:2;1264:18;3979:186:1;1151:187:6;2497:107:5;;;;;;;;;;-1:-1:-1;2587:7:5;;2497:107;;;1489:25:6;;;1477:2;1462:18;2497:107:5;1343:177:6;2947:112:5;;;;;;;;;;-1:-1:-1;3030:19:5;;-1:-1:-1;;;;;3030:19:5;2947:112;;;-1:-1:-1;;;;;1689:32:6;;;1671:51;;1659:2;1644:18;2947:112:5;1525:203:6;4757:244:1;;;;;;;;;;-1:-1:-1;4757:244:1;;;;;:::i;:::-;;:::i;2381:104:5:-;;;;;;;;;;-1:-1:-1;2466:9:5;;2381:104;;2466:9;;;;2254:36:6;;2242:2;2227:18;2381:104:5;2112:184:6;3649:104:5;;;;;;;;;;-1:-1:-1;3733:10:5;;3649:104;;340:45;;;;;;;;;;-1:-1:-1;340:45:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;3765:115;;;;;;;;;;-1:-1:-1;3765:115:5;;;;;:::i;:::-;;:::i;5063:513::-;;;;;;;;;;-1:-1:-1;5063:513:5;;;;;:::i;:::-;;:::i;3071:128::-;;;;;;;;;;-1:-1:-1;3071:128:5;;;;;:::i;:::-;-1:-1:-1;;;;;3162:27:5;3136:4;3162:27;;;:18;:27;;;;;;;;;3071:128;6823:126;;;;;;;;;;-1:-1:-1;6823:126:5;;;;;:::i;:::-;-1:-1:-1;;;;;6917:22:5;6891:4;6917:22;;;:13;:22;;;;;;;;;6823:126;5942:353;;;;;;;;;;-1:-1:-1;5942:353:5;;;;;:::i;:::-;;:::i;4166:266::-;;;;;;;;;;-1:-1:-1;4166:266:5;;;;;:::i;:::-;;:::i;3211:300::-;;;;;;;;;;-1:-1:-1;3211:300:5;;;;;:::i;:::-;;:::i;2827:108::-;;;;;;;;;;-1:-1:-1;2908:17:5;;-1:-1:-1;;;;;2908:17:5;2827:108;;2616:99;;;;;;;;;;-1:-1:-1;2691:14:5;;2616:99;;4444:161;;;;;;;;;;-1:-1:-1;4444:161:5;;;;;:::i;:::-;;:::i;2194:91::-;;;;;;;;;;-1:-1:-1;2269:6:5;;;;;-1:-1:-1;;;;;2269:6:5;2194:91;;1962:93:1;;;;;;;;;;;;;:::i;981:26:5:-;;;;;;;;;;-1:-1:-1;981:26:5;;;;-1:-1:-1;;;;;981:26:5;;;3296:178:1;;;;;;;;;;-1:-1:-1;3296:178:1;;;;;:::i;:::-;;:::i;6961:193:5:-;;;;;;;;;;-1:-1:-1;6961:193:5;;;;;:::i;:::-;;:::i;3892:262::-;;;;;;;;;;-1:-1:-1;3892:262:5;;;;;:::i;:::-;;:::i;7166:122::-;;;;;;;;;;;;;:::i;3523:114::-;;;;;;;;;;-1:-1:-1;3523:114:5;;;;;:::i;:::-;-1:-1:-1;;;;;3607:20:5;3581:4;3607:20;;;:11;:20;;;;;;;;;3523:114;1064:26;;;;;;;;;;;;;;;;3532:140:1;;;;;;;;;;-1:-1:-1;3532:140:1;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:1;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2727:88:5;;;;;;;;;;-1:-1:-1;2798:7:5;;2727:88;;6307:504;;;;;;;;;;-1:-1:-1;6307:504:5;;;;;:::i;:::-;;:::i;1099:31::-;;;;;;;;;;-1:-1:-1;1099:31:5;;;;;;;;4617:434;735:10:4;4671:14:5;4738:19;;;:11;:19;;;;;;;;4737:20;4713:120;;;;-1:-1:-1;;;4713:120:5;;3359:2:6;4713:120:5;;;3341:21:6;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;-1:-1:-1;;;3488:18:6;;;3481:42;3540:19;;4713:120:5;;;;;;;;;4847:15;4872:27;4891:7;4872:18;:27::i;:::-;-1:-1:-1;;;;;;;;4930:15:5;;;;;;:7;:15;;;;;;4846:53;;-1:-1:-1;4930:25:5;;4846:53;;4930:25;:::i;:::-;-1:-1:-1;;;;;4912:15:5;;;;;;:7;:15;;;;;:43;4978:7;;:17;;4988:7;;4978:17;:::i;:::-;4968:7;:27;5021:10;;:20;;5034:7;;5021:20;:::i;:::-;5008:10;:33;-1:-1:-1;;;4617:434:5:o;1760:89:1:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:4;4106:31:1;735:10:4;4122:7:1;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:4;4900:37:1;4916:4;735:10:4;4931:5:1;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:1;;4757:244;-1:-1:-1;;;;4757:244:1:o;3765:115:5:-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;3836:27:5;::::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;3836:34:5::1;3866:4;3836:34;::::0;;2331:28;3765:115;:::o;5063:513::-;5187:7;5235;;5224;:18;;5216:62;;;;-1:-1:-1;;;5216:62:5;;4552:2:6;5216:62:5;;;4534:21:6;4591:2;4571:18;;;4564:30;4630:33;4610:18;;;4603:61;4681:18;;5216:62:5;4350:355:6;5216:62:5;5296:17;5291:276;;5333:15;5358:27;5377:7;5358:18;:27::i;:::-;-1:-1:-1;5332:53:5;;-1:-1:-1;5402:14:5;;-1:-1:-1;;;5402:14:5;5291:276;5456:23;5487:27;5506:7;5487:18;:27::i;:::-;-1:-1:-1;5453:61:5;;-1:-1:-1;5531:22:5;;-1:-1:-1;;;5531:22:5;5942:353;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;6032:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;6031:21;6023:61;;;::::0;-1:-1:-1;;;6023:61:5;;4912:2:6;6023:61:5::1;::::0;::::1;4894:21:6::0;4951:2;4931:18;;;4924:30;4990:29;4970:18;;;4963:57;5037:18;;6023:61:5::1;4710:351:6::0;6023:61:5::1;-1:-1:-1::0;;;;;6101:16:5;::::1;6120:1;6101:16:::0;;;:7:::1;:16;::::0;;;;;:20;6097:113:::1;;-1:-1:-1::0;;;;;6179:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;6159:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;6140:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;6097:113:::1;-1:-1:-1::0;;;;;6222:20:5::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;6222:27:5::1;6245:4;6222:27:::0;;::::1;::::0;;;6262:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6262:23:5::1;::::0;;::::1;::::0;;5942:353::o;4166:266::-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;4277:27:5;::::1;4253:121;;;;-1:-1:-1::0;;;4253:121:5::1;;;;;;;:::i;:::-;4387:19;:35:::0;;-1:-1:-1;;;;;4387:35:5;::::1;-1:-1:-1::0;;;;;;4387:35:5;;::::1;;::::0;;4166:266;:::o;3211:300::-;-1:-1:-1;;;;;3372:19:5;;3339:7;3372:19;;;:11;:19;;;;;;;;3368:78;;;-1:-1:-1;;;;;;3417:15:5;;;;;:7;:15;;;;;;;3211:300::o;3368:78::-;-1:-1:-1;;;;;3485:15:5;;;;;;:7;:15;;;;;;3465:36;;:19;:36::i;4444:161::-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;4523:11:::1;:26:::0;;-1:-1:-1;;;;;;4523:26:5::1;-1:-1:-1::0;;;;;4523:26:5;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4562:26:5;;;:13:::1;:26;::::0;;;;:33;;-1:-1:-1;;4562:33:5::1;-1:-1:-1::0;4562:33:5::1;::::0;;4444:161::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:4;3419:27:1;735:10:4;3436:2:1;3440:5;3419:9;:27::i;6961:193:5:-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;7045:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;::::1;;7044:23;7036:66;;;::::0;-1:-1:-1;;;7036:66:5;;5675:2:6;7036:66:5::1;::::0;::::1;5657:21:6::0;5714:2;5694:18;;;5687:30;5753:32;5733:18;;;5726:60;5803:18;;7036:66:5::1;5473:354:6::0;7036:66:5::1;-1:-1:-1::0;;;;;7115:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;:29;;-1:-1:-1;;7115:29:5::1;7140:4;7115:29;::::0;;6961:193;:::o;3892:262::-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;4001:27:5;::::1;3977:121;;;;-1:-1:-1::0;;;3977:121:5::1;;;;;;;:::i;:::-;4111:17;:33:::0;;-1:-1:-1;;;;;4111:33:5;::::1;-1:-1:-1::0;;;;;;4111:33:5;;::::1;;::::0;;3892:262;:::o;7166:122::-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;7221:11:::1;:18:::0;;-1:-1:-1;;7221:18:5::1;7235:4;7221:18;::::0;;7266:12:::1;7252:11;:26:::0;2331:28;7166:122::o;6307:504::-;2269:6;;2346:10;;2269:6;;;-1:-1:-1;;;;;2269:6:5;-1:-1:-1;;;;;2335:21:5;;2331:28;;-1:-1:-1;;;;;6394:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;6386:60;;;::::0;-1:-1:-1;;;6386:60:5;;6034:2:6;6386:60:5::1;::::0;::::1;6016:21:6::0;6073:2;6053:18;;;6046:30;6112:29;6092:18;;;6085:57;6159:18;;6386:60:5::1;5832:351:6::0;6386:60:5::1;6464:9;6459:343;6483:9;:16:::0;6479:20;::::1;6459:343;;;6543:7;-1:-1:-1::0;;;;;6527:23:5::1;:9;6537:1;6527:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6527:12:5::1;:23:::0;6523:266:::1;;6588:9;6598:16:::0;;:20:::1;::::0;6617:1:::1;::::0;6598:20:::1;:::i;:::-;6588:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;6573:9:::1;:12:::0;;-1:-1:-1;;;;;6588:31:5;;::::1;::::0;6583:1;;6573:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;6573:46:5::1;-1:-1:-1::0;;;;;6573:46:5;;::::1;;::::0;;6640:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;6681:11:::1;:20:::0;;;;:28;;-1:-1:-1;;6681:28:5::1;::::0;;6730:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6730:15:5;;;;;-1:-1:-1;;;;;;6730:15:5::1;::::0;;;;;6459:343:::1;6307:504:::0;:::o;6523:266::-:1;6501:3;;6459:343;;;;6307:504:::0;:::o;13170:585::-;13286:7;13310;13334;13358;13399:16;13418:29;13439:7;13418:20;:29::i;:::-;13399:48;-1:-1:-1;13460:23:5;13486:18;13399:48;13486:7;:18;:::i;:::-;13460:44;;13517:19;13539:10;:8;:10::i;:::-;13517:32;-1:-1:-1;13562:23:5;13588:29;13517:32;13588:15;:29;:::i;:::-;13562:55;-1:-1:-1;13630:15:5;13648:21;13658:11;13648:7;:21;:::i;:::-;13630:39;13699:15;;-1:-1:-1;13716:15:5;;-1:-1:-1;13733:11:5;;-1:-1:-1;13170:585:5;-1:-1:-1;;;;13170:585:5:o;8715:128:1:-;8799:37;8808:5;8815:7;8824:5;8831:4;8799:8;:37::i;:::-;8715:128;;;:::o;10404:476::-;-1:-1:-1;;;;;3638:18:1;;;10503:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10569:36:1;;10565:309;;;10644:5;10625:16;:24;10621:130;;;10676:60;;-1:-1:-1;;;10676:60:1;;-1:-1:-1;;;;;6845:32:6;;10676:60:1;;;6827:51:6;6894:18;;;6887:34;;;6937:18;;;6930:34;;;6800:18;;10676:60:1;6625:345:6;10621:130:1;10792:57;10801:5;10808:7;10836:5;10817:16;:24;10843:5;10792:8;:57::i;:::-;10493:387;10404:476;;;:::o;7706:1020:5:-;7370:11;;7861:6;;7869:9;;7370:11;;7365:306;;-1:-1:-1;;;;;7408:19:5;;;;;;:13;:19;;;;;;;;7400:55;;;;-1:-1:-1;;;7400:55:5;;7177:2:6;7400:55:5;;;7159:21:6;7216:2;7196:18;;;7189:30;7255:25;7235:18;;;7228:53;7298:18;;7400:55:5;6975:347:6;7400:55:5;7365:306;;;7495:11;;:15;;7509:1;7495:15;:::i;:::-;7479:12;:31;7475:196;;-1:-1:-1;;;;;7601:17:5;;;;;;:13;:17;;;;;;;;7593:64;;;;-1:-1:-1;;;7593:64:5;;7529:2:6;7593:64:5;;;7511:21:6;7568:2;7548:18;;;7541:30;7607:34;7587:18;;;7580:62;-1:-1:-1;;;7658:18:6;;;7651:32;7700:19;;7593:64:5;7327:398:6;7593:64:5;-1:-1:-1;;;;;7901:20:5;::::1;7893:70;;;::::0;-1:-1:-1;;;7893:70:5;;7932:2:6;7893:70:5::1;::::0;::::1;7914:21:6::0;7971:2;7951:18;;;7944:30;8010:34;7990:18;;;7983:62;-1:-1:-1;;;8061:18:6;;;8054:35;8106:19;;7893:70:5::1;7730:401:6::0;7893:70:5::1;-1:-1:-1::0;;;;;7984:23:5;::::1;7976:71;;;::::0;-1:-1:-1;;;7976:71:5;;8338:2:6;7976:71:5::1;::::0;::::1;8320:21:6::0;8377:2;8357:18;;;8350:30;8416:34;8396:18;;;8389:62;-1:-1:-1;;;8467:18:6;;;8460:33;8510:19;;7976:71:5::1;8136:399:6::0;7976:71:5::1;8060:21;8084:17;8094:6;8084:9;:17::i;:::-;8060:41;;8155:6;8138:13;:23;;8114:117;;;::::0;-1:-1:-1;;;8114:117:5;;8742:2:6;8114:117:5::1;::::0;::::1;8724:21:6::0;8781:2;8761:18;;;8754:30;8820:34;8800:18;;;8793:62;-1:-1:-1;;;8871:18:6;;;8864:36;8917:19;;8114:117:5::1;8540:402:6::0;8114:117:5::1;-1:-1:-1::0;;;;;3162:27:5;;3136:4;3162:27;;;:18;:27;;;;;;;;8248:198:::1;;8361:15;;8351:6;8328:20;8338:9;8328;:20::i;:::-;:29;;;;:::i;:::-;:48;;8300:132;;;::::0;-1:-1:-1;;;8300:132:5;;9149:2:6;8300:132:5::1;::::0;::::1;9131:21:6::0;9188:2;9168:18;;;9161:30;-1:-1:-1;;;9207:18:6;;;9200:46;9263:18;;8300:132:5::1;8947:340:6::0;8300:132:5::1;8501:11;::::0;8458:12:::1;::::0;-1:-1:-1;;;;;8491:21:5;;::::1;8501:11:::0;::::1;8491:21;::::0;:49:::1;;-1:-1:-1::0;8529:11:5::1;::::0;-1:-1:-1;;;;;8516:24:5;;::::1;8529:11:::0;::::1;8516:24;8491:49;8487:100;;;-1:-1:-1::0;8569:4:5::1;8487:100;-1:-1:-1::0;;;;;3162:27:5;;3136:4;3162:27;;;:18;:27;;;;;;;;8603:47:::1;;;-1:-1:-1::0;8643:5:5::1;8603:47;8666:50;8681:6;8689:9;8700:6;8708:7;8666:14;:50::i;:::-;7880:846;;7706:1020:::0;;;;;:::o;5588:342::-;5689:7;5753;;5742;:18;;5718:116;;;;-1:-1:-1;;;5718:116:5;;9494:2:6;5718:116:5;;;9476:21:6;9533:2;9513:18;;;9506:30;9572:34;9552:18;;;9545:62;-1:-1:-1;;;9623:18:6;;;9616:40;9673:19;;5718:116:5;9292:406:6;5718:116:5;5847:19;5869:10;:8;:10::i;:::-;5847:32;-1:-1:-1;5899:21:5;5847:32;5899:7;:21;:::i;:::-;5892:28;5588:342;-1:-1:-1;;;5588:342:5:o;12888:270::-;12990:7;13019:16;13055:7;;13038:14;;:24;;;;:::i;:::-;13019:43;-1:-1:-1;13075:16:5;13117:3;13095:18;13019:43;13095:7;:18;:::i;:::-;13094:26;;;;:::i;:::-;13075:45;12888:270;-1:-1:-1;;;;12888:270:5:o;14046:167::-;14088:7;14111:15;14128;14147:19;:17;:19::i;:::-;14110:56;;-1:-1:-1;14110:56:5;-1:-1:-1;14186:17:5;14110:56;;14186:17;:::i;:::-;14179:24;;;;14046:167;:::o;9690:432:1:-;-1:-1:-1;;;;;9802:19:1;;9798:89;;9844:32;;-1:-1:-1;;;9844:32:1;;9873:1;9844:32;;;1671:51:6;1644:18;;9844:32:1;1525:203:6;9798:89:1;-1:-1:-1;;;;;9900:21:1;;9896:90;;9944:31;;-1:-1:-1;;;9944:31:1;;9972:1;9944:31;;;1671:51:6;1644:18;;9944:31:1;1525:203:6;9896:90:1;-1:-1:-1;;;;;9995:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10040:76;;;;10090:7;-1:-1:-1;;;;;10074:31:1;10083:5;-1:-1:-1;;;;;10074:31:1;;10099:5;10074:31;;;;1489:25:6;;1477:2;1462:18;;1343:177;10074:31:1;;;;;;;;9690:432;;;;:::o;8738:844:5:-;8896:7;8891:59;;8922:14;:12;:14::i;:::-;-1:-1:-1;;;;;8970:17:5;;;;;;:11;:17;;;;;;;;:37;;;;-1:-1:-1;;;;;;8992:15:5;;;;;;:11;:15;;;;;;;;8991:16;8970:37;8966:531;;;9026:38;9048:4;9054:2;9058:5;9026:21;:38::i;:::-;8966:531;;;-1:-1:-1;;;;;9089:17:5;;;;;;:11;:17;;;;;;;;9088:18;:37;;;;-1:-1:-1;;;;;;9110:15:5;;;;;;:11;:15;;;;;;;;9088:37;9084:413;;;9144:36;9164:4;9170:2;9174:5;9144:19;:36::i;9084:413::-;-1:-1:-1;;;;;9205:17:5;;;;;;:11;:17;;;;;;;;9204:18;:38;;;;-1:-1:-1;;;;;;9227:15:5;;;;;;:11;:15;;;;;;;;9226:16;9204:38;9200:297;;;9261:34;9279:4;9285:2;9289:5;9261:17;:34::i;9200:297::-;-1:-1:-1;;;;;9319:17:5;;;;;;:11;:17;;;;;;;;:36;;;;-1:-1:-1;;;;;;9340:15:5;;;;;;:11;:15;;;;;;;;9319:36;9315:182;;;9374:38;9396:4;9402:2;9406:5;9374:21;:38::i;9315:182::-;9449:34;9467:4;9473:2;9477:5;9449:17;:34::i;:::-;9518:7;9513:60;;9544:15;9924:22;;9907:14;:39;9969:15;;9959:7;:25;9861:133;14225:702;14325:7;;14363;;14276;;;;;14387:384;14411:9;:16;14407:20;;14387:384;;;14499:7;14475;:21;14483:9;14493:1;14483:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14483:12:5;14475:21;;;;;;;;;;;;;:31;;:85;;;14553:7;14529;:21;14537:9;14547:1;14537:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14537:12:5;14529:21;;;;;;;;;;;;;:31;14475:85;14451:191;;;14607:7;;14616;;14599:25;;;;;;;14225:702;;:::o;14451:191::-;14678:7;:21;14686:9;14696:1;14686:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14686:12:5;14678:21;;;;;;;;;;;;;14668:31;;:7;:31;:::i;:::-;14658:41;;14736:7;:21;14744:9;14754:1;14744:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14744:12:5;14736:21;;;;;;;;;;;;;14726:31;;:7;:31;:::i;:::-;14716:41;-1:-1:-1;14429:3:5;;14387:384;;;;14811:7;;14801;;:17;;;;:::i;:::-;14791:7;:27;14787:89;;;14845:7;;14854;;14837:25;;;;;;14225:702;;:::o;14787:89::-;14900:7;;14909;;-1:-1:-1;14225:702:5;-1:-1:-1;14225:702:5:o;9594:255::-;9643:14;;:19;:35;;;;-1:-1:-1;9666:7:5;;:12;9643:35;9639:48;;;9594:255::o;9639:48::-;9728:14;;;9703:22;:39;9773:7;;;9755:15;:25;-1:-1:-1;9797:18:5;;;;9828:11;9594:255::o;11390:702::-;11553:15;11585:23;11625;11665:19;11700:27;11719:7;11700:18;:27::i;:::-;-1:-1:-1;;;;;11758:15:5;;;;;;:7;:15;;;;;;11536:191;;-1:-1:-1;11536:191:5;;-1:-1:-1;11536:191:5;-1:-1:-1;11536:191:5;-1:-1:-1;11758:25:5;;11776:7;;11758:25;:::i;:::-;-1:-1:-1;;;;;11740:15:5;;;;;;:7;:15;;;;;;;;:43;;;;11814:7;:15;;;;:25;;11832:7;;11814:25;:::i;:::-;-1:-1:-1;;;;;11796:15:5;;;;;;;:7;:15;;;;;;:43;;;;11873:18;;;;;;;:36;;11894:15;;11873:36;:::i;:::-;-1:-1:-1;;;;;11852:18:5;;;;;;:7;:18;;;;;:57;11926:44;11941:6;11949:7;11958:11;11926:14;:44::i;:::-;11983:33;11995:7;12004:11;11983;:33::i;:::-;12055:9;-1:-1:-1;;;;;12038:44:5;12047:6;-1:-1:-1;;;;;12038:44:5;;12066:15;12038:44;;;;1489:25:6;;1477:2;1462:18;;1343:177;12038:44:5;;;;;;;;11523:569;;;;11390:702;;;:::o;10664:714::-;10825:15;10857:23;10897;10937:19;10972:27;10991:7;10972:18;:27::i;:::-;-1:-1:-1;;;;;11030:15:5;;;;;;:7;:15;;;;;;10808:191;;-1:-1:-1;10808:191:5;;-1:-1:-1;10808:191:5;-1:-1:-1;10808:191:5;-1:-1:-1;11030:25:5;;10808:191;;11030:25;:::i;:::-;-1:-1:-1;;;;;11012:15:5;;;;;;;:7;:15;;;;;;;;:43;;;;11089:18;;;;;:7;:18;;;;;:36;;11110:15;;11089:36;:::i;:::-;-1:-1:-1;;;;;11068:18:5;;;;;;:7;:18;;;;;;;;:57;;;;11159:7;:18;;;;:36;;11180:15;;11159:36;:::i;10006:646::-;10165:15;10197:23;10237;10277:19;10312:27;10331:7;10312:18;:27::i;:::-;-1:-1:-1;;;;;10374:15:5;;;;;;:7;:15;;;;;;10148:191;;-1:-1:-1;10148:191:5;;-1:-1:-1;10148:191:5;-1:-1:-1;10148:191:5;-1:-1:-1;10374:25:5;;10148:191;;10374:25;:::i;12104:772::-;12267:15;12299:23;12339;12379:19;12414:27;12433:7;12414:18;:27::i;:::-;-1:-1:-1;;;;;12472:15:5;;;;;;:7;:15;;;;;;12250:191;;-1:-1:-1;12250:191:5;;-1:-1:-1;12250:191:5;-1:-1:-1;12250:191:5;-1:-1:-1;12472:25:5;;12490:7;;12472:25;:::i;:::-;-1:-1:-1;;;;;12454:15:5;;;;;;:7;:15;;;;;;;;:43;;;;12528:7;:15;;;;:25;;12546:7;;12528:25;:::i;14939:639::-;15080:15;15120:3;15109:7;;15099;:17;;;;:::i;:::-;15098:25;;;;:::i;:::-;15080:43;-1:-1:-1;15140:11:5;;15136:433;;15170:15;15214:1;15189:21;15199:11;15189:7;:21;:::i;:::-;15188:27;;;;:::i;:::-;15269:17;;-1:-1:-1;;;;;15269:17:5;15261:26;;;;:7;:26;;;;;;15170:45;;-1:-1:-1;15261:36:5;;15170:45;;15261:36;:::i;:::-;15240:17;;-1:-1:-1;;;;;15240:17:5;;;15232:26;;;;:7;:26;;;;;;:65;;;;15372:19;;;;;15364:28;;;;:57;;15414:7;;15364:57;:::i;:::-;15322:19;;-1:-1:-1;;;;;15322:19:5;;;15314:28;;;;:7;:28;;;;;;;;;:107;;;;15460:17;;15443:44;;1489:25:6;;;15460:17:5;;;;15443:44;;;;;;1462:18:6;15443:44:5;;;;;;;15526:19;;15509:46;;1489:25:6;;;-1:-1:-1;;;;;15526:19:5;;;;15509:46;;;;;1477:2:6;1462:18;15509:46:5;;;;;;;15153:416;15067:511;14939:639;;;:::o;13767:267::-;13847:12;13891:3;13873:14;;13863:7;:24;;;;:::i;:::-;13862:32;;;;:::i;:::-;13847:47;-1:-1:-1;13907:12:5;13922:18;13929:11;13847:47;13922:18;:::i;:::-;13907:33;;13977:4;13967:7;;:14;;;;:::i;:::-;13957:7;:24;14007:10;;:17;;14020:4;;14007:17;:::i;:::-;13994:10;:30;-1:-1:-1;;;;13767:267:5:o;14:226:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:6;;14:226;-1:-1:-1;14:226:6:o;245:418::-;394:2;383:9;376:21;357:4;426:6;420:13;469:6;464:2;453:9;449:18;442:34;528:6;523:2;515:6;511:15;506:2;495:9;491:18;485:50;584:1;579:2;570:6;559:9;555:22;551:31;544:42;654:2;647;643:7;638:2;630:6;626:15;622:29;611:9;607:45;603:54;595:62;;;245:418;;;;:::o;668:173::-;736:20;;-1:-1:-1;;;;;785:31:6;;775:42;;765:70;;831:1;828;821:12;765:70;668:173;;;:::o;846:300::-;914:6;922;975:2;963:9;954:7;950:23;946:32;943:52;;;991:1;988;981:12;943:52;1014:29;1033:9;1014:29;:::i;:::-;1004:39;1112:2;1097:18;;;;1084:32;;-1:-1:-1;;;846:300:6:o;1733:374::-;1810:6;1818;1826;1879:2;1867:9;1858:7;1854:23;1850:32;1847:52;;;1895:1;1892;1885:12;1847:52;1918:29;1937:9;1918:29;:::i;:::-;1908:39;;1966:38;2000:2;1989:9;1985:18;1966:38;:::i;:::-;1733:374;;1956:48;;-1:-1:-1;;;2073:2:6;2058:18;;;;2045:32;;1733:374::o;2301:186::-;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;2492:395::-;2557:6;2565;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2679:23;;;-1:-1:-1;2778:2:6;2763:18;;2750:32;2820:15;;2813:23;2801:36;;2791:64;;2851:1;2848;2841:12;2791:64;2874:7;2864:17;;;2492:395;;;;;:::o;2892:260::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3060:29;3079:9;3060:29;:::i;:::-;3050:39;;3108:38;3142:2;3131:9;3127:18;3108:38;:::i;:::-;3098:48;;2892:260;;;;;:::o;3570:127::-;3631:10;3626:3;3622:20;3619:1;3612:31;3662:4;3659:1;3652:15;3686:4;3683:1;3676:15;3702:128;3769:9;;;3790:11;;;3787:37;;;3804:18;;:::i;3835:125::-;3900:9;;;3921:10;;;3918:36;;;3934:18;;:::i;3965:380::-;4044:1;4040:12;;;;4087;;;4108:61;;4162:4;4154:6;4150:17;4140:27;;4108:61;4215:2;4207:6;4204:14;4184:18;4181:38;4178:161;;4261:10;4256:3;4252:20;4249:1;4242:31;4296:4;4293:1;4286:15;4324:4;4321:1;4314:15;4178:161;;3965:380;;;:::o;5066:402::-;5268:2;5250:21;;;5307:2;5287:18;;;5280:30;5346:34;5341:2;5326:18;;5319:62;-1:-1:-1;;;5412:2:6;5397:18;;5390:36;5458:3;5443:19;;5066:402::o;6188:127::-;6249:10;6244:3;6240:20;6237:1;6230:31;6280:4;6277:1;6270:15;6304:4;6301:1;6294:15;6320:127;6381:10;6376:3;6372:20;6369:1;6362:31;6412:4;6409:1;6402:15;6436:4;6433:1;6426:15;6452:168;6525:9;;;6556;;6573:15;;;6567:22;;6553:37;6543:71;;6594:18;;:::i;9703:217::-;9743:1;9769;9759:132;;9813:10;9808:3;9804:20;9801:1;9794:31;9848:4;9845:1;9838:15;9876:4;9873:1;9866:15;9759:132;-1:-1:-1;9905:9:6;;9703:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1497400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24802",
								"balanceOf(address)": "infinite",
								"changeDevelopmentAccount(address)": "26857",
								"changeMarketingAccount(address)": "26813",
								"changePairAddress(address)": "51116",
								"decimals()": "2378",
								"excludeAccountFromReward(address)": "infinite",
								"excludeFromFee(address)": "26852",
								"getDevelopmentAccount()": "2365",
								"getMarketingAccount()": "2376",
								"getTaxFee()": "2357",
								"includeAccountinReward(address)": "infinite",
								"isExcluded(address)": "2635",
								"isExcludedFromFee(address)": "2658",
								"isWhitelisted(address)": "2574",
								"isWhitelistedAddress(address)": "2591",
								"launchBlock()": "2405",
								"name()": "infinite",
								"openTrading()": "48711",
								"owner()": "2453",
								"pairAddress()": "2403",
								"reflect(uint256)": "infinite",
								"reflectionFee()": "2359",
								"reflectionFromToken(uint256,bool)": "infinite",
								"symbol()": "infinite",
								"totalFeesRedistributed()": "2403",
								"totalSupply()": "2393",
								"tradingOpen()": "2419",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"whitelistedAddress(address)": "29106"
							},
							"internal": {
								"_getCompleteTaxValue(uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_getTransferValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"removeAllFee()": "62689",
								"restoreAllFee()": "infinite",
								"taxFeeTransfer(address,uint256,uint256)": "infinite",
								"tokenFromReflection(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 523,
									"end": 558,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 523,
									"end": 558,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 548,
									"end": 558,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 523,
									"end": 558,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 523,
									"end": 558,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 682,
									"end": 712,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "PUSH",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 2141,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "30B1319031B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4359424343"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1197,
									"end": 1206,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1197,
									"end": 1211,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1209,
									"end": 1211,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1197,
									"end": 1211,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1247,
									"end": 1269,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1247,
									"end": 1249,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1247,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1247,
									"end": 1269,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1269,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1247,
									"end": 1269,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1234,
									"end": 1269,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "3B9ACA00"
								},
								{
									"begin": 1234,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1234,
									"end": 1269,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1269,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1234,
									"end": 1269,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1224,
									"end": 1231,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1224,
									"end": 1269,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1224,
									"end": 1269,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1224,
									"end": 1269,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1313,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1300,
									"end": 1313,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1300,
									"end": 1313,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1300,
									"end": 1313,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1313,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1300,
									"end": 1313,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1314,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1293,
									"end": 1314,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1293,
									"end": 1314,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1293,
									"end": 1314,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1314,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1293,
									"end": 1314,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1289,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 1282,
									"end": 1315,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1349,
									"end": 1350,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1332,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1363,
									"end": 1385,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1363,
									"end": 1402,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1419,
									"end": 1426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1419,
									"end": 1430,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1430,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1430,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1443,
									"end": 1458,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1443,
									"end": 1468,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1511,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1511,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1511,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 1511,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1485,
									"end": 1511,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1552,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1598,
									"end": 1620,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1619,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1610,
									"end": 1619,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1598,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1598,
									"end": 1620,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1598,
									"end": 1620,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1598,
									"end": 1620,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1598,
									"end": 1620,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1587,
									"end": 1620,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1587,
									"end": 1620,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1587,
									"end": 1595,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "989680"
								},
								{
									"begin": 1587,
									"end": 1620,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1587,
									"end": 1620,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1587,
									"end": 1620,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1587,
									"end": 1620,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1569,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1569,
									"end": 1620,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1737,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1703,
									"end": 1721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1703,
									"end": 1730,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1722,
									"end": 1729,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2285,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1729,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1722,
									"end": 1729,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1730,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1769,
									"end": 1786,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1769,
									"end": 1786,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1769,
									"end": 1786,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1769,
									"end": 1786,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1768,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1787,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1737,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1794,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1826,
									"end": 1845,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1826,
									"end": 1845,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1826,
									"end": 1845,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1826,
									"end": 1845,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1826,
									"end": 1845,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1846,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1846,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1846,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1846,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1846,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1853,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1893,
									"end": 1897,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1899,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1899,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1899,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1899,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1899,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1906,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1932,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1919,
									"end": 1932,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1933,
									"end": 1940,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2285,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1933,
									"end": 1940,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1933,
									"end": 1940,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1941,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 1992,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1975,
									"end": 1992,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 1992,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 1992,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1974,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1993,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2000,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2046,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2027,
									"end": 2046,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2046,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2046,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2054,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2085,
									"end": 2092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2075,
									"end": 2081,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1948,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2075,
									"end": 2081,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2075,
									"end": 2081,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2074,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2082,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2092,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2092,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2092,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2105,
									"end": 2131,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2105,
									"end": 2131,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2111,
									"end": 2121,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 2111,
									"end": 2121,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2105,
									"end": 2110,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2105,
									"end": 2131,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2105,
									"end": 2131,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2105,
									"end": 2131,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4876,
									"end": 4927,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7629,
									"end": 7630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7633,
									"end": 7640,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7642,
									"end": 7647,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7613,
									"end": 7648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6238,
									"end": 6243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6222,
									"end": 6243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6274,
									"end": 6293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5270,
									"end": 5321,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5068,
									"end": 5413,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6811,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7019,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7081,
									"end": 7085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7091,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5552,
									"end": 5554,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2726,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2711,
									"end": 2714,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2707,
									"end": 2727,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2728,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2752,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2771,
									"end": 2775,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2776,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2875,
									"end": 2876,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2928,
									"end": 2929,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2918,
									"end": 2926,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2915,
									"end": 2930,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2978,
									"end": 2982,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2973,
									"end": 2976,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2969,
									"end": 2983,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2963,
									"end": 2967,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2960,
									"end": 2984,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2987,
									"end": 3005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 3038,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3027,
									"end": 3035,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3023,
									"end": 3039,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3134,
									"end": 3135,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 3162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3221,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3287,
									"end": 3288,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3335,
									"end": 3339,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3372,
									"end": 3373,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3436,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3504,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3460,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3535,
									"end": 3538,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3525,
									"end": 3533,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3539,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3542,
									"end": 3560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3598,
									"end": 3599,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3756,
									"end": 3758,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3746,
									"end": 3754,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3737,
									"end": 3740,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 3731,
									"end": 3735,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 3741,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3724,
									"end": 3760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3718,
									"end": 3720,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 3708,
									"end": 3716,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3721,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3702,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3694,
									"end": 3698,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3691,
									"end": 3703,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3687,
									"end": 3722,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3761,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3916,
									"end": 3958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3994,
									"end": 4000,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 3991,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3982,
									"end": 4001,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3980,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3970,
									"end": 4002,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4005,
									"end": 4023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3167,
									"end": 4069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4205,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 4074,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4190,
									"end": 4198,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4184,
									"end": 4188,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4163,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4163,
									"end": 4199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4163,
									"end": 4199,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4163,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4199,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4205,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4074,
									"end": 4205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4311,
									"end": 4348,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4352,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4415,
									"end": 4416,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4480,
									"end": 4483,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4476,
									"end": 4496,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4473,
									"end": 4474,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4466,
									"end": 4497,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4524,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4517,
									"end": 4518,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4510,
									"end": 4525,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4545,
									"end": 4546,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4538,
									"end": 4553,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "MOD",
									"source": 6
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4699,
									"end": 4717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5037,
									"end": 5055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 15583,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220848b53d8ff40033ea81a10385d5e69bebcaac47ddb9ebfda710545112606e45864736f6c634300081d0033",
									".code": [
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "838FCC90"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "C4863770"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "F66608FE"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "FDEB889F"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "FFB54A99"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "C4863770"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "C9567BF9"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "CBA0E996"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "D00EFB2F"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "A8B08982"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "C30796AB"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "838FCC90"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "83AD7994"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "8873B15F"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "3AF32ABF"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "5FAE0576"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "5FAE0576"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "6049876E"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "706407FD"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "3AF32ABF"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "437823EC"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "4549B039"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "5342ACB4"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "1CF8FEF5"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "1CF8FEF5"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "32035504"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "53AB182"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 15583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4617,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4617,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1151,
											"end": 1338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2112,
											"end": 2296,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 3733,
											"end": 3743,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3649,
											"end": 3753,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 340,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3765,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3765,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5063,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5063,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3071,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3199,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6823,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6891,
											"end": 6895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6930,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6949,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5942,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5942,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4166,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4166,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3211,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3211,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2908,
											"end": 2925,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2827,
											"end": 2935,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2691,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2691,
											"end": 2705,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2616,
											"end": 2715,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4444,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4444,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2194,
											"end": 2285,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6961,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6961,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3892,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3892,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7166,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3523,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3618,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3637,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2727,
											"end": 2815,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6307,
											"end": 6811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6307,
											"end": 6811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1130,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4617,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4749,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4738,
											"end": 4757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4713,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4872,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4930,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4927,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4955,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4978,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4975,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4968,
											"end": 4995,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 5021,
											"end": 5031,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5041,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5021,
											"end": 5041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5018,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 5051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3836,
											"end": 3863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3870,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3870,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3836,
											"end": 3870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3836,
											"end": 3870,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3870,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5063,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5242,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 5235,
											"end": 5242,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4534,
											"end": 4555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4350,
											"end": 4705,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5291,
											"end": 5567,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5358,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5385,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5358,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5402,
											"end": 5416,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5416,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 5567,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5291,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5506,
											"end": 5513,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5487,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5514,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5487,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5453,
											"end": 5514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5514,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5531,
											"end": 5553,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5553,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5942,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6032,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6032,
											"end": 6052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6052,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6023,
											"end": 6084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6023,
											"end": 6084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4710,
											"end": 5061,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6023,
											"end": 6084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6101,
											"end": 6117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6117,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6097,
											"end": 6210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6179,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6195,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6159,
											"end": 6196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6159,
											"end": 6196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6159,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6140,
											"end": 6156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6196,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6097,
											"end": 6210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6222,
											"end": 6242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6222,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "PUSH",
											"source": 5,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 6262,
											"end": 6285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 6285,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6285,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4277,
											"end": 4304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4253,
											"end": 4374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4253,
											"end": 4374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3211,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3446,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3368,
											"end": 3446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3446,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3368,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3465,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3465,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4444,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4523,
											"end": 4549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4562,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4595,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7045,
											"end": 7067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7045,
											"end": 7067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7044,
											"end": 7067,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7036,
											"end": 7102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7036,
											"end": 7102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7036,
											"end": 7102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "PUSH",
											"source": 6,
											"value": "4164647265737320697320616C72656164792077686974656C69737465640000"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5821,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5803,
											"end": 5821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5473,
											"end": 5827,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7036,
											"end": 7102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7115,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7137,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7115,
											"end": 7144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7115,
											"end": 7144,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3977,
											"end": 4098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3977,
											"end": 4098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7221,
											"end": 7239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7221,
											"end": 7239,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7278,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 7252,
											"end": 7278,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C726561647920696E636C756465640000000000"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5832,
											"end": 6183,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 6386,
											"end": 6446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6483,
											"end": 6499,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6499,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6527,
											"end": 6550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6537,
											"end": 6538,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6527,
											"end": 6539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6527,
											"end": 6539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6523,
											"end": 6789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6598,
											"end": 6618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6617,
											"end": 6618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6598,
											"end": 6618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6598,
											"end": 6618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6588,
											"end": 6619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6619,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6573,
											"end": 6585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6573,
											"end": 6619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6619,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6681,
											"end": 6701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6701,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6701,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6681,
											"end": 6709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6709,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6730,
											"end": 6745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6730,
											"end": 6745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6523,
											"end": 6789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6501,
											"end": 6504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13170,
											"end": 13755,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 13170,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13286,
											"end": 13293,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13334,
											"end": 13341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 13439,
											"end": 13446,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13418,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 13418,
											"end": 13447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13418,
											"end": 13447,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 13418,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13460,
											"end": 13483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 13399,
											"end": 13447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13486,
											"end": 13493,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 13486,
											"end": 13504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13460,
											"end": 13504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13460,
											"end": 13504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13517,
											"end": 13536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13539,
											"end": 13549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 13539,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 13539,
											"end": 13549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13539,
											"end": 13549,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 13539,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13517,
											"end": 13549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13562,
											"end": 13585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 13517,
											"end": 13549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13588,
											"end": 13603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13588,
											"end": 13617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13562,
											"end": 13617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13630,
											"end": 13645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 13658,
											"end": 13669,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13648,
											"end": 13655,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13648,
											"end": 13669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13630,
											"end": 13669,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 13699,
											"end": 13714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13699,
											"end": 13714,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13716,
											"end": 13731,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13733,
											"end": 13744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13733,
											"end": 13744,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13170,
											"end": 13755,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13170,
											"end": 13755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8808,
											"end": 8813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8799,
											"end": 8836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6845,
											"end": 6877,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6625,
											"end": 6970,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10801,
											"end": 10806,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10843,
											"end": 10848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 10792,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7381,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 7370,
											"end": 7381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7381,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7370,
											"end": 7381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7408,
											"end": 7427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7280,
											"name": "PUSH",
											"source": 6,
											"value": "54726164696E67206E6F742079657420656E61626C6564000000000000000000"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6975,
											"end": 7322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 7400,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 7365,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7506,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 7495,
											"end": 7506,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 7495,
											"end": 7510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7495,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7495,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7510,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 7495,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7479,
											"end": 7491,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 7479,
											"end": 7510,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7475,
											"end": 7671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7614,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7601,
											"end": 7618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7570,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7607,
											"end": 7641,
											"name": "PUSH",
											"source": 6,
											"value": "4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374"
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7580,
											"end": 7642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7700,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7700,
											"end": 7719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7327,
											"end": 7725,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7593,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 7921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7893,
											"end": 7963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7893,
											"end": 7963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7893,
											"end": 7963,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8044,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8106,
											"end": 8125,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8106,
											"end": 8125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7730,
											"end": 8131,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7893,
											"end": 7963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7984,
											"end": 8007,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8450,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8136,
											"end": 8535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7976,
											"end": 8047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8060,
											"end": 8081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 8094,
											"end": 8100,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8084,
											"end": 8093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8084,
											"end": 8101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8084,
											"end": 8101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 8084,
											"end": 8101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8060,
											"end": 8101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8060,
											"end": 8101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8161,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8138,
											"end": 8151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8138,
											"end": 8161,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8138,
											"end": 8161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8744,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 8231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8724,
											"end": 8745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8781,
											"end": 8783,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8754,
											"end": 8784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8820,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8936,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8917,
											"end": 8936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8540,
											"end": 8942,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8114,
											"end": 8231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8248,
											"end": 8446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 8361,
											"end": 8376,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8351,
											"end": 8357,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8338,
											"end": 8347,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8328,
											"end": 8348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8328,
											"end": 8348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8328,
											"end": 8357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8328,
											"end": 8357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8376,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8376,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8432,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8300,
											"end": 8432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9190,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5768616C652064657465637465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8947,
											"end": 9287,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8300,
											"end": 8432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 8501,
											"end": 8512,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8458,
											"end": 8470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8458,
											"end": 8470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8491,
											"end": 8512,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8512,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8491,
											"end": 8540,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8529,
											"end": 8540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 8529,
											"end": 8540,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8516,
											"end": 8540,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8540,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8491,
											"end": 8540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8587,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 8487,
											"end": 8587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8569,
											"end": 8573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8487,
											"end": 8587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 8487,
											"end": 8587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3162,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8650,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 8603,
											"end": 8650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8643,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 8603,
											"end": 8650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8666,
											"end": 8716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8681,
											"end": 8687,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8689,
											"end": 8698,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8706,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8715,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8666,
											"end": 8680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8666,
											"end": 8716,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8666,
											"end": 8716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8666,
											"end": 8716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 8726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 8726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 8726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 5930,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5588,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5753,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 5753,
											"end": 5760,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9572,
											"end": 9606,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9292,
											"end": 9698,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 5718,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5869,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5869,
											"end": 5879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5847,
											"end": 5879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 5899,
											"end": 5920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5920,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5899,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5920,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 5930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5588,
											"end": 5930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12888,
											"end": 13158,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12888,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12990,
											"end": 12997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13035,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13055,
											"end": 13062,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13055,
											"end": 13062,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13038,
											"end": 13052,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 13038,
											"end": 13052,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13038,
											"end": 13062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 13038,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13019,
											"end": 13062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13075,
											"end": 13091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13120,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 13095,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 13019,
											"end": 13062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13095,
											"end": 13102,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13095,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13095,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13095,
											"end": 13113,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 13095,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 13094,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13075,
											"end": 13120,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12888,
											"end": 13158,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12888,
											"end": 13158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14046,
											"end": 14213,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 14046,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14128,
											"end": 14143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14147,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 14147,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 14147,
											"end": 14166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14147,
											"end": 14166,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 14147,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14110,
											"end": 14166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14110,
											"end": 14166,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14110,
											"end": 14166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14186,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 14110,
											"end": 14166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14110,
											"end": 14166,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14186,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 14186,
											"end": 14203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14186,
											"end": 14203,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 14186,
											"end": 14203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14179,
											"end": 14203,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14179,
											"end": 14203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14179,
											"end": 14203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14179,
											"end": 14203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14046,
											"end": 14213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14046,
											"end": 14213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 9582,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8738,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8891,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 8891,
											"end": 8950,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8922,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 8922,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8922,
											"end": 8936,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 8922,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8981,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9003,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8991,
											"end": 9007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 9026,
											"end": 9064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9064,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 9026,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 8966,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9100,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 9088,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 9084,
											"end": 9497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 9164,
											"end": 9168,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 9144,
											"end": 9180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9497,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 9084,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9216,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9205,
											"end": 9222,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9238,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9226,
											"end": 9242,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 9200,
											"end": 9497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9289,
											"end": 9294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 9261,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9497,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 9200,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9330,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9351,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 9319,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 9315,
											"end": 9497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9374,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9402,
											"end": 9404,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9411,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 9374,
											"end": 9412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9497,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 9315,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9449,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9473,
											"end": 9475,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9482,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9449,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 9449,
											"end": 9483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9449,
											"end": 9483,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 9449,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9518,
											"end": 9525,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9513,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 9513,
											"end": 9573,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9544,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 9924,
											"end": 9946,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9924,
											"end": 9946,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9921,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 9907,
											"end": 9946,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 9969,
											"end": 9984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9959,
											"end": 9966,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9959,
											"end": 9984,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14325,
											"end": 14332,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 14325,
											"end": 14332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14363,
											"end": 14370,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 14363,
											"end": 14370,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14411,
											"end": 14420,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 14411,
											"end": 14427,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14407,
											"end": 14427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14407,
											"end": 14427,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14499,
											"end": 14506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14483,
											"end": 14492,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 14493,
											"end": 14494,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14483,
											"end": 14495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14496,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14506,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 14475,
											"end": 14560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14553,
											"end": 14560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14536,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 14547,
											"end": 14548,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14537,
											"end": 14549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14537,
											"end": 14549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14560,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14560,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 14475,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14451,
											"end": 14642,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14451,
											"end": 14642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 14451,
											"end": 14642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14607,
											"end": 14614,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 14607,
											"end": 14614,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14616,
											"end": 14623,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 14616,
											"end": 14623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14451,
											"end": 14642,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 14451,
											"end": 14642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14685,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14695,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 14696,
											"end": 14697,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14686,
											"end": 14698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14699,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14668,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 14668,
											"end": 14699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14668,
											"end": 14675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14668,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 14668,
											"end": 14699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14668,
											"end": 14699,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 14668,
											"end": 14699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 14699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 14699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14743,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14753,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 14754,
											"end": 14755,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14744,
											"end": 14756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "tag",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14757,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 14726,
											"end": 14757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 14726,
											"end": 14757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14757,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 14726,
											"end": 14757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14716,
											"end": 14757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14432,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14429,
											"end": 14432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14811,
											"end": 14818,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 14811,
											"end": 14818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14801,
											"end": 14808,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 14801,
											"end": 14808,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 14801,
											"end": 14818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 14801,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14791,
											"end": 14798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14791,
											"end": 14818,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14787,
											"end": 14876,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14787,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 14787,
											"end": 14876,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14845,
											"end": 14852,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 14845,
											"end": 14852,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14854,
											"end": 14861,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 14854,
											"end": 14861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14787,
											"end": 14876,
											"name": "tag",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 14787,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 14907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 14907,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14225,
											"end": 14927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14225,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9594,
											"end": 9849,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 9594,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9657,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 9643,
											"end": 9657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9662,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9666,
											"end": 9678,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "tag",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 9643,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9687,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 9639,
											"end": 9687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9594,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9687,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 9639,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9728,
											"end": 9742,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 9728,
											"end": 9742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9728,
											"end": 9742,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9725,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9703,
											"end": 9742,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9780,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9773,
											"end": 9780,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9780,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9770,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 9755,
											"end": 9780,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9594,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 12092,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 11390,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11553,
											"end": 11568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 11719,
											"end": 11726,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11700,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 11700,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11700,
											"end": 11727,
											"name": "tag",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 11700,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11765,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11773,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11536,
											"end": 11727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11758,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 11758,
											"end": 11783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11776,
											"end": 11783,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11776,
											"end": 11783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 11758,
											"end": 11783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11783,
											"name": "tag",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 11758,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11783,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11783,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11821,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11814,
											"end": 11829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11829,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 11814,
											"end": 11839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11832,
											"end": 11839,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11832,
											"end": 11839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 11814,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11839,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 11814,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11803,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11839,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11839,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11839,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11894,
											"end": 11909,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11894,
											"end": 11909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11873,
											"end": 11909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11859,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11909,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11949,
											"end": 11956,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11958,
											"end": 11969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 11926,
											"end": 11970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11970,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 11926,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11983,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 11995,
											"end": 12002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12004,
											"end": 12015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11983,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 11983,
											"end": 12016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11983,
											"end": 12016,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 11983,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12047,
											"end": 12053,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "tag",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12038,
											"end": 12082,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 12092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 12092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10664,
											"end": 11378,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 10664,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10825,
											"end": 10840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10972,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 10991,
											"end": 10998,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10972,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 10972,
											"end": 10999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10972,
											"end": 10999,
											"name": "tag",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 10972,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11037,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11030,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 11030,
											"end": 11055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 10999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 11030,
											"end": 11055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11055,
											"name": "tag",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 11030,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11019,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11055,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11055,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11055,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11096,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 11089,
											"end": 11125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11110,
											"end": 11125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11110,
											"end": 11125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11089,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11125,
											"name": "tag",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 11089,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11125,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11125,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11125,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11166,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 11159,
											"end": 11195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11159,
											"end": 11195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11159,
											"end": 11195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10652,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 10006,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10165,
											"end": 10180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10197,
											"end": 10220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10277,
											"end": 10296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "472"
										},
										{
											"begin": 10331,
											"end": 10338,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 10312,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10339,
											"name": "tag",
											"source": 5,
											"value": "472"
										},
										{
											"begin": 10312,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10374,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12104,
											"end": 12876,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 12104,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12267,
											"end": 12282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12414,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 12414,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12414,
											"end": 12441,
											"name": "tag",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 12414,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12479,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12472,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 12472,
											"end": 12497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12490,
											"end": 12497,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12490,
											"end": 12497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 12472,
											"end": 12497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12497,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 12472,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12461,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12497,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12497,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12497,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12535,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12528,
											"end": 12543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12543,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12543,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12543,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 12528,
											"end": 12553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 12528,
											"end": 12553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14939,
											"end": 15578,
											"name": "tag",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 14939,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15080,
											"end": 15095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15123,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 15109,
											"end": 15116,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 15109,
											"end": 15116,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15099,
											"end": 15106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15099,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "tag",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 15098,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "tag",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15080,
											"end": 15123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15140,
											"end": 15151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15140,
											"end": 15151,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 15136,
											"end": 15569,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15214,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 15189,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 15199,
											"end": 15210,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15196,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15189,
											"end": 15210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15210,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 15189,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 15188,
											"end": 15215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "tag",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15269,
											"end": 15286,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 15269,
											"end": 15286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15269,
											"end": 15286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15268,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15261,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "494"
										},
										{
											"begin": 15261,
											"end": 15297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 15261,
											"end": 15297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15297,
											"name": "tag",
											"source": 5,
											"value": "494"
										},
										{
											"begin": 15261,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15239,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15258,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15297,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15297,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15297,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15391,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 15372,
											"end": 15391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 15364,
											"end": 15421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15414,
											"end": 15421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15414,
											"end": 15421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 15364,
											"end": 15421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15421,
											"name": "tag",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 15364,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15322,
											"end": 15341,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 15322,
											"end": 15341,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15322,
											"end": 15341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15322,
											"end": 15341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15322,
											"end": 15341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15342,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15421,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15421,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15314,
											"end": 15421,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15443,
											"end": 15487,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15509,
											"end": 15555,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15153,
											"end": 15569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15067,
											"end": 15578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14939,
											"end": 15578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14939,
											"end": 15578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14939,
											"end": 15578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14939,
											"end": 15578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13767,
											"end": 14034,
											"name": "tag",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 13767,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13847,
											"end": 13859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13894,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 13873,
											"end": 13887,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 13873,
											"end": 13887,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13863,
											"end": 13887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "tag",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 13863,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 13862,
											"end": 13894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 13862,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13847,
											"end": 13894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13907,
											"end": 13919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13847,
											"end": 13894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13922,
											"end": 13940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "tag",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13907,
											"end": 13940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13907,
											"end": 13940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13977,
											"end": 13981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13974,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 13967,
											"end": 13974,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 13967,
											"end": 13981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13957,
											"end": 13964,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 13957,
											"end": 13981,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14007,
											"end": 14017,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 14007,
											"end": 14017,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "503"
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 14007,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "tag",
											"source": 5,
											"value": "503"
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13994,
											"end": 14004,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 13994,
											"end": 14024,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13767,
											"end": 14034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 245,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 394,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 420,
											"end": 433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 511,
											"end": 526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 491,
											"end": 509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 535,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 559,
											"end": 568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 555,
											"end": 577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 643,
											"end": 650,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 630,
											"end": 636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 622,
											"end": 651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 607,
											"end": 652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 668,
											"end": 841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 785,
											"end": 816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 954,
											"end": 961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 950,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 946,
											"end": 978,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 1014,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1043,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 1918,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 1966,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3024,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 3060,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 3108,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 3804,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 3934,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4271,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4256,
											"end": 4259,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "PUSH",
											"source": 6,
											"value": "7A65726F20616464726573732063616E206E6F74206265207468652046656541"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6315,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6188,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6259,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6244,
											"end": 6247,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6270,
											"end": 6285,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6447,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 6320,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6372,
											"end": 6392,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6416,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6441,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6620,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 6452,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6543,
											"end": 6614,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 6594,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9920,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 9703,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9808,
											"end": 9811,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9804,
											"end": 9824,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9825,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9838,
											"end": 9853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "tag",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"shoaib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeDevelopmentAccount(address)": "706407fd",
							"changeMarketingAccount(address)": "c4863770",
							"changePairAddress(address)": "8873b15f",
							"decimals()": "313ce567",
							"excludeAccountFromReward(address)": "6049876e",
							"excludeFromFee(address)": "437823ec",
							"getDevelopmentAccount()": "1cf8fef5",
							"getMarketingAccount()": "838fcc90",
							"getTaxFee()": "f66608fe",
							"includeAccountinReward(address)": "fdeb889f",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromFee(address)": "5342acb4",
							"isWhitelisted(address)": "3af32abf",
							"isWhitelistedAddress(address)": "5fae0576",
							"launchBlock()": "d00efb2f",
							"name()": "06fdde03",
							"openTrading()": "c9567bf9",
							"owner()": "8da5cb5b",
							"pairAddress()": "a8b08982",
							"reflect(uint256)": "053ab182",
							"reflectionFee()": "83ad7994",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"symbol()": "95d89b41",
							"totalFeesRedistributed()": "32035504",
							"totalSupply()": "18160ddd",
							"tradingOpen()": "ffb54a99",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"whitelistedAddress(address)": "c30796ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeDevelopmentAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeMarketingAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairAddress\",\"type\":\"address\"}],\"name\":\"changePairAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccountFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDevelopmentAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketingAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccountinReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"reflect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesRedistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"whitelistedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoaib.sol\":\"CYBCC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"shoaib.sol\":{\"keccak256\":\"0xcb6d4e69a02e5dac2c378fdc81c6fb09844332d048a27e8ed241fa284274efaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df18d800248c41c71aad84ef90402f49a9cf8abdc44b2f828032c20d150c5f8\",\"dweb:/ipfs/QmZ7kasE6n63kVWExwyawPoKscqSrkaN4xPhujyA8M7FSo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "shoaib.sol:CYBCC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "shoaib.sol:CYBCC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "shoaib.sol:CYBCC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "shoaib.sol:CYBCC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "shoaib.sol:CYBCC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 795,
								"contract": "shoaib.sol:CYBCC",
								"label": "_rOwned",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "shoaib.sol:CYBCC",
								"label": "_tOwned",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 803,
								"contract": "shoaib.sol:CYBCC",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 807,
								"contract": "shoaib.sol:CYBCC",
								"label": "isWhitelisted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 811,
								"contract": "shoaib.sol:CYBCC",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 814,
								"contract": "shoaib.sol:CYBCC",
								"label": "_excluded",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 816,
								"contract": "shoaib.sol:CYBCC",
								"label": "_decimals",
								"offset": 0,
								"slot": "11",
								"type": "t_uint8"
							},
							{
								"astId": 820,
								"contract": "shoaib.sol:CYBCC",
								"label": "_owner",
								"offset": 1,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 829,
								"contract": "shoaib.sol:CYBCC",
								"label": "_tTotal",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 831,
								"contract": "shoaib.sol:CYBCC",
								"label": "_rTotal",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "shoaib.sol:CYBCC",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 836,
								"contract": "shoaib.sol:CYBCC",
								"label": "_reflectionFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 838,
								"contract": "shoaib.sol:CYBCC",
								"label": "_previousReflectionFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 840,
								"contract": "shoaib.sol:CYBCC",
								"label": "_taxFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 842,
								"contract": "shoaib.sol:CYBCC",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 844,
								"contract": "shoaib.sol:CYBCC",
								"label": "_marketingAccount",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 846,
								"contract": "shoaib.sol:CYBCC",
								"label": "_developmentAccount",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 848,
								"contract": "shoaib.sol:CYBCC",
								"label": "pairAddress",
								"offset": 0,
								"slot": "21",
								"type": "t_address"
							},
							{
								"astId": 850,
								"contract": "shoaib.sol:CYBCC",
								"label": "maxWalletAmount",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 852,
								"contract": "shoaib.sol:CYBCC",
								"label": "launchBlock",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 855,
								"contract": "shoaib.sol:CYBCC",
								"label": "tradingOpen",
								"offset": 0,
								"slot": "24",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5451:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5465:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5481:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5473:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5473:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5473:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5465:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5461:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5485:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5533:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5525:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5525:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5525:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5506:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5506:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5499:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5560:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5574:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5566:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5566:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5560:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5556:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5578:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5628:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5620:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5620:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5620:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5599:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5599:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5592:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5665:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5651:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5651:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:1"
									},
									"scope": 651,
									"src": "5374:308:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6072:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6086:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6102:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6094:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6094:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6094:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6086:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6260:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6282:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6274:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6274:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6296:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6306:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6296:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6274:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6329:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6343:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6329:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6325:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6350:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6400:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6406:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6419:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6375:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6375:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6368:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6453:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6560:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6570:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6560:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6578:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6592:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6578:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6560:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6560:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6082:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6106:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6222:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6238:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6222:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6222:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6636:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6650:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6642:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6642:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6642:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6636:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6851:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6865:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7010:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7020:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7010:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7027:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7010:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7010:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6632:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6654:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6668:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6799:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6815:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6799:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6799:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7081:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7087:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7091:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7072:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7072:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7067:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5688:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6006:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6022:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6014:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6036:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6028:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6048:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6072:0:1"
									},
									"scope": 651,
									"src": "5997:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7503:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7517:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7536:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7528:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7528:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7528:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7517:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7513:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7540:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7590:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7582:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7582:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7582:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7561:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7561:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7554:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7629:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7621:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7621:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7621:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7642:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7613:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7613:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7110:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7456:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7470:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7462:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7487:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7479:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7461:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7503:0:1"
									},
									"scope": 651,
									"src": "7447:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8029:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8062:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8054:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8054:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8043:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8039:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8066:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8114:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8106:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8106:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8106:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8087:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8080:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8145:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8162:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8154:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8154:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8166:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8137:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8137:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7661:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7982:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7996:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7988:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8013:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8005:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8029:0:1"
									},
									"scope": 651,
									"src": "7973:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8789:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8808:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8815:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8824:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8831:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8799:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8799:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8185:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8741:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8733:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8748:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:1"
									},
									"scope": 651,
									"src": "8715:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9788:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9802:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9819:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9811:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9811:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9811:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9802:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9798:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9823:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9873:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9865:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9865:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9865:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9844:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9844:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9837:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9900:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9911:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9911:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9900:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9896:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9923:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9972:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9964:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9964:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9964:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9944:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9944:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9937:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9995:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10007:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9995:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9995:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10025:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9995:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9995:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10044:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10040:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10055:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10083:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10090:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10099:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10074:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10074:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10069:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8849:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9699:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9748:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9740:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9760:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9755:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9755:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9707:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9788:0:1"
									},
									"scope": 651,
									"src": "9690:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10493:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10511:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10503:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10540:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10530:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10530:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10503:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10569:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10593:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10593:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10588:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10588:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10602:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10588:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10569:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10565:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10607:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10625:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10644:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10625:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10621:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10651:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10703:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10712:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10730:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10676:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10676:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10669:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10764:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10801:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10808:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10817:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10836:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10817:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10843:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10792:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10792:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10792:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10128:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10413:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10429:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10452:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10444:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10469:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10461:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10493:0:1"
									},
									"scope": 651,
									"src": "10404:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9776:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10778:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"shoaib.sol": {
				"ast": {
					"absolutePath": "shoaib.sol",
					"exportedSymbols": {
						"CYBCC": [
							2275
						],
						"ERC20": [
							651
						]
					},
					"id": 2276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 652,
							"src": "67:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "75:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"161:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "161:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "161:5:5"
								}
							],
							"canonicalName": "CYBCC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2275,
							"linearizedBaseContracts": [
								2275,
								651,
								41,
								755,
								729,
								785
							],
							"name": "CYBCC",
							"nameLocation": "152:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "212:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "176:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 794,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "184:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "176:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 793,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "195:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "264:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "228:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "236:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "228:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "247:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "313:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "280:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "288:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "280:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 801,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "299:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3af32abf",
									"id": 807,
									"mutability": "mutable",
									"name": "isWhitelisted",
									"nameLocation": "372:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "340:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "359:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 811,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "431:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "398:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 810,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 808,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "406:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "398:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 809,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "417:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 814,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "469:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "451:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 812,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "451:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 813,
										"nodeType": "ArrayTypeName",
										"src": "451:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "505:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "491:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 815,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "491:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "539:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "523:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 818,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "548:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 819,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "552:6:5",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "548:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 827,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "592:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "567:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 826,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "598:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "607:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 823,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "599:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 825,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "599:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "634:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "618:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 828,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "618:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 831,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "666:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "650:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "698:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "682:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 832,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "711:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_reflectionFee",
									"nameLocation": "741:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "725:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 838,
									"mutability": "mutable",
									"name": "_previousReflectionFee",
									"nameLocation": "780:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "764:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "764:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 840,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "831:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "815:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 842,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "863:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "847:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 841,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "847:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 844,
									"mutability": "mutable",
									"name": "_marketingAccount",
									"nameLocation": "907:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "891:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 843,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "891:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 846,
									"mutability": "mutable",
									"name": "_developmentAccount",
									"nameLocation": "949:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "933:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 845,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "933:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a8b08982",
									"id": 848,
									"mutability": "mutable",
									"name": "pairAddress",
									"nameLocation": "996:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "981:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 847,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 850,
									"mutability": "mutable",
									"name": "maxWalletAmount",
									"nameLocation": "1036:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "1020:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 849,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d00efb2f",
									"id": 852,
									"mutability": "mutable",
									"name": "launchBlock",
									"nameLocation": "1079:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "1064:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1064:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ffb54a99",
									"id": 855,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "1111:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2275,
									"src": "1099:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 853,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1099:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 854,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1125:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1184:957:5",
										"statements": [
											{
												"expression": {
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1197:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1209:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1197:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "1197:14:5"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "1224:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1234:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1247:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 871,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "1259:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1251:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 869,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1251:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1251:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1234:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1224:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1224:45:5"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "1282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 878,
																	"name": "MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1293:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 879,
																				"name": "MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "1300:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 880,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "1306:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1300:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 882,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1299:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1293:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 884,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1292:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1282:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1282:33:5"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 887,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1332:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1349:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1332:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "1332:18:5"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1363:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 892,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1388:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1363:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1363:39:5"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1419:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1429:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1419:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "1419:11:5"
											},
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1443:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 900,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1461:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1443:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "1443:25:5"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1485:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1505:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1485:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "1485:26:5"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "_developmentAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "1524:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1546:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1524:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1524:28:5"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "1569:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130303030303030",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000_by_1",
																"typeString": "int_const 10000000"
															},
															"value": "10000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1598:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 916,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "1610:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1602:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1602:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1602:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1598:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1587:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1569:51:5"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 922,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1703:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 925,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 923,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "1722:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1703:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1733:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1703:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1703:34:5"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 929,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1750:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 931,
														"indexExpression": {
															"id": 930,
															"name": "_marketingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1769:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1750:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1790:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1750:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1750:44:5"
											},
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 935,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1807:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 937,
														"indexExpression": {
															"id": 936,
															"name": "_developmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1826:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1807:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1849:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1807:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "1807:46:5"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 941,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1866:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 946,
														"indexExpression": {
															"arguments": [
																{
																	"id": 944,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1893:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CYBCC_$2275",
																		"typeString": "contract CYBCC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CYBCC_$2275",
																		"typeString": "contract CYBCC"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1885:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1885:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1885:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1866:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1902:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1866:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "1866:40:5"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 950,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1919:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 953,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 951,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "1933:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1933:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1919:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1944:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1919:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "1919:29:5"
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 957,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1961:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 959,
														"indexExpression": {
															"id": 958,
															"name": "_marketingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1975:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1961:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1961:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "1961:39:5"
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 963,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "2013:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 965,
														"indexExpression": {
															"id": 964,
															"name": "_developmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2027:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2050:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2013:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "2013:41:5"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 969,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2067:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 971,
														"indexExpression": {
															"id": 970,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2075:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2067:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "2085:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2067:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "2067:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2111:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2115:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2111:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "2123:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2105:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2105:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2105:26:5"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "61626320636f696e",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1163:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c60c804c1de0c52d0c84d11aab001859983f8e5b7b8c81fc3e9f21ffba584591",
														"typeString": "literal_string \"abc coin\""
													},
													"value": "abc coin"
												},
												{
													"hexValue": "4359424343",
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1175:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a1e4d5bdd8a279313ac099637956bc9607cc279a897c73c77f26a34d39ed3031",
														"typeString": "literal_string \"CYBCC\""
													},
													"value": "CYBCC"
												}
											],
											"id": 860,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 857,
												"name": "ERC20",
												"nameLocations": [
													"1157:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1157:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1157:26:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:2:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:0:5"
									},
									"scope": 2275,
									"src": "1143:998:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "2180:2:5",
										"statements": []
									},
									"id": 986,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2160:2:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:0:5"
									},
									"scope": 2275,
									"src": "2153:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "2249:36:5",
										"statements": [
											{
												"expression": {
													"id": 991,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "2269:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 990,
												"id": 992,
												"nodeType": "Return",
												"src": "2262:13:5"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2203:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:2:5"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2240:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:5"
									},
									"scope": 2275,
									"src": "2194:91:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "2318:51:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 996,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "2335:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2335:7:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 998,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2346:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2350:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2346:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2335:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "2331:28:5",
												"trueBody": {
													"id": 1001,
													"nodeType": "PlaceholderStatement",
													"src": "2358:1:5"
												}
											}
										]
									},
									"id": 1004,
									"name": "onlyOwner",
									"nameLocation": "2306:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2315:2:5"
									},
									"src": "2297:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "2446:39:5",
										"statements": [
											{
												"expression": {
													"id": 1010,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "2466:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1011,
												"nodeType": "Return",
												"src": "2459:16:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2390:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1006,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2421:8:5"
									},
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2398:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2439:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2439:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:7:5"
									},
									"scope": 2275,
									"src": "2381:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "2567:37:5",
										"statements": [
											{
												"expression": {
													"id": 1019,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 829,
													"src": "2587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1020,
												"nodeType": "Return",
												"src": "2580:14:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2506:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1015,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2540:8:5"
									},
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2517:2:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2558:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:9:5"
									},
									"scope": 2275,
									"src": "2497:107:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "2671:44:5",
										"statements": [
											{
												"expression": {
													"id": 1027,
													"name": "_reflectionFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "2691:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1028,
												"nodeType": "Return",
												"src": "2684:21:5"
											}
										]
									},
									"functionSelector": "83ad7994",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFee",
									"nameLocation": "2625:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2662:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:9:5"
									},
									"scope": 2275,
									"src": "2616:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "2778:37:5",
										"statements": [
											{
												"expression": {
													"id": 1035,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "2798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1036,
												"nodeType": "Return",
												"src": "2791:14:5"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "2736:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:2:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2769:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:9:5"
									},
									"scope": 2275,
									"src": "2727:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2888:47:5",
										"statements": [
											{
												"expression": {
													"id": 1043,
													"name": "_marketingAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "2908:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1044,
												"nodeType": "Return",
												"src": "2901:24:5"
											}
										]
									},
									"functionSelector": "838fcc90",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketingAccount",
									"nameLocation": "2836:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:5"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2879:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:9:5"
									},
									"scope": 2275,
									"src": "2827:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "3010:49:5",
										"statements": [
											{
												"expression": {
													"id": 1051,
													"name": "_developmentAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 846,
													"src": "3030:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1052,
												"nodeType": "Return",
												"src": "3023:26:5"
											}
										]
									},
									"functionSelector": "1cf8fef5",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDevelopmentAccount",
									"nameLocation": "2956:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:2:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3001:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:9:5"
									},
									"scope": 2275,
									"src": "2947:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "3142:57:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1061,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3162:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1063,
													"indexExpression": {
														"id": 1062,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "3181:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3162:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1064,
												"nodeType": "Return",
												"src": "3155:34:5"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "3080:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:17:5"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3136:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3136:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:6:5"
									},
									"scope": 2275,
									"src": "3071:128:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "3355:156:5",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1074,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "3372:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1076,
													"indexExpression": {
														"id": 1075,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3384:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3372:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "3368:78:5",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "3393:53:5",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1077,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "3417:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1079,
																"indexExpression": {
																	"id": 1078,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "3425:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3417:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1073,
															"id": 1080,
															"nodeType": "Return",
															"src": "3410:22:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1084,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "3485:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1086,
															"indexExpression": {
																"id": 1085,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "3493:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3485:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1088,
												"nodeType": "Return",
												"src": "3458:43:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3220:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1070,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3310:8:5"
									},
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3238:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3230:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:16:5"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3339:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:9:5"
									},
									"scope": 2275,
									"src": "3211:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "3587:50:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1097,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "3607:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1099,
													"indexExpression": {
														"id": 1098,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3619:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3607:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1100,
												"nodeType": "Return",
												"src": "3600:27:5"
											}
										]
									},
									"functionSelector": "cba0e996",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "3532:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:17:5"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3581:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3581:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:6:5"
									},
									"scope": 2275,
									"src": "3523:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "3713:40:5",
										"statements": [
											{
												"expression": {
													"id": 1107,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "3733:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1108,
												"nodeType": "Return",
												"src": "3726:17:5"
											}
										]
									},
									"functionSelector": "32035504",
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFeesRedistributed",
									"nameLocation": "3658:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:2:5"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3704:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:9:5"
									},
									"scope": 2275,
									"src": "3649:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "3823:57:5",
										"statements": [
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1117,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3836:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1118,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "3855:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3836:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3866:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3836:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "3836:34:5"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyOwner",
												"nameLocations": [
													"3813:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "3813:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3813:9:5"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "3774:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3797:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3789:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3788:17:5"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3823:0:5"
									},
									"scope": 2275,
									"src": "3765:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "3964:190:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "4001:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4026:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4018:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4018:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4018:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4001:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4045:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3977:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:121:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "3977:121:5"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "4111:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "4131:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4111:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "4111:33:5"
											}
										]
									},
									"functionSelector": "c4863770",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1129,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1128,
												"name": "onlyOwner",
												"nameLocations": [
													"3954:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "3954:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3954:9:5"
										}
									],
									"name": "changeMarketingAccount",
									"nameLocation": "3901:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "3932:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "3924:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:23:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3964:0:5"
									},
									"scope": 2275,
									"src": "3892:262:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "4240:192:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "4277:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4302:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4294:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1155,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4294:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4277:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4321:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4253:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4253:121:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "4253:121:5"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1163,
														"name": "_developmentAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "4387:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "4409:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4387:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "4387:35:5"
											}
										]
									},
									"functionSelector": "706407fd",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1150,
												"name": "onlyOwner",
												"nameLocations": [
													"4230:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "4230:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4230:9:5"
										}
									],
									"name": "changeDevelopmentAccount",
									"nameLocation": "4175:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "4208:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4200:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:23:5"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4240:0:5"
									},
									"scope": 2275,
									"src": "4166:266:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "4510:95:5",
										"statements": [
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "4523:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4537:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4523:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "4523:26:5"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1179,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4562:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1181,
														"indexExpression": {
															"id": 1180,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4576:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4562:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4591:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4562:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "4562:33:5"
											}
										]
									},
									"functionSelector": "8873b15f",
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1172,
												"name": "onlyOwner",
												"nameLocations": [
													"4500:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "4500:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4500:9:5"
										}
									],
									"name": "changePairAddress",
									"nameLocation": "4453:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_pairAddress",
												"nameLocation": "4479:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4471:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:22:5"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4510:0:5"
									},
									"scope": 2275,
									"src": "4444:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "4658:393:5",
										"statements": [
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4679:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "4671:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4671:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1193,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4688:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4671:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4737:20:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1197,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "4738:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1199,
																"indexExpression": {
																	"id": 1198,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "4750:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4738:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4774:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4713:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4713:120:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "4713:120:5"
											},
											{
												"assignments": [
													1205,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "4855:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "4847:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1209,
												"initialValue": {
													"arguments": [
														{
															"id": 1207,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4891:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "4872:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:53:5"
											},
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1210,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "4912:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1212,
														"indexExpression": {
															"id": 1211,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4920:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4912:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1213,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "4930:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1215,
															"indexExpression": {
																"id": 1214,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "4938:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4930:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1216,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "4948:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4930:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4912:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "4912:43:5"
											},
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "4968:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1221,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "4978:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1222,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "4988:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4978:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4968:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "4968:27:5"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1226,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5008:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1227,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5021:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1228,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "5034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5021:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5008:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "5008:33:5"
											}
										]
									},
									"functionSelector": "053ab182",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflect",
									"nameLocation": "4626:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "4642:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "4634:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:17:5"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4658:0:5"
									},
									"scope": 2275,
									"src": "4617:434:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "5203:373:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1243,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1244,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "5235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5224:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5244:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5216:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5216:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "5216:62:5"
											},
											{
												"condition": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5295:18:5",
													"subExpression": {
														"id": 1249,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "5296:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "5436:131:5",
													"statements": [
														{
															"assignments": [
																null,
																1261,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1261,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "5464:15:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1268,
																	"src": "5456:23:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1260,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5456:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null
															],
															"id": 1265,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1263,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "5506:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1262,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2072,
																	"src": "5487:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5487:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5453:61:5"
														},
														{
															"expression": {
																"id": 1266,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5538:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1241,
															"id": 1267,
															"nodeType": "Return",
															"src": "5531:22:5"
														}
													]
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "5291:276:5",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "5315:115:5",
													"statements": [
														{
															"assignments": [
																1252,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1252,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "5341:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1259,
																	"src": "5333:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1251,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1256,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "5377:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1253,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2072,
																	"src": "5358:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5358:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5332:53:5"
														},
														{
															"expression": {
																"id": 1257,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "5409:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1241,
															"id": 1258,
															"nodeType": "Return",
															"src": "5402:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "5072:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "5100:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "5092:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "5114:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "5109:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5109:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5091:41:5"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "5187:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:9:5"
									},
									"scope": 2275,
									"src": "5063:513:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "5705:225:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1279,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "5742:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1280,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "5753:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5742:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5777:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5718:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5718:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "5718:116:5"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "5855:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "5847:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1287,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "5869:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5869:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5847:32:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "rAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "5899:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1291,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "5909:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5899:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1293,
												"nodeType": "Return",
												"src": "5892:28:5"
											}
										]
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "5597:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "5625:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "5617:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5616:17:5"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "5689:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:9:5"
									},
									"scope": 2275,
									"src": "5588:342:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "6010:285:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6031:21:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1303,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6032:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1305,
																"indexExpression": {
																	"id": 1304,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "6044:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6032:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6054:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6023:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "6023:61:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1310,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "6101:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1311,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "6109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6101:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6120:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6101:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "6097:113:5",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "6123:87:5",
													"statements": [
														{
															"expression": {
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1315,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "6140:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1317,
																	"indexExpression": {
																		"id": 1316,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "6148:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6140:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1319,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "6179:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1321,
																			"indexExpression": {
																				"id": 1320,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "6187:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6179:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1318,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "6159:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6159:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6140:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1324,
															"nodeType": "ExpressionStatement",
															"src": "6140:56:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1327,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6222:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1329,
														"indexExpression": {
															"id": 1328,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "6234:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6222:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6245:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6222:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "6222:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "6277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1333,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "6262:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6272:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6262:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6262:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "6262:23:5"
											}
										]
									},
									"functionSelector": "6049876e",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1299,
												"name": "onlyOwner",
												"nameLocations": [
													"6000:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "6000:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6000:9:5"
										}
									],
									"name": "excludeAccountFromReward",
									"nameLocation": "5951:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "5976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5975:17:5"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6010:0:5"
									},
									"scope": 2275,
									"src": "5942:353:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "6373:438:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1348,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "6394:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1350,
															"indexExpression": {
																"id": 1349,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "6406:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6394:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6416:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															},
															"value": "Account is already included"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6386:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6386:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "6386:60:5"
											},
											{
												"body": {
													"id": 1401,
													"nodeType": "Block",
													"src": "6506:296:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1365,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "6527:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1367,
																	"indexExpression": {
																		"id": 1366,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "6537:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6527:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1368,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "6543:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6527:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1400,
															"nodeType": "IfStatement",
															"src": "6523:266:5",
															"trueBody": {
																"id": 1399,
																"nodeType": "Block",
																"src": "6552:237:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1370,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6573:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1372,
																				"indexExpression": {
																					"id": 1371,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1355,
																					"src": "6583:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6573:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1373,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6588:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1378,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1374,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 814,
																							"src": "6598:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1375,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6608:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "6598:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6617:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6598:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6588:31:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6573:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1380,
																		"nodeType": "ExpressionStatement",
																		"src": "6573:46:5"
																	},
																	{
																		"expression": {
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1381,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6640:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1383,
																				"indexExpression": {
																					"id": 1382,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "6648:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6640:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6659:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "6640:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1386,
																		"nodeType": "ExpressionStatement",
																		"src": "6640:20:5"
																	},
																	{
																		"expression": {
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1387,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "6681:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1389,
																				"indexExpression": {
																					"id": 1388,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "6693:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6681:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6704:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "6681:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1392,
																		"nodeType": "ExpressionStatement",
																		"src": "6681:28:5"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1393,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6730:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6740:3:5",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "6730:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6730:15:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1397,
																		"nodeType": "ExpressionStatement",
																		"src": "6730:15:5"
																	},
																	{
																		"id": 1398,
																		"nodeType": "Break",
																		"src": "6766:5:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1358,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "6479:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1359,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "6483:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6493:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6483:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"initializationExpression": {
													"assignments": [
														1355
													],
													"declarations": [
														{
															"constant": false,
															"id": 1355,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6472:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1402,
															"src": "6464:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1354,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6464:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1357,
													"initialValue": {
														"hexValue": "30",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6476:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6464:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6501:3:5",
														"subExpression": {
															"id": 1362,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6501:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ExpressionStatement",
													"src": "6501:3:5"
												},
												"nodeType": "ForStatement",
												"src": "6459:343:5"
											}
										]
									},
									"functionSelector": "fdeb889f",
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "onlyOwner",
												"nameLocations": [
													"6363:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "6363:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6363:9:5"
										}
									],
									"name": "includeAccountinReward",
									"nameLocation": "6316:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6347:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "6339:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:17:5"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6373:0:5"
									},
									"scope": 2275,
									"src": "6307:504:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "6897:52:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1411,
														"name": "isWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6917:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1413,
													"indexExpression": {
														"id": 1412,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "6931:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6917:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1414,
												"nodeType": "Return",
												"src": "6910:29:5"
											}
										]
									},
									"functionSelector": "5fae0576",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistedAddress",
									"nameLocation": "6832:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6852:17:5"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6891:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6891:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6890:6:5"
									},
									"scope": 2275,
									"src": "6823:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "7023:131:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7044:23:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1424,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "7045:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1426,
																"indexExpression": {
																	"id": 1425,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "7059:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7045:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7069:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
																"typeString": "literal_string \"Address is already whitelisted\""
															},
															"value": "Address is already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
																"typeString": "literal_string \"Address is already whitelisted\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7036:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7036:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "7036:66:5"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1431,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7115:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1433,
														"indexExpression": {
															"id": 1432,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "7129:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7115:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7140:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7115:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "7115:29:5"
											}
										]
									},
									"functionSelector": "c30796ab",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1420,
												"name": "onlyOwner",
												"nameLocations": [
													"7013:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "7013:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7013:9:5"
										}
									],
									"name": "whitelistedAddress",
									"nameLocation": "6970:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6997:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6989:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6988:17:5"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:5"
									},
									"scope": 2275,
									"src": "6961:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "7208:80:5",
										"statements": [
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1443,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "7221:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7235:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7221:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "7221:18:5"
											},
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1447,
														"name": "launchBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "7252:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1448,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "7266:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7252:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "7252:26:5"
											}
										]
									},
									"functionSelector": "c9567bf9",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1441,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1440,
												"name": "onlyOwner",
												"nameLocations": [
													"7198:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "7198:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7198:9:5"
										}
									],
									"name": "openTrading",
									"nameLocation": "7175:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7186:2:5"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7208:0:5"
									},
									"scope": 2275,
									"src": "7166:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "7352:342:5",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7369:12:5",
													"subExpression": {
														"id": 1459,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "7370:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1469,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7479:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7485:6:5",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7479:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1471,
																"name": "launchBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7495:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "33",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7509:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "7495:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7479:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1483,
													"nodeType": "IfStatement",
													"src": "7475:196:5",
													"trueBody": {
														"id": 1482,
														"nodeType": "Block",
														"src": "7512:159:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1476,
																				"name": "isWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7601:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1478,
																			"indexExpression": {
																				"id": 1477,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "7615:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7601:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4c61756e63682070726f74656374696f6e3a206e6f742077686974656c6973746564",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7620:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27",
																				"typeString": "literal_string \"Launch protection: not whitelisted\""
																			},
																			"value": "Launch protection: not whitelisted"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27",
																				"typeString": "literal_string \"Launch protection: not whitelisted\""
																			}
																		],
																		"id": 1475,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "7593:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7593:64:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1481,
																"nodeType": "ExpressionStatement",
																"src": "7593:64:5"
															}
														]
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "7365:306:5",
												"trueBody": {
													"id": 1468,
													"nodeType": "Block",
													"src": "7383:86:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1462,
																			"name": "isWhitelisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "7408:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1464,
																		"indexExpression": {
																			"id": 1463,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1455,
																			"src": "7422:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7408:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7429:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																			"typeString": "literal_string \"Trading not yet enabled\""
																		},
																		"value": "Trading not yet enabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																			"typeString": "literal_string \"Trading not yet enabled\""
																		}
																	],
																	"id": 1461,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7400:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:55:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1467,
															"nodeType": "ExpressionStatement",
															"src": "7400:55:5"
														}
													]
												}
											},
											{
												"id": 1485,
												"nodeType": "PlaceholderStatement",
												"src": "7683:1:5"
											}
										]
									},
									"id": 1487,
									"name": "launchProtection",
									"nameLocation": "7309:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7334:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7326:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7325:26:5"
									},
									"src": "7300:394:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "7880:846:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1502,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "7901:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7919:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7911:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7911:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7911:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7901:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7923:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7893:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7893:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "7893:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1512,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "7984:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8005:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7997:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7997:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7997:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7984:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8009:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7976:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7976:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "7976:71:5"
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "8068:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "8060:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"arguments": [
														{
															"id": 1524,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "8094:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1523,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1090
														],
														"referencedDeclaration": 1090,
														"src": "8084:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8084:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8060:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1528,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "8138:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1529,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "8155:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8138:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8178:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8114:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:117:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "8114:117:5"
											},
											{
												"condition": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8252:29:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1535,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "8271:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1534,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "8253:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8253:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "8248:198:5",
												"trueBody": {
													"id": 1549,
													"nodeType": "Block",
													"src": "8283:163:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1540,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1491,
																						"src": "8338:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1539,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1090
																					],
																					"referencedDeclaration": 1090,
																					"src": "8328:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8328:20:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1542,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "8351:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8328:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1544,
																			"name": "maxWalletAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 850,
																			"src": "8361:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8328:48:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8397:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		},
																		"value": "Whale detected!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		}
																	],
																	"id": 1538,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8300:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8300:132:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "8300:132:5"
														}
													]
												}
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "8463:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "8458:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8458:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1553,
												"nodeType": "VariableDeclarationStatement",
												"src": "8458:12:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1554,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "8491:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1555,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8501:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8491:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1557,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "8516:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1558,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8529:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8516:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8491:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1566,
												"nodeType": "IfStatement",
												"src": "8487:100:5",
												"trueBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "8542:45:5",
													"statements": [
														{
															"expression": {
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1561,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "8559:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8569:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8559:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1564,
															"nodeType": "ExpressionStatement",
															"src": "8559:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1568,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "8624:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1567,
														"name": "isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8606:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8606:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "8603:47:5",
												"trueBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "8632:18:5",
													"statements": [
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1570,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "8633:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8643:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8633:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "8633:15:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "8681:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "8689:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "8700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1580,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "8708:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1576,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "8666:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8666:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "8666:50:5"
											}
										]
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1497,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1489,
													"src": "7861:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1498,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1491,
													"src": "7869:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "launchProtection",
												"nameLocations": [
													"7844:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1487,
												"src": "7844:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7844:35:5"
										}
									],
									"name": "_transfer",
									"nameLocation": "7715:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7835:8:5"
									},
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7745:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "7737:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7772:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "7764:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7802:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "7794:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7724:93:5"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7880:0:5"
									},
									"scope": 2275,
									"src": "7706:1020:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "8878:704:5",
										"statements": [
											{
												"condition": {
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8895:8:5",
													"subExpression": {
														"id": 1595,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "8896:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "8891:59:5",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "8905:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1597,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "8922:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8922:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1599,
															"nodeType": "ExpressionStatement",
															"src": "8922:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1602,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "8970:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1604,
														"indexExpression": {
															"id": 1603,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "8982:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8970:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8991:16:5",
														"subExpression": {
															"baseExpression": {
																"id": 1605,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "8992:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1607,
															"indexExpression": {
																"id": 1606,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "9004:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8992:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8970:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9088:18:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1617,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "9089:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1619,
																"indexExpression": {
																	"id": 1618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "9101:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9089:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1621,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "9110:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1623,
															"indexExpression": {
																"id": 1622,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "9122:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9110:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9088:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9204:18:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1632,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "9205:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1634,
																	"indexExpression": {
																		"id": 1633,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "9217:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9205:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9226:16:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1636,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "9227:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1638,
																	"indexExpression": {
																		"id": 1637,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "9239:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9227:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9204:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1648,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "9319:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1650,
																	"indexExpression": {
																		"id": 1649,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "9331:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9319:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1651,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "9340:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1653,
																	"indexExpression": {
																		"id": 1652,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "9352:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9340:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9319:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1668,
																"nodeType": "Block",
																"src": "9432:65:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1663,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "9467:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1664,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1588,
																					"src": "9473:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1665,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "9477:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1662,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1781,
																				"src": "9449:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9449:34:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1667,
																		"nodeType": "ExpressionStatement",
																		"src": "9449:34:5"
																	}
																]
															},
															"id": 1669,
															"nodeType": "IfStatement",
															"src": "9315:182:5",
															"trueBody": {
																"id": 1661,
																"nodeType": "Block",
																"src": "9357:69:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "9396:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1588,
																					"src": "9402:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1658,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "9406:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1655,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1998,
																				"src": "9374:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9374:38:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1660,
																		"nodeType": "ExpressionStatement",
																		"src": "9374:38:5"
																	}
																]
															}
														},
														"id": 1670,
														"nodeType": "IfStatement",
														"src": "9200:297:5",
														"trueBody": {
															"id": 1647,
															"nodeType": "Block",
															"src": "9244:65:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1642,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "9279:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1643,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "9285:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1644,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1590,
																				"src": "9289:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1641,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "9261:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9261:34:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1646,
																	"nodeType": "ExpressionStatement",
																	"src": "9261:34:5"
																}
															]
														}
													},
													"id": 1671,
													"nodeType": "IfStatement",
													"src": "9084:413:5",
													"trueBody": {
														"id": 1631,
														"nodeType": "Block",
														"src": "9127:67:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1626,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "9164:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1627,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "9170:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1628,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "9174:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1625,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "9144:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9144:36:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1630,
																"nodeType": "ExpressionStatement",
																"src": "9144:36:5"
															}
														]
													}
												},
												"id": 1672,
												"nodeType": "IfStatement",
												"src": "8966:531:5",
												"trueBody": {
													"id": 1616,
													"nodeType": "Block",
													"src": "9009:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1611,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "9048:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1612,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "9054:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1613,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "9058:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1610,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "9026:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9026:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1615,
															"nodeType": "ExpressionStatement",
															"src": "9026:38:5"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9517:8:5",
													"subExpression": {
														"id": 1673,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "9518:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "9513:60:5",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "9527:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1675,
																	"name": "restoreAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "9544:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9544:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1677,
															"nodeType": "ExpressionStatement",
															"src": "9544:15:5"
														}
													]
												}
											}
										]
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "8747:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8782:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "8774:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8807:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "8799:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8830:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "8822:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "8853:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "8848:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8848:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8761:108:5"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8878:0:5"
									},
									"scope": 2275,
									"src": "8738:844:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "9626:223:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1684,
															"name": "_reflectionFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "9643:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9661:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9643:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1687,
															"name": "_taxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9666:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9666:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9643:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1692,
												"nodeType": "IfStatement",
												"src": "9639:48:5",
												"trueBody": {
													"functionReturnParameters": 1683,
													"id": 1691,
													"nodeType": "Return",
													"src": "9680:7:5"
												}
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1693,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "9703:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1694,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "9728:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9703:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "9703:39:5"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "9755:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1698,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9773:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9755:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "9755:25:5"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1701,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "9797:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9814:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9797:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "9797:18:5"
											},
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1705,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9838:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9828:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "9828:11:5"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "9603:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9615:2:5"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9626:0:5"
									},
									"scope": 2275,
									"src": "9594:255:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "9894:100:5",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1713,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "9907:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1714,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "9924:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9907:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "9907:39:5"
											},
											{
												"expression": {
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1717,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9959:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1718,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "9969:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9959:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "9959:25:5"
											}
										]
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "9870:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9883:2:5"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9894:0:5"
									},
									"scope": 2275,
									"src": "9861:133:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "10135:517:5",
										"statements": [
											{
												"assignments": [
													1732,
													1734,
													1736,
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10173:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "10165:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10165:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1734,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "10205:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "10197:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10197:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10245:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "10237:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1735,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10237:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "10285:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "10277:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"id": 1740,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "10331:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1739,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "10312:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10312:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10148:191:5"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10356:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1745,
														"indexExpression": {
															"id": 1744,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "10364:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10356:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1746,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10374:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1748,
															"indexExpression": {
																"id": 1747,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10382:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10374:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1749,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "10392:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10374:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10356:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "10356:43:5"
											},
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1753,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10412:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1755,
														"indexExpression": {
															"id": 1754,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "10420:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10412:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1756,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10433:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1758,
															"indexExpression": {
																"id": 1757,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10441:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10433:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1759,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "10454:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10433:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10412:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "10412:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1764,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "10501:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "10509:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1766,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "10518:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1763,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "10486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10486:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "10486:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1770,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "10555:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1771,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "10564:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "10543:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10543:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "10543:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1775,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "10607:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "10615:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1777,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "10626:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1774,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "10598:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10598:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "EmitStatement",
												"src": "10593:49:5"
											}
										]
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "10015:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10053:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10045:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10080:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10072:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10072:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10110:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10102:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10032:94:5"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10135:0:5"
									},
									"scope": 2275,
									"src": "10006:646:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "10795:583:5",
										"statements": [
											{
												"assignments": [
													1791,
													1793,
													1795,
													1797
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10833:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "10825:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10825:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "10865:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "10857:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10857:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10905:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "10897:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10897:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1797,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "10945:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "10937:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10937:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1801,
												"initialValue": {
													"arguments": [
														{
															"id": 1799,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "10991:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1798,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "10972:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10972:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10808:191:5"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1802,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11012:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1804,
														"indexExpression": {
															"id": 1803,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "11020:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11012:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1805,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11030:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1807,
															"indexExpression": {
																"id": 1806,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "11038:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11030:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1808,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "11048:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11030:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11012:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "11012:43:5"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1812,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11068:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1814,
														"indexExpression": {
															"id": 1813,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "11076:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11068:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1815,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "11089:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1817,
															"indexExpression": {
																"id": 1816,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "11097:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11089:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1818,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "11110:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11089:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11068:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "11068:57:5"
											},
											{
												"expression": {
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1822,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11138:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"id": 1823,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "11146:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11138:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1825,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1827,
															"indexExpression": {
																"id": 1826,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "11167:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11159:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1828,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "11180:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11159:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11138:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "11138:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "11227:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1834,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "11235:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1835,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "11244:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1832,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "11212:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11212:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "11212:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1839,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "11281:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1840,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "11290:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1838,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "11269:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11269:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "11269:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1844,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "11333:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1845,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "11341:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1846,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "11352:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1843,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "11324:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11324:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1848,
												"nodeType": "EmitStatement",
												"src": "11319:49:5"
											}
										]
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "10673:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10713:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10705:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10740:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10732:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10770:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10762:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10762:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10692:94:5"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10795:0:5"
									},
									"scope": 2275,
									"src": "10664:714:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "11523:569:5",
										"statements": [
											{
												"assignments": [
													1860,
													1862,
													1864,
													1866
												],
												"declarations": [
													{
														"constant": false,
														"id": 1860,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "11561:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "11553:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "11593:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "11585:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11585:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "11633:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "11625:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11625:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1866,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "11673:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "11665:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11665:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1870,
												"initialValue": {
													"arguments": [
														{
															"id": 1868,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "11719:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1867,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "11700:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11700:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11536:191:5"
											},
											{
												"expression": {
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1871,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11740:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1873,
														"indexExpression": {
															"id": 1872,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "11748:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11740:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1874,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "11758:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1876,
															"indexExpression": {
																"id": 1875,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "11766:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11758:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1877,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "11776:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11758:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11740:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "11740:43:5"
											},
											{
												"expression": {
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1881,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11796:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1883,
														"indexExpression": {
															"id": 1882,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "11804:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11796:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1884,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11814:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1886,
															"indexExpression": {
																"id": 1885,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "11822:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11814:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1887,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "11832:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11814:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11796:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "11796:43:5"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1891,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11852:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1893,
														"indexExpression": {
															"id": 1892,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "11860:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11852:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1894,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11873:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1896,
															"indexExpression": {
																"id": 1895,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "11881:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11873:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1897,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "11894:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11873:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11852:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "11852:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1902,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "11941:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1903,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "11949:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1904,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "11958:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1901,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "11926:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11926:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "11926:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1908,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "11995:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1909,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "12004:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1907,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "11983:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11983:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "11983:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1913,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "12047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1914,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "12055:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1915,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "12066:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1912,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "12038:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12038:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "EmitStatement",
												"src": "12033:49:5"
											}
										]
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "11399:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11441:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "11433:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11468:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "11460:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11498:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "11490:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11420:94:5"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11523:0:5"
									},
									"scope": 2275,
									"src": "11390:702:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "12237:639:5",
										"statements": [
											{
												"assignments": [
													1929,
													1931,
													1933,
													1935
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "12275:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "12267:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12267:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "12307:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "12299:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12299:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1933,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "12347:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "12339:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1932,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12339:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1935,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "12387:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "12379:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12379:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"id": 1937,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "12433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1936,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "12414:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12414:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12250:191:5"
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1940,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "12454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1942,
														"indexExpression": {
															"id": 1941,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "12462:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12454:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1943,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "12472:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1945,
															"indexExpression": {
																"id": 1944,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "12480:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12472:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1946,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "12490:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12472:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12454:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "12454:43:5"
											},
											{
												"expression": {
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1950,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "12510:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1952,
														"indexExpression": {
															"id": 1951,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "12518:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12510:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1953,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "12528:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1955,
															"indexExpression": {
																"id": 1954,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "12536:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12528:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1956,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "12546:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12528:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12510:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "12510:43:5"
											},
											{
												"expression": {
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1960,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "12566:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1962,
														"indexExpression": {
															"id": 1961,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "12574:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12566:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1963,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "12587:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1965,
															"indexExpression": {
																"id": 1964,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "12595:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12587:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1966,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "12608:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12587:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12566:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "12566:57:5"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1970,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "12636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1972,
														"indexExpression": {
															"id": 1971,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "12644:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12636:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1973,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "12657:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1975,
															"indexExpression": {
																"id": 1974,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "12665:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12657:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1976,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12678:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12657:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12636:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "12636:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1981,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "12725:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1982,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "12733:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1983,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "12742:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1980,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "12710:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12710:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "12710:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1987,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "12779:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1988,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "12788:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1986,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "12767:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12767:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "12767:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1992,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "12831:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "12839:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "12850:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1991,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "12822:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12822:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "EmitStatement",
												"src": "12817:49:5"
											}
										]
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "12113:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12155:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "12147:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12182:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "12174:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "12212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "12204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12134:94:5"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12237:0:5"
									},
									"scope": 2275,
									"src": "12104:772:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "13006:152:5",
										"statements": [
											{
												"assignments": [
													2006
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "allTaxes",
														"nameLocation": "13027:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "13019:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13019:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2010,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "13038:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2008,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "13055:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13038:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13019:43:5"
											},
											{
												"assignments": [
													2012
												],
												"declarations": [
													{
														"constant": false,
														"id": 2012,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "13083:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "13075:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13075:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2019,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2013,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "13095:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2014,
																	"name": "allTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "13105:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13095:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2016,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13094:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13117:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "13094:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13075:45:5"
											},
											{
												"expression": {
													"id": 2020,
													"name": "taxValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2012,
													"src": "13140:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2021,
												"nodeType": "Return",
												"src": "13133:15:5"
											}
										]
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCompleteTaxValue",
									"nameLocation": "12897:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "12926:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "12918:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12918:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:17:5"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "12990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12989:9:5"
									},
									"scope": 2275,
									"src": "12888:270:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "13386:369:5",
										"statements": [
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "13407:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "13399:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13399:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"arguments": [
														{
															"id": 2039,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "13439:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2038,
														"name": "_getCompleteTaxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "13418:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13418:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13399:48:5"
											},
											{
												"assignments": [
													2043
												],
												"declarations": [
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "13468:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "13460:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2044,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "13486:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2045,
														"name": "taxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "13496:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13486:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13460:44:5"
											},
											{
												"assignments": [
													2049
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "13525:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "13517:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13517:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2052,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2050,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "13539:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13539:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13517:32:5"
											},
											{
												"assignments": [
													2054
												],
												"declarations": [
													{
														"constant": false,
														"id": 2054,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "13570:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "13562:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2053,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13562:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2055,
														"name": "tTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "13588:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2056,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "13606:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13588:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13562:55:5"
											},
											{
												"assignments": [
													2060
												],
												"declarations": [
													{
														"constant": false,
														"id": 2060,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "13638:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "13630:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2059,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13630:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2061,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "13648:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2062,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "13658:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13648:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13630:39:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2065,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "13690:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2066,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "13699:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2067,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "13716:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2068,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "13733:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2069,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13689:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2070,
												"nodeType": "Return",
												"src": "13682:63:5"
											}
										]
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTransferValues",
									"nameLocation": "13179:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "13206:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "13198:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13198:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13197:17:5"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "13286:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13286:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "13310:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "13334:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "13358:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13269:109:5"
									},
									"scope": 2275,
									"src": "13170:585:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "13834:200:5",
										"statements": [
											{
												"assignments": [
													2080
												],
												"declarations": [
													{
														"constant": false,
														"id": 2080,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "13855:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2106,
														"src": "13847:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2087,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2081,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "13863:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2082,
																	"name": "_reflectionFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "13873:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13863:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2084,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13862:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13891:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "13862:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13847:47:5"
											},
											{
												"assignments": [
													2089
												],
												"declarations": [
													{
														"constant": false,
														"id": 2089,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "13915:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2106,
														"src": "13907:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2088,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13907:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2093,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2090,
														"name": "tFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "13922:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2091,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "13929:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13922:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13907:33:5"
											},
											{
												"expression": {
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2094,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "13957:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2095,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "13967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2096,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "13977:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13967:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13957:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "13957:24:5"
											},
											{
												"expression": {
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2100,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "13994:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2101,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "14007:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2102,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "14020:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14007:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13994:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "13994:30:5"
											}
										]
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "13776:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "13796:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "13788:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13788:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "13813:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "13805:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13787:38:5"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13834:0:5"
									},
									"scope": 2275,
									"src": "13767:267:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "14097:116:5",
										"statements": [
											{
												"assignments": [
													2113,
													2115
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "14119:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "14111:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14111:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2115,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "14136:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "14128:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14128:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2116,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "14147:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14147:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14110:56:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2119,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2113,
														"src": "14186:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2120,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "14196:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14186:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2111,
												"id": 2122,
												"nodeType": "Return",
												"src": "14179:24:5"
											}
										]
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "14055:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14063:2:5"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "14088:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14088:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14087:9:5"
									},
									"scope": 2275,
									"src": "14046:167:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "14294:633:5",
										"statements": [
											{
												"assignments": [
													2132
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "14315:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "14307:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14307:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"id": 2133,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 831,
													"src": "14325:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14307:25:5"
											},
											{
												"assignments": [
													2136
												],
												"declarations": [
													{
														"constant": false,
														"id": 2136,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "14353:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "14345:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14345:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2138,
												"initialValue": {
													"id": 2137,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 829,
													"src": "14363:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14345:25:5"
											},
											{
												"body": {
													"id": 2191,
													"nodeType": "Block",
													"src": "14434:337:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2150,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "14475:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2154,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2151,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "14483:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2153,
																			"indexExpression": {
																				"id": 2152,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "14493:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14483:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14475:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2155,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "14499:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14475:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2157,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "14529:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2161,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2158,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "14537:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2160,
																			"indexExpression": {
																				"id": 2159,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "14547:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14537:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14529:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2162,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "14553:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14529:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14475:85:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2170,
															"nodeType": "IfStatement",
															"src": "14451:191:5",
															"trueBody": {
																"id": 2169,
																"nodeType": "Block",
																"src": "14578:64:5",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2165,
																					"name": "_rTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 831,
																					"src": "14607:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2166,
																					"name": "_tTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "14616:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2167,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "14606:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 2130,
																		"id": 2168,
																		"nodeType": "Return",
																		"src": "14599:25:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2171,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "14658:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2172,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "14668:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2173,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "14678:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2177,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2174,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "14686:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2176,
																			"indexExpression": {
																				"id": 2175,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "14696:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14686:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14678:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14668:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14658:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2180,
															"nodeType": "ExpressionStatement",
															"src": "14658:41:5"
														},
														{
															"expression": {
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2181,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "14716:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2182,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "14726:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2183,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "14736:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2187,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2184,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "14744:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2186,
																			"indexExpression": {
																				"id": 2185,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "14754:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14744:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14736:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14726:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14716:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "14716:41:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2143,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "14407:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2144,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "14411:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14421:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14411:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14407:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2192,
												"initializationExpression": {
													"assignments": [
														2140
													],
													"declarations": [
														{
															"constant": false,
															"id": 2140,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14400:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 2192,
															"src": "14392:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2139,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14392:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2142,
													"initialValue": {
														"hexValue": "30",
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14404:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14392:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14429:3:5",
														"subExpression": {
															"id": 2147,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "14429:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2149,
													"nodeType": "ExpressionStatement",
													"src": "14429:3:5"
												},
												"nodeType": "ForStatement",
												"src": "14387:384:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2193,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "14791:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2194,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "14801:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2195,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "14811:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14801:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14791:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "14787:89:5",
												"trueBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "14820:56:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 2198,
																		"name": "_rTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "14845:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2199,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "14854:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14844:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 2130,
															"id": 2201,
															"nodeType": "Return",
															"src": "14837:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2204,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "14900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2205,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "14909:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2206,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14899:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2207,
												"nodeType": "Return",
												"src": "14892:25:5"
											}
										]
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "14234:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14251:2:5"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "14276:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "14285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14275:18:5"
									},
									"scope": 2275,
									"src": "14225:702:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "15067:511:5",
										"statements": [
											{
												"assignments": [
													2219
												],
												"declarations": [
													{
														"constant": false,
														"id": 2219,
														"mutability": "mutable",
														"name": "tTaxFee",
														"nameLocation": "15088:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2273,
														"src": "15080:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15080:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2220,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "15099:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2221,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "15109:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15099:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15098:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15120:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "15098:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15080:43:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2227,
														"name": "tTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "15140:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15150:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15140:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2272,
												"nodeType": "IfStatement",
												"src": "15136:433:5",
												"trueBody": {
													"id": 2271,
													"nodeType": "Block",
													"src": "15153:416:5",
													"statements": [
														{
															"assignments": [
																2231
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2231,
																	"mutability": "mutable",
																	"name": "rTaxFee",
																	"nameLocation": "15178:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2271,
																	"src": "15170:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2230,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15170:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2238,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2232,
																				"name": "tTaxFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2219,
																				"src": "15189:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2233,
																				"name": "currentRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2215,
																				"src": "15199:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15189:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2235,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15188:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15214:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "15188:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15170:45:5"
														},
														{
															"expression": {
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2239,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "15232:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2241,
																	"indexExpression": {
																		"id": 2240,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "15240:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15232:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2242,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "15261:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2244,
																		"indexExpression": {
																			"id": 2243,
																			"name": "_marketingAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "15269:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15261:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2245,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "15290:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15261:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15232:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2248,
															"nodeType": "ExpressionStatement",
															"src": "15232:65:5"
														},
														{
															"expression": {
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2249,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "15314:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2251,
																	"indexExpression": {
																		"id": 2250,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "15322:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15314:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2252,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "15364:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2254,
																		"indexExpression": {
																			"id": 2253,
																			"name": "_developmentAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 846,
																			"src": "15372:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15364:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2255,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "15414:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15364:57:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15314:107:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2258,
															"nodeType": "ExpressionStatement",
															"src": "15314:107:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2260,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "15452:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2261,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "15460:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2262,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "15479:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2259,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "15443:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15443:44:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2264,
															"nodeType": "EmitStatement",
															"src": "15438:49:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2266,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "15518:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2267,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "15526:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2268,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "15547:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2265,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "15509:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15509:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2270,
															"nodeType": "EmitStatement",
															"src": "15504:51:5"
														}
													]
												}
											}
										]
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxFeeTransfer",
									"nameLocation": "14948:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14983:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "14975:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14975:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "15010:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "15002:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "15038:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "15030:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15030:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:96:5"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15067:0:5"
									},
									"scope": 2275,
									"src": "14939:639:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2276,
							"src": "143:15440:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "39:15544:5"
				},
				"id": 5
			}
		}
	}
}