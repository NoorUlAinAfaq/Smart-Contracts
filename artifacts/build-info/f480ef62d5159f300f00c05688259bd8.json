{
	"id": "f480ef62d5159f300f00c05688259bd8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"CYBCC.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(\n        address sender,\n        uint256 balance,\n        uint256 needed\n    );\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(\n        address spender,\n        uint256 allowance,\n        uint256 needed\n    );\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value,\n        bool emitEvent\n    ) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(\n                    spender,\n                    currentAllowance,\n                    value\n                );\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: shoaib.sol\n\npragma solidity ^0.8.20;\n\ncontract CYBCC is ERC20 {\n    mapping(address => uint256) private _rOwned;\n\n    mapping(address => uint256) private _tOwned;\n\n    mapping(address => bool) private _isExcludedFromFee;\n\n    mapping(address => bool) private _isExcluded;\n\n    address[] private _excluded;\n\n    uint8 private _decimals;\n\n    address private _owner = msg.sender;\n\n    uint256 private constant MAX = ~uint256(0);\n\n    uint256 private _tTotal;\n\n    uint256 private _rTotal;\n\n    uint256 private _tFeeTotal = 0;\n\n    uint256 private _reflectionFee;\n\n    uint256 private _previousReflectionFee;\n\n    uint256 private _taxFee;\n\n    uint256 private _previousTaxFee;\n\n    address private _marketingAndDevelopmentAccount;\n\n    address public pairAddress;\n\n    uint256 private maxWalletAmount;\n    bool antiWhale = false;\n\n    constructor() ERC20(\"abc coin\", \"CYBCC\") {\n        _decimals = 18;\n\n        _tTotal = 1000000000 * 10**uint256(_decimals);\n\n        _rTotal = (MAX - (MAX % _tTotal));\n\n        _reflectionFee = 2;\n\n        _previousReflectionFee = _reflectionFee;\n\n        _taxFee = 1;\n\n        _previousTaxFee = _taxFee;\n\n        _marketingAndDevelopmentAccount = _owner; //change this wallet address\n\n        maxWalletAmount = 2 * (_tTotal / 100);\n\n        _isExcludedFromFee[owner()] = true;\n\n        _isExcludedFromFee[_marketingAndDevelopmentAccount] = true;\n\n        _isExcludedFromFee[address(this)] = true;\n\n        _rOwned[_owner] = _rTotal;\n\n        _mint(msg.sender, _rTotal);\n    }\n\n    receive() external payable {}\n\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        if (owner() == msg.sender) _;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _tTotal;\n    }\n\n    function reflectionFee() public view returns (uint256) {\n        return _reflectionFee;\n    }\n\n    function getTaxFee() public view returns (uint256) {\n        return _taxFee;\n    }\n\n    function getMarketingAndDevelopmentAccount() public view returns (address) {\n        return _marketingAndDevelopmentAccount;\n    }\n\n    function isExcludedFromFee(address account) public view returns (bool) {\n        return _isExcludedFromFee[account];\n    }\n\n    function balanceOf(address sender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        if (_isExcluded[sender]) {\n            return _tOwned[sender];\n        }\n\n        return tokenFromReflection(_rOwned[sender]);\n    }\n\n    function isExcluded(address account) public view returns (bool) {\n        return _isExcluded[account];\n    }\n\n    function totalFeesRedistributed() public view returns (uint256) {\n        return _tFeeTotal;\n    }\n\n    function excludeFromFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function changePairAddress(address _pairAddress) public onlyOwner {\n        pairAddress = _pairAddress;\n    }\n\n    function reflect(uint256 tAmount) public {\n        address sender = _msgSender();\n\n        require(\n            !_isExcluded[sender],\n            \"Excluded addresses cannot call this function\"\n        );\n\n        (uint256 rAmount, , , ) = _getTransferValues(tAmount);\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n\n        _rTotal = _rTotal - rAmount;\n\n        _tFeeTotal = _tFeeTotal + tAmount;\n    }\n\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\n        public\n        view\n        returns (uint256)\n    {\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\n\n        if (!deductTransferFee) {\n            (uint256 rAmount, , , ) = _getTransferValues(tAmount);\n\n            return rAmount;\n        } else {\n            (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount);\n\n            return rTransferAmount;\n        }\n    }\n\n    function tokenFromReflection(uint256 rAmount)\n        private\n        view\n        returns (uint256)\n    {\n        require(\n            rAmount <= _rTotal,\n            \"Amount must be less than total reflections\"\n        );\n\n        uint256 currentRate = _getRate();\n\n        return rAmount / currentRate;\n    }\n\n    function excludeAccountFromReward(address account) public onlyOwner {\n        require(!_isExcluded[account], \"Account is already excluded\");\n\n        if (_rOwned[account] > 0) {\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\n        }\n\n        _isExcluded[account] = true;\n\n        _excluded.push(account);\n    }\n\n    function includeAccountinReward(address account) public onlyOwner {\n        require(_isExcluded[account], \"Account is already included\");\n\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_excluded[i] == account) {\n                _excluded[i] = _excluded[_excluded.length - 1];\n\n                _tOwned[account] = 0;\n\n                _isExcluded[account] = false;\n\n                _excluded.pop();\n\n                break;\n            }\n        }\n    }\n\n    function enableAntiWhale() public onlyOwner {\n        antiWhale = true;\n    }\n\n    function disbleAntiWhale() public onlyOwner {\n        antiWhale = false;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual override {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        uint256 senderBalance = balanceOf(sender);\n\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n\n        if (sender != owner() && sender != getMarketingAndDevelopmentAccount() && antiWhale) {\n\n            require(\n                balanceOf(recipient) + amount <= maxWalletAmount,\n                \"Whale detected!!\"\n            );\n\n        }\n\n        bool takeFee;\n\n        if (sender == pairAddress || recipient == pairAddress) {\n            takeFee = true;\n        }\n\n        if (isExcludedFromFee(sender)) {\n            takeFee = false;\n        }\n\n        _tokenTransfer(sender, recipient, amount, takeFee);\n    }\n\n    function _tokenTransfer(\n        address from,\n        address to,\n        uint256 value,\n        bool takeFee\n    ) private {\n        if (!takeFee) {\n            removeAllFee();\n        }\n\n        if (_isExcluded[from] && !_isExcluded[to]) {\n            _transferFromExcluded(from, to, value);\n        } else if (!_isExcluded[from] && _isExcluded[to]) {\n            _transferToExcluded(from, to, value);\n        } else if (!_isExcluded[from] && !_isExcluded[to]) {\n            _transferStandard(from, to, value);\n        } else if (_isExcluded[from] && _isExcluded[to]) {\n            _transferBothExcluded(from, to, value);\n        } else {\n            _transferStandard(from, to, value);\n        }\n\n        if (!takeFee) {\n            restoreAllFee();\n        }\n    }\n\n    function removeAllFee() private {\n        if (_reflectionFee == 0 && _taxFee == 0) return;\n\n        _previousReflectionFee = _reflectionFee;\n\n        _previousTaxFee = _taxFee;\n\n        _reflectionFee = 0;\n\n        _taxFee = 0;\n    }\n\n    function restoreAllFee() private {\n        _reflectionFee = _previousReflectionFee;\n\n        _taxFee = _previousTaxFee;\n    }\n\n    function _transferStandard(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferToExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\n\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferFromExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n\n        _tOwned[sender] = _tOwned[sender] - tAmount;\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferBothExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n\n        _tOwned[sender] = _tOwned[sender] - tAmount;\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\n\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _getCompleteTaxValue(uint256 tAmount)\n        private\n        view\n        returns (uint256)\n    {\n        uint256 allTaxes = _reflectionFee + _taxFee;\n\n        uint256 taxValue = (tAmount * allTaxes) / 100;\n\n        return taxValue;\n    }\n\n    function _getTransferValues(uint256 tAmount)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 taxValue = _getCompleteTaxValue(tAmount);\n\n        uint256 tTransferAmount = tAmount - taxValue;\n\n        uint256 currentRate = _getRate();\n\n        uint256 rTransferAmount = tTransferAmount * currentRate;\n\n        uint256 rAmount = tAmount * currentRate;\n\n        return (rAmount, rTransferAmount, tTransferAmount, currentRate);\n    }\n\n    function _reflectFee(uint256 tAmount, uint256 currentRate) private {\n        uint256 tFee = (tAmount * _reflectionFee) / 100;\n\n        uint256 rFee = tFee * currentRate;\n\n        _rTotal = _rTotal - rFee;\n\n        _tFeeTotal = _tFeeTotal + tFee;\n    }\n\n    function _getRate() private view returns (uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n\n        return rSupply / tSupply;\n    }\n\n    function _getCurrentSupply() private view returns (uint256, uint256) {\n        uint256 rSupply = _rTotal;\n\n        uint256 tSupply = _tTotal;\n\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (\n                _rOwned[_excluded[i]] > rSupply ||\n                _tOwned[_excluded[i]] > tSupply\n            ) {\n                return (_rTotal, _tTotal);\n            }\n\n            rSupply = rSupply - _rOwned[_excluded[i]];\n\n            tSupply = tSupply - _tOwned[_excluded[i]];\n        }\n\n        if (rSupply < _rTotal / _tTotal) {\n            return (_rTotal, _tTotal);\n        }\n\n        return (rSupply, tSupply);\n    }\n\n    function renounceOwnership() public onlyOwner {\n        require(_owner != address(0), \"already renounced\");\n        _owner = address(0);\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        _owner = newOwner;\n    }\n\n    function taxFeeTransfer(\n        address sender,\n        uint256 tAmount,\n        uint256 currentRate\n    ) private {\n        uint256 tTaxFee = (tAmount * _taxFee) / 100;\n\n        if (tTaxFee > 0) {\n            uint256 rTaxFee = tTaxFee * currentRate;\n\n            _rOwned[_marketingAndDevelopmentAccount] =\n                _rOwned[_marketingAndDevelopmentAccount] +\n                rTaxFee;\n\n            emit Transfer(sender, _marketingAndDevelopmentAccount, tTaxFee);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"CYBCC.sol": {
				"CYBCC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pairAddress",
									"type": "address"
								}
							],
							"name": "changePairAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disbleAntiWhale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableAntiWhale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeAccountFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketingAndDevelopmentAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeAccountinReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "reflect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reflectionFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFeesRedistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CYBCC.sol\":17775:30422  contract CYBCC is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"CYBCC.sol\":18078:18113  address private _owner = msg.sender */\n  0x0a\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"CYBCC.sol\":18103:18113  msg.sender */\n  caller\n    /* \"CYBCC.sol\":18078:18113  address private _owner = msg.sender */\n  0x0100\n  mul\n  or\n  swap1\n  sstore\n  0x00\n    /* \"CYBCC.sol\":18229:18259  uint256 private _tFeeTotal = 0 */\n  0x0d\n  sstore\n    /* \"CYBCC.sol\":18540:18562  bool antiWhale = false */\n  0x15\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"CYBCC.sol\":18569:19244  constructor() ERC20(\"abc coin\", \"CYBCC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CYBCC.sol\":8096:8209  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x30b1319031b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4359424343)\n  dup2\n  mstore\n  pop\n    /* \"CYBCC.sol\":8170:8175  name_ */\n  dup2\n    /* \"CYBCC.sol\":8162:8167  _name */\n  0x03\n    /* \"CYBCC.sol\":8162:8175  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"CYBCC.sol\":8185:8192  _symbol */\n  0x04\n    /* \"CYBCC.sol\":8185:8202  _symbol = symbol_ */\n  tag_7\n    /* \"CYBCC.sol\":8195:8202  symbol_ */\n  dup3\n    /* \"CYBCC.sol\":8185:8192  _symbol */\n  dup3\n    /* \"CYBCC.sol\":8185:8202  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"CYBCC.sol\":18620:18629  _decimals */\n  0x0a\n    /* \"CYBCC.sol\":18620:18634  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"CYBCC.sol\":18632:18634  18 */\n  0x12\n    /* \"CYBCC.sol\":18620:18634  _decimals = 18 */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"CYBCC.sol\":18668:18690  10**uint256(_decimals) */\n  tag_9\n  swap3\n  pop\n    /* \"CYBCC.sol\":18632:18634  18 */\n  swap1\n    /* \"CYBCC.sol\":18668:18690  10**uint256(_decimals) */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"CYBCC.sol\":18655:18690  1000000000 * 10**uint256(_decimals) */\n  tag_11\n  swap1\n    /* \"CYBCC.sol\":18655:18665  1000000000 */\n  0x3b9aca00\n    /* \"CYBCC.sol\":18655:18690  1000000000 * 10**uint256(_decimals) */\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"CYBCC.sol\":18645:18652  _tTotal */\n  0x0b\n    /* \"CYBCC.sol\":18645:18690  _tTotal = 1000000000 * 10**uint256(_decimals) */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":18719:18732  MAX % _tTotal */\n  tag_13\n  swap1\n  not(0x00)\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"CYBCC.sol\":18712:18733  MAX - (MAX % _tTotal) */\n  tag_15\n  swap1\n  not(0x00)\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"CYBCC.sol\":18701:18708  _rTotal */\n  0x0c\n    /* \"CYBCC.sol\":18701:18734  _rTotal = (MAX - (MAX % _tTotal)) */\n  sstore\n    /* \"CYBCC.sol\":18762:18763  2 */\n  0x02\n    /* \"CYBCC.sol\":18745:18759  _reflectionFee */\n  0x0e\n    /* \"CYBCC.sol\":18745:18763  _reflectionFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":18774:18796  _previousReflectionFee */\n  0x0f\n    /* \"CYBCC.sol\":18774:18813  _previousReflectionFee = _reflectionFee */\n  sstore\n    /* \"CYBCC.sol\":18834:18835  1 */\n  0x01\n    /* \"CYBCC.sol\":18824:18831  _taxFee */\n  0x10\n    /* \"CYBCC.sol\":18824:18835  _taxFee = 1 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":18846:18861  _previousTaxFee */\n  0x11\n    /* \"CYBCC.sol\":18846:18871  _previousTaxFee = _taxFee */\n  sstore\n    /* \"CYBCC.sol\":18916:18922  _owner */\n  sload(0x0a)\n    /* \"CYBCC.sol\":18882:18913  _marketingAndDevelopmentAccount */\n  0x12\n    /* \"CYBCC.sol\":18882:18922  _marketingAndDevelopmentAccount = _owner */\n  dup1\n  sload\n    /* \"CYBCC.sol\":18916:18922  _owner */\n  0x0100\n  swap1\n  swap3\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"CYBCC.sol\":18882:18922  _marketingAndDevelopmentAccount = _owner */\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":18985:18992  _tTotal */\n  sload(0x0b)\n    /* \"CYBCC.sol\":18985:18998  _tTotal / 100 */\n  tag_17\n  swap1\n    /* \"CYBCC.sol\":18995:18998  100 */\n  0x64\n  swap1\n    /* \"CYBCC.sol\":18985:18998  _tTotal / 100 */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"CYBCC.sol\":18980:18999  2 * (_tTotal / 100) */\n  tag_19\n  swap1\n    /* \"CYBCC.sol\":18980:18981  2 */\n  0x02\n    /* \"CYBCC.sol\":18980:18999  2 * (_tTotal / 100) */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"CYBCC.sol\":18962:18977  maxWalletAmount */\n  0x14\n    /* \"CYBCC.sol\":18962:18999  maxWalletAmount = 2 * (_tTotal / 100) */\n  sstore\n    /* \"CYBCC.sol\":19040:19044  true */\n  0x01\n    /* \"CYBCC.sol\":19010:19028  _isExcludedFromFee */\n  0x07\n    /* \"CYBCC.sol\":19010:19037  _isExcludedFromFee[owner()] */\n  0x00\n    /* \"CYBCC.sol\":19029:19036  owner() */\n  tag_20\n    /* \"CYBCC.sol\":19357:19363  _owner */\n  sload(0x0a)\n  0x0100\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"CYBCC.sol\":19285:19370  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"CYBCC.sol\":19029:19036  owner() */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":19010:19037  _isExcludedFromFee[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"CYBCC.sol\":19010:19044  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":19074:19105  _marketingAndDevelopmentAccount */\n  sload(0x12)\n  dup3\n  and\n    /* \"CYBCC.sol\":19055:19106  _isExcludedFromFee[_marketingAndDevelopmentAccount] */\n  dup2\n  mstore\n    /* \"CYBCC.sol\":19055:19073  _isExcludedFromFee */\n  0x07\n    /* \"CYBCC.sol\":19055:19106  _isExcludedFromFee[_marketingAndDevelopmentAccount] */\n  dup5\n  mstore\n  dup3\n  dup2\n  keccak256\n    /* \"CYBCC.sol\":19055:19113  _isExcludedFromFee[_marketingAndDevelopmentAccount] = true */\n  dup1\n  sload\n  dup7\n  and\n    /* \"CYBCC.sol\":19010:19044  _isExcludedFromFee[owner()] = true */\n  0x01\n    /* \"CYBCC.sol\":19055:19113  _isExcludedFromFee[_marketingAndDevelopmentAccount] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"CYBCC.sol\":19151:19155  this */\n  address\n    /* \"CYBCC.sol\":19124:19157  _isExcludedFromFee[address(this)] */\n  dup3\n  mstore\n  dup4\n  dup3\n  keccak256\n    /* \"CYBCC.sol\":19124:19164  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap7\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"CYBCC.sol\":19193:19200  _rTotal */\n  sload(0x0c)\n    /* \"CYBCC.sol\":19183:19189  _owner */\n  sload(0x0a)\n    /* \"CYBCC.sol\":19010:19044  _isExcludedFromFee[owner()] = true */\n  0x0100\n    /* \"CYBCC.sol\":19183:19189  _owner */\n  swap1\n  div\n  swap1\n  swap2\n  and\n    /* \"CYBCC.sol\":19175:19190  _rOwned[_owner] */\n  dup5\n  mstore\n    /* \"CYBCC.sol\":19175:19182  _rOwned */\n  0x05\n    /* \"CYBCC.sol\":19175:19190  _rOwned[_owner] */\n  swap1\n  swap3\n  mstore\n  swap1\n  swap2\n  keccak256\n    /* \"CYBCC.sol\":19175:19200  _rOwned[_owner] = _rTotal */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":19211:19237  _mint(msg.sender, _rTotal) */\n  tag_22\n  swap1\n    /* \"CYBCC.sol\":19217:19227  msg.sender */\n  caller\n  swap1\n    /* \"CYBCC.sol\":19211:19216  _mint */\n  tag_23\n    /* \"CYBCC.sol\":19211:19237  _mint(msg.sender, _rTotal) */\n  jump\t// in\ntag_22:\n    /* \"CYBCC.sol\":17775:30422  contract CYBCC is ERC20 {... */\n  jump(tag_53)\n    /* \"CYBCC.sol\":14115:14323  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":14185:14206  account == address(0) */\n  dup3\n  and\n    /* \"CYBCC.sol\":14181:14272  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"CYBCC.sol\":14229:14261  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"CYBCC.sol\":14258:14259  0 */\n  0x00\n    /* \"CYBCC.sol\":14229:14261  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5067:5118   */\n  mstore\n    /* \"#utility.yul\":5040:5058   */\n  0x24\n  add\n    /* \"CYBCC.sol\":14229:14261  ERC20InvalidReceiver(address(0)) */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"CYBCC.sol\":14181:14272  if (account == address(0)) {... */\ntag_27:\n    /* \"CYBCC.sol\":14281:14316  _update(address(0), account, value) */\n  tag_30\n    /* \"CYBCC.sol\":14297:14298  0 */\n  0x00\n    /* \"CYBCC.sol\":14301:14308  account */\n  dup4\n    /* \"CYBCC.sol\":14310:14315  value */\n  dup4\n    /* \"CYBCC.sol\":14281:14288  _update */\n  tag_31\n    /* \"CYBCC.sol\":14281:14316  _update(address(0), account, value) */\n  jump\t// in\ntag_30:\n    /* \"CYBCC.sol\":14115:14323  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"CYBCC.sol\":12635:13772  function _update(... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":12754:12772  from == address(0) */\n  dup4\n  and\n    /* \"CYBCC.sol\":12750:13290  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"CYBCC.sol\":12906:12911  value */\n  dup1\n    /* \"CYBCC.sol\":12890:12902  _totalSupply */\n  0x02\n  0x00\n    /* \"CYBCC.sol\":12890:12911  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"CYBCC.sol\":12750:13290  if (from == address(0)) {... */\n  tag_36\n  swap1\n  pop\n  jump\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":12964:12979  _balances[from] */\n  dup4\n  and\n    /* \"CYBCC.sol\":12942:12961  uint256 fromBalance */\n  0x00\n    /* \"CYBCC.sol\":12964:12979  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"CYBCC.sol\":12997:13016  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"CYBCC.sol\":12993:13108  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"CYBCC.sol\":13043:13093  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5479:5511   */\n  dup6\n  and\n    /* \"CYBCC.sol\":13043:13093  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5461:5512   */\n  mstore\n    /* \"#utility.yul\":5528:5546   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5521:5555   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5571:5589   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5564:5598   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5434:5452   */\n  0x64\n  add\n    /* \"CYBCC.sol\":13043:13093  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_28\n    /* \"#utility.yul\":5259:5604   */\n  jump\n    /* \"CYBCC.sol\":12993:13108  if (fromBalance < value) {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":13228:13243  _balances[from] */\n  dup5\n  and\n    /* \"CYBCC.sol\":13228:13237  _balances */\n  0x00\n    /* \"CYBCC.sol\":13228:13243  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"CYBCC.sol\":13246:13265  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"CYBCC.sol\":13228:13265  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"CYBCC.sol\":12750:13290  if (from == address(0)) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":13304:13320  to == address(0) */\n  dup3\n  and\n    /* \"CYBCC.sol\":13300:13725  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"CYBCC.sol\":13467:13479  _totalSupply */\n  0x02\n    /* \"CYBCC.sol\":13467:13488  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"CYBCC.sol\":13300:13725  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":13678:13691  _balances[to] */\n  dup3\n  and\n    /* \"CYBCC.sol\":13678:13687  _balances */\n  0x00\n    /* \"CYBCC.sol\":13678:13691  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"CYBCC.sol\":13678:13700  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"CYBCC.sol\":13300:13725  if (to == address(0)) {... */\ntag_41:\n    /* \"CYBCC.sol\":13755:13757  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":13740:13765  Transfer(from, to, value) */\n  and\n    /* \"CYBCC.sol\":13749:13753  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":13740:13765  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"CYBCC.sol\":13759:13764  value */\n  dup4\n    /* \"CYBCC.sol\":13740:13765  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n    /* \"#utility.yul\":5755:5780   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5743:5745   */\n  0x20\n    /* \"#utility.yul\":5728:5746   */\n  add\n  swap1\n    /* \"#utility.yul\":5609:5786   */\n  jump\n    /* \"CYBCC.sol\":13740:13765  Transfer(from, to, value) */\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"CYBCC.sol\":12635:13772  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_44:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_45:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_56:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_57:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_47:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_61\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_61:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_62:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_60:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_6:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_68\n  tag_44\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1582:1679   */\n  tag_69\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_70\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_45\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_47\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_73:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_64)\n    /* \"#utility.yul\":1810:2473   */\ntag_72:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_76:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_79:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_49:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_50:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_82:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_86\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_87:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_51:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_89\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_88)\n    /* \"#utility.yul\":3363:3443   */\ntag_89:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_90\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_88)\n    /* \"#utility.yul\":3452:3528   */\ntag_90:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_91)\n    /* \"#utility.yul\":3557:3616   */\ntag_92:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_88)\n    /* \"#utility.yul\":3625:3755   */\ntag_93:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_95\n  tag_49\n  jump\t// in\ntag_95:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_88)\n    /* \"#utility.yul\":3537:3755   */\ntag_91:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_96\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_88)\n    /* \"#utility.yul\":3764:3923   */\ntag_96:\n    /* \"#utility.yul\":3955:3989   */\n  tag_97\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_99\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3294:4100   */\ntag_88:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4236   */\ntag_10:\n    /* \"#utility.yul\":4165:4170   */\n  0x00\n    /* \"#utility.yul\":4194:4230   */\n  tag_101\n    /* \"#utility.yul\":4221:4229   */\n  dup4\n    /* \"#utility.yul\":4215:4219   */\n  dup4\n    /* \"#utility.yul\":4194:4230   */\n  tag_51\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4185:4230   */\n  swap4\n    /* \"#utility.yul\":4105:4236   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4241:4409   */\ntag_12:\n    /* \"#utility.yul\":4314:4323   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4345:4354   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4362:4377   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4356:4378   */\n  dup5\n  eq\n    /* \"#utility.yul\":4342:4379   */\n  or\n    /* \"#utility.yul\":4332:4403   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4383:4401   */\n  tag_88\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":4414:4541   */\ntag_52:\n    /* \"#utility.yul\":4475:4485   */\n  0x4e487b71\n    /* \"#utility.yul\":4470:4473   */\n  0xe0\n    /* \"#utility.yul\":4466:4486   */\n  shl\n    /* \"#utility.yul\":4463:4464   */\n  0x00\n    /* \"#utility.yul\":4456:4487   */\n  mstore\n    /* \"#utility.yul\":4506:4510   */\n  0x12\n    /* \"#utility.yul\":4503:4504   */\n  0x04\n    /* \"#utility.yul\":4496:4511   */\n  mstore\n    /* \"#utility.yul\":4530:4534   */\n  0x24\n    /* \"#utility.yul\":4527:4528   */\n  0x00\n    /* \"#utility.yul\":4520:4535   */\n  revert\n    /* \"#utility.yul\":4546:4658   */\ntag_14:\n    /* \"#utility.yul\":4578:4579   */\n  0x00\n    /* \"#utility.yul\":4604:4605   */\n  dup3\n    /* \"#utility.yul\":4594:4629   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4609:4627   */\n  tag_108\n  tag_52\n  jump\t// in\ntag_108:\n  pop\n    /* \"#utility.yul\":4643:4652   */\n  mod\n  swap1\n    /* \"#utility.yul\":4546:4658   */\n  jump\t// out\n    /* \"#utility.yul\":4663:4791   */\ntag_16:\n    /* \"#utility.yul\":4730:4739   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":4751:4762   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":4748:4785   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4765:4783   */\n  tag_88\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":4796:4916   */\ntag_18:\n    /* \"#utility.yul\":4836:4837   */\n  0x00\n    /* \"#utility.yul\":4862:4863   */\n  dup3\n    /* \"#utility.yul\":4852:4887   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4867:4885   */\n  tag_114\n  tag_52\n  jump\t// in\ntag_114:\n  pop\n    /* \"#utility.yul\":4901:4910   */\n  div\n  swap1\n    /* \"#utility.yul\":4796:4916   */\n  jump\t// out\n    /* \"#utility.yul\":5129:5254   */\ntag_35:\n    /* \"#utility.yul\":5194:5203   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5215:5225   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5212:5248   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":5228:5246   */\n  tag_88\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":5609:5786   */\ntag_53:\n    /* \"CYBCC.sol\":17775:30422  contract CYBCC is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CYBCC.sol\":17775:30422  contract CYBCC is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfdeb889f\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd12dc1c1\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x8873b15f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8873b15f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa8b08982\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x83ad7994\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x32035504\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5342acb4\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c7ffc88\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6049876e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x60c3ae84\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x32035504\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x053ab182\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CYBCC.sol\":20832:21241  function reflect(uint256 tAmount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"CYBCC.sol\":8274:8363  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CYBCC.sol\":10529:10743  function approve(address spender, uint256 value)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":1354:1368   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1347:1369   */\n      iszero\n        /* \"#utility.yul\":1329:1370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1317:1319   */\n      0x20\n        /* \"#utility.yul\":1302:1320   */\n      add\n        /* \"CYBCC.sol\":10529:10743  function approve(address spender, uint256 value)... */\n      tag_46\n        /* \"#utility.yul\":1189:1376   */\n      jump\n        /* \"CYBCC.sol\":19552:19653  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n        /* \"CYBCC.sol\":19639:19646  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":19552:19653  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1527:1552   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"CYBCC.sol\":19552:19653  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_46\n        /* \"#utility.yul\":1381:1558   */\n      jump\n        /* \"CYBCC.sol\":11335:11609  function transferFrom(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_49\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"CYBCC.sol\":19448:19546  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n        /* \"CYBCC.sol\":19530:19539  _decimals */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19448:19546  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"CYBCC.sol\":19530:19539  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2038:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2011:2029   */\n      add\n        /* \"CYBCC.sol\":19448:19546  function decimals() public view virtual override returns (uint8) {... */\n      tag_46\n        /* \"#utility.yul\":1896:2080   */\n      jump\n        /* \"CYBCC.sol\":20498:20596  function totalFeesRedistributed() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n        /* \"CYBCC.sol\":20579:20589  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":20498:20596  function totalFeesRedistributed() public view returns (uint256) {... */\n      jump(tag_56)\n        /* \"CYBCC.sol\":20602:20711  function excludeFromFee(address account) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_39\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"CYBCC.sol\":21247:21724  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_56\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"CYBCC.sol\":19982:20104  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_49\n      tag_88\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      and\n        /* \"CYBCC.sol\":20047:20051  bool */\n      0x00\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20070:20088  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":19982:20104  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":22870:22947  function enableAntiWhale() public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_39\n      tag_93\n      jump\t// in\n        /* \"CYBCC.sol\":22047:22382  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_39\n      tag_96\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"CYBCC.sol\":22953:23031  function disbleAntiWhale() public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_39\n      tag_100\n      jump\t// in\n        /* \"CYBCC.sol\":20110:20378  function balanceOf(address sender)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_56\n      tag_103\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"CYBCC.sol\":29685:29827  function renounceOwnership() public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_39\n      tag_108\n      jump\t// in\n        /* \"CYBCC.sol\":19659:19752  function reflectionFee() public view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n        /* \"CYBCC.sol\":19731:19745  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":19659:19752  function reflectionFee() public view returns (uint256) {... */\n      jump(tag_56)\n        /* \"CYBCC.sol\":20717:20826  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_39\n      tag_115\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"CYBCC.sol\":19285:19370  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":19285:19370  function owner() public view virtual returns (address) {... */\n    tag_118:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2786:2818   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2768:2819   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2756:2758   */\n      0x20\n        /* \"#utility.yul\":2741:2759   */\n      add\n        /* \"CYBCC.sol\":19285:19370  function owner() public view virtual returns (address) {... */\n      tag_46\n        /* \"#utility.yul\":2622:2825   */\n      jump\n        /* \"CYBCC.sol\":8476:8569  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_44\n      tag_124\n      jump\t// in\n        /* \"CYBCC.sol\":18470:18496  address public pairAddress */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      sload(0x13)\n      tag_118\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"CYBCC.sol\":9810:9988  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_49\n      tag_132\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"CYBCC.sol\":20384:20492  function isExcluded(address account) public view returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_49\n      tag_137\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20465:20485  _isExcluded[account] */\n      and\n        /* \"CYBCC.sol\":20442:20446  bool */\n      0x00\n        /* \"CYBCC.sol\":20465:20485  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20465:20476  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":20465:20485  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":20384:20492  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":19846:19976  function getMarketingAndDevelopmentAccount() public view returns (address) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n        /* \"CYBCC.sol\":19938:19969  _marketingAndDevelopmentAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"CYBCC.sol\":19846:19976  function getMarketingAndDevelopmentAccount() public view returns (address) {... */\n      jump(tag_118)\n        /* \"CYBCC.sol\":10046:10222  function allowance(address owner, address spender)... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_56\n      tag_146\n      calldatasize\n      0x04\n      tag_147\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"CYBCC.sol\":10158:10165  uint256 */\n      0x00\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10188:10199  _allowances */\n      0x01\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":10188:10215  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"CYBCC.sol\":10046:10222  function allowance(address owner, address spender)... */\n      jump\n        /* \"CYBCC.sol\":29833:29929  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_39\n      tag_152\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"CYBCC.sol\":19758:19840  function getTaxFee() public view returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n        /* \"CYBCC.sol\":19826:19833  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":19758:19840  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_56)\n        /* \"CYBCC.sol\":22388:22864  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_39\n      tag_160\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"CYBCC.sol\":20832:21241  function reflect(uint256 tAmount) public {... */\n    tag_42:\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      caller\n        /* \"CYBCC.sol\":20883:20897  address sender */\n      0x00\n        /* \"CYBCC.sol\":20945:20964  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20945:20956  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":20945:20964  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":20944:20964  !_isExcluded[sender] */\n      iszero\n        /* \"CYBCC.sol\":20923:21034  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3297:3299   */\n      0x20\n        /* \"CYBCC.sol\":20923:21034  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3279:3300   */\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x2c\n        /* \"#utility.yul\":3316:3334   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3309:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3409   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":3355:3373   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3348:3410   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3426:3444   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3419:3461   */\n      mstore\n        /* \"#utility.yul\":3478:3497   */\n      0x84\n      add\n        /* \"CYBCC.sol\":20923:21034  require(... */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"CYBCC.sol\":21046:21061  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":21071:21098  _getTransferValues(tAmount) */\n      tag_168\n        /* \"CYBCC.sol\":21090:21097  tAmount */\n      dup4\n        /* \"CYBCC.sol\":21071:21089  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":21071:21098  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_168:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":21127:21142  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":21127:21134  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":21127:21142  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":21045:21098  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":21127:21152  _rOwned[sender] - rAmount */\n      tag_170\n      swap1\n        /* \"CYBCC.sol\":21045:21098  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":21127:21152  _rOwned[sender] - rAmount */\n      tag_171\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":21109:21124  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":21109:21116  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":21109:21124  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":21109:21152  _rOwned[sender] = _rOwned[sender] - rAmount */\n      sstore\n        /* \"CYBCC.sol\":21173:21180  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":21173:21190  _rTotal - rAmount */\n      tag_172\n      swap1\n        /* \"CYBCC.sol\":21183:21190  rAmount */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":21173:21190  _rTotal - rAmount */\n      tag_171\n      jump\t// in\n    tag_172:\n        /* \"CYBCC.sol\":21163:21170  _rTotal */\n      0x0c\n        /* \"CYBCC.sol\":21163:21190  _rTotal = _rTotal - rAmount */\n      sstore\n        /* \"CYBCC.sol\":21214:21224  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":21214:21234  _tFeeTotal + tAmount */\n      tag_173\n      swap1\n        /* \"CYBCC.sol\":21227:21234  tAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":21214:21234  _tFeeTotal + tAmount */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"CYBCC.sol\":21201:21211  _tFeeTotal */\n      0x0d\n        /* \"CYBCC.sol\":21201:21234  _tFeeTotal = _tFeeTotal + tAmount */\n      sstore\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":20832:21241  function reflect(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"CYBCC.sol\":8274:8363  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"CYBCC.sol\":8319:8332  string memory */\n      0x60\n        /* \"CYBCC.sol\":8351:8356  _name */\n      0x03\n        /* \"CYBCC.sol\":8344:8356  return _name */\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_177\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"CYBCC.sol\":8274:8363  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"CYBCC.sol\":10529:10743  function approve(address spender, uint256 value)... */\n    tag_52:\n        /* \"CYBCC.sol\":10626:10630  bool */\n      0x00\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      caller\n        /* \"CYBCC.sol\":10684:10715  _approve(owner, spender, value) */\n      tag_184\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      dup2\n        /* \"CYBCC.sol\":10700:10707  spender */\n      dup6\n        /* \"CYBCC.sol\":10709:10714  value */\n      dup6\n        /* \"CYBCC.sol\":10684:10692  _approve */\n      tag_185\n        /* \"CYBCC.sol\":10684:10715  _approve(owner, spender, value) */\n      jump\t// in\n    tag_184:\n        /* \"CYBCC.sol\":10732:10736  true */\n      0x01\n        /* \"CYBCC.sol\":10725:10736  return true */\n      swap2\n      pop\n      pop\n        /* \"CYBCC.sol\":10529:10743  function approve(address spender, uint256 value)... */\n    tag_182:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":11335:11609  function transferFrom(... */\n    tag_64:\n        /* \"CYBCC.sol\":11452:11456  bool */\n      0x00\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      caller\n        /* \"CYBCC.sol\":11508:11545  _spendAllowance(from, spender, value) */\n      tag_189\n        /* \"CYBCC.sol\":11524:11528  from */\n      dup6\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      dup3\n        /* \"CYBCC.sol\":11539:11544  value */\n      dup6\n        /* \"CYBCC.sol\":11508:11523  _spendAllowance */\n      tag_190\n        /* \"CYBCC.sol\":11508:11545  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_189:\n        /* \"CYBCC.sol\":11555:11581  _transfer(from, to, value) */\n      tag_191\n        /* \"CYBCC.sol\":11565:11569  from */\n      dup6\n        /* \"CYBCC.sol\":11571:11573  to */\n      dup6\n        /* \"CYBCC.sol\":11575:11580  value */\n      dup6\n        /* \"CYBCC.sol\":11555:11564  _transfer */\n      tag_192\n        /* \"CYBCC.sol\":11555:11581  _transfer(from, to, value) */\n      jump\t// in\n    tag_191:\n      pop\n        /* \"CYBCC.sol\":11598:11602  true */\n      0x01\n      swap5\n        /* \"CYBCC.sol\":11335:11609  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":20602:20711  function excludeFromFee(address account) public onlyOwner {... */\n    tag_79:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_197\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20670:20697  _isExcludedFromFee[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20670:20688  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":20670:20697  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":20670:20704  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":20700:20704  true */\n      0x01\n        /* \"CYBCC.sol\":20670:20704  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n    tag_197:\n        /* \"CYBCC.sol\":20602:20711  function excludeFromFee(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":21247:21724  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_84:\n        /* \"CYBCC.sol\":21362:21369  uint256 */\n      0x00\n        /* \"CYBCC.sol\":21404:21411  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":21393:21400  tAmount */\n      dup4\n        /* \"CYBCC.sol\":21393:21411  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":21385:21447  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4490:4492   */\n      0x20\n        /* \"CYBCC.sol\":21385:21447  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4472:4493   */\n      mstore\n        /* \"#utility.yul\":4529:4531   */\n      0x1f\n        /* \"#utility.yul\":4509:4527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4502:4532   */\n      mstore\n        /* \"#utility.yul\":4568:4601   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":4548:4566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4541:4602   */\n      mstore\n        /* \"#utility.yul\":4619:4637   */\n      0x64\n      add\n        /* \"CYBCC.sol\":21385:21447  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_166\n        /* \"#utility.yul\":4288:4643   */\n      jump\n        /* \"CYBCC.sol\":21385:21447  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n    tag_200:\n        /* \"CYBCC.sol\":21463:21480  deductTransferFee */\n      dup2\n        /* \"CYBCC.sol\":21458:21718  if (!deductTransferFee) {... */\n      tag_203\n      jumpi\n        /* \"CYBCC.sol\":21497:21512  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":21522:21549  _getTransferValues(tAmount) */\n      tag_204\n        /* \"CYBCC.sol\":21541:21548  tAmount */\n      dup5\n        /* \"CYBCC.sol\":21522:21540  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":21522:21549  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"CYBCC.sol\":21496:21549  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap2\n      swap4\n      pop\n        /* \"CYBCC.sol\":21564:21578  return rAmount */\n      tag_182\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":21458:21718  if (!deductTransferFee) {... */\n    tag_203:\n        /* \"CYBCC.sol\":21612:21635  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":21643:21670  _getTransferValues(tAmount) */\n      tag_206\n        /* \"CYBCC.sol\":21662:21669  tAmount */\n      dup5\n        /* \"CYBCC.sol\":21643:21661  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":21643:21670  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_206:\n      pop\n        /* \"CYBCC.sol\":21609:21670  (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount) */\n      swap1\n      swap4\n      pop\n        /* \"CYBCC.sol\":21685:21707  return rTransferAmount */\n      tag_182\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":22870:22947  function enableAntiWhale() public onlyOwner {... */\n    tag_93:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_210\n      jumpi\n        /* \"CYBCC.sol\":22924:22933  antiWhale */\n      0x15\n        /* \"CYBCC.sol\":22924:22940  antiWhale = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":22936:22940  true */\n      0x01\n        /* \"CYBCC.sol\":22924:22940  antiWhale = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n    tag_210:\n        /* \"CYBCC.sol\":22870:22947  function enableAntiWhale() public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":22047:22382  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_97:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_197\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22134:22154  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22134:22145  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":22134:22154  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":22133:22154  !_isExcluded[account] */\n      iszero\n        /* \"CYBCC.sol\":22125:22186  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4850:4852   */\n      0x20\n        /* \"CYBCC.sol\":22125:22186  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4832:4853   */\n      mstore\n        /* \"#utility.yul\":4889:4891   */\n      0x1b\n        /* \"#utility.yul\":4869:4887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4862:4892   */\n      mstore\n        /* \"#utility.yul\":4928:4957   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":4908:4926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4901:4958   */\n      mstore\n        /* \"#utility.yul\":4975:4993   */\n      0x64\n      add\n        /* \"CYBCC.sol\":22125:22186  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_166\n        /* \"#utility.yul\":4648:4999   */\n      jump\n        /* \"CYBCC.sol\":22125:22186  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22201:22217  _rOwned[account] */\n      dup2\n      and\n        /* \"CYBCC.sol\":22220:22221  0 */\n      0x00\n        /* \"CYBCC.sol\":22201:22217  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22201:22208  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":22201:22217  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":22201:22221  _rOwned[account] > 0 */\n      iszero\n        /* \"CYBCC.sol\":22197:22304  if (_rOwned[account] > 0) {... */\n      tag_219\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22276:22292  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22276:22283  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":22276:22292  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":22256:22293  tokenFromReflection(_rOwned[account]) */\n      tag_220\n      swap1\n        /* \"CYBCC.sol\":22256:22275  tokenFromReflection */\n      tag_221\n        /* \"CYBCC.sol\":22256:22293  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22237:22253  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22237:22244  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":22237:22253  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":22237:22293  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"CYBCC.sol\":22197:22304  if (_rOwned[account] > 0) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22314:22334  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22314:22325  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":22314:22334  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CYBCC.sol\":22314:22341  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":22337:22341  true */\n      0x01\n        /* \"CYBCC.sol\":22314:22341  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CYBCC.sol\":22352:22361  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22352:22375  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22047:22382  function excludeAccountFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":22953:23031  function disbleAntiWhale() public onlyOwner {... */\n    tag_100:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_210\n      jumpi\n        /* \"CYBCC.sol\":23007:23016  antiWhale */\n      0x15\n        /* \"CYBCC.sol\":23007:23024  antiWhale = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22953:23031  function disbleAntiWhale() public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":20110:20378  function balanceOf(address sender)... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20250:20269  _isExcluded[sender] */\n      dup2\n      and\n        /* \"CYBCC.sol\":20223:20230  uint256 */\n      0x00\n        /* \"CYBCC.sol\":20250:20269  _isExcluded[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20250:20261  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":20250:20269  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":20246:20318  if (_isExcluded[sender]) {... */\n      iszero\n      tag_228\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20292:20307  _tOwned[sender] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20292:20299  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":20292:20307  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"CYBCC.sol\":20110:20378  function balanceOf(address sender)... */\n      jump\t// out\n        /* \"CYBCC.sol\":20246:20318  if (_isExcluded[sender]) {... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20355:20370  _rOwned[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20355:20362  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":20355:20370  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":20335:20371  tokenFromReflection(_rOwned[sender]) */\n      tag_182\n      swap1\n        /* \"CYBCC.sol\":20335:20354  tokenFromReflection */\n      tag_221\n        /* \"CYBCC.sol\":20335:20371  tokenFromReflection(_rOwned[sender]) */\n      jump\t// in\n        /* \"CYBCC.sol\":29685:29827  function renounceOwnership() public onlyOwner {... */\n    tag_108:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_210\n      jumpi\n        /* \"CYBCC.sol\":29749:29755  _owner */\n      sload(0x0a)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":29741:29791  require(_owner != address(0), \"already renounced\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"CYBCC.sol\":29741:29791  require(_owner != address(0), \"already renounced\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5188:5209   */\n      mstore\n        /* \"#utility.yul\":5245:5247   */\n      0x11\n        /* \"#utility.yul\":5225:5243   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5218:5248   */\n      mstore\n      shl(0x7a, 0x185b1c9958591e481c995b9bdd5b98d959)\n        /* \"#utility.yul\":5264:5282   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5257:5304   */\n      mstore\n        /* \"#utility.yul\":5321:5339   */\n      0x64\n      add\n        /* \"CYBCC.sol\":29741:29791  require(_owner != address(0), \"already renounced\") */\n      tag_166\n        /* \"#utility.yul\":5004:5345   */\n      jump\n        /* \"CYBCC.sol\":29741:29791  require(_owner != address(0), \"already renounced\") */\n    tag_234:\n        /* \"CYBCC.sol\":29801:29807  _owner */\n      0x0a\n        /* \"CYBCC.sol\":29801:29820  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":29685:29827  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":20717:20826  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_116:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_197\n      jumpi\n        /* \"CYBCC.sol\":20793:20804  pairAddress */\n      0x13\n        /* \"CYBCC.sol\":20793:20819  pairAddress = _pairAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":20717:20826  function changePairAddress(address _pairAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":8476:8569  function symbol() public view virtual returns (string memory) {... */\n    tag_124:\n        /* \"CYBCC.sol\":8523:8536  string memory */\n      0x60\n        /* \"CYBCC.sol\":8555:8562  _symbol */\n      0x04\n        /* \"CYBCC.sol\":8548:8562  return _symbol */\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n        /* \"CYBCC.sol\":9810:9988  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_133:\n        /* \"CYBCC.sol\":9879:9883  bool */\n      0x00\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      caller\n        /* \"CYBCC.sol\":9933:9960  _transfer(owner, to, value) */\n      tag_184\n        /* \"CYBCC.sol\":4366:4376  msg.sender */\n      dup2\n        /* \"CYBCC.sol\":9950:9952  to */\n      dup6\n        /* \"CYBCC.sol\":9954:9959  value */\n      dup6\n        /* \"CYBCC.sol\":9933:9942  _transfer */\n      tag_192\n        /* \"CYBCC.sol\":9933:9960  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":29833:29929  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_153:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_197\n      jumpi\n        /* \"CYBCC.sol\":29905:29911  _owner */\n      0x0a\n        /* \"CYBCC.sol\":29905:29922  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":29833:29929  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":22388:22864  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_161:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":19422:19432  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":19411:19432  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":19407:19435  if (owner() == msg.sender) _ */\n      tag_197\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22472:22492  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22472:22483  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":22472:22492  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":22464:22524  require(_isExcluded[account], \"Account is already included\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"CYBCC.sol\":22464:22524  require(_isExcluded[account], \"Account is already included\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x1b\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5659   */\n      0x4163636f756e7420697320616c726561647920696e636c756465640000000000\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5660   */\n      mstore\n        /* \"#utility.yul\":5677:5695   */\n      0x64\n      add\n        /* \"CYBCC.sol\":22464:22524  require(_isExcluded[account], \"Account is already included\") */\n      tag_166\n        /* \"#utility.yul\":5350:5701   */\n      jump\n        /* \"CYBCC.sol\":22464:22524  require(_isExcluded[account], \"Account is already included\") */\n    tag_264:\n        /* \"CYBCC.sol\":22540:22549  uint256 i */\n      0x00\n        /* \"CYBCC.sol\":22535:22858  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_267:\n        /* \"CYBCC.sol\":22559:22568  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22559:22575  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":22555:22575  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":22535:22858  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"CYBCC.sol\":22616:22623  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22600:22623  _excluded[i] == account */\n      and\n        /* \"CYBCC.sol\":22600:22609  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22610:22611  i */\n      dup3\n        /* \"CYBCC.sol\":22600:22612  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":22600:22623  _excluded[i] == account */\n      sub\n        /* \"CYBCC.sol\":22596:22848  if (_excluded[i] == account) {... */\n      tag_274\n      jumpi\n        /* \"CYBCC.sol\":22658:22667  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22668:22684  _excluded.length */\n      dup1\n      sload\n        /* \"CYBCC.sol\":22668:22688  _excluded.length - 1 */\n      tag_275\n      swap1\n        /* \"CYBCC.sol\":22687:22688  1 */\n      0x01\n      swap1\n        /* \"CYBCC.sol\":22668:22688  _excluded.length - 1 */\n      tag_171\n      jump\t// in\n    tag_275:\n        /* \"CYBCC.sol\":22658:22689  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_277\n      tag_272\n      jump\t// in\n    tag_277:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"CYBCC.sol\":22643:22652  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22643:22655  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":22658:22689  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"CYBCC.sol\":22653:22654  i */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":22643:22655  _excluded[i] */\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_280\n      tag_272\n      jump\t// in\n    tag_280:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"CYBCC.sol\":22643:22689  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22708:22724  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":22708:22715  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":22708:22724  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":22708:22728  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22747:22758  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":22747:22767  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"CYBCC.sol\":22747:22775  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22794:22803  _excluded */\n      0x09\n        /* \"CYBCC.sol\":22794:22809  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_283\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"CYBCC.sol\":22535:22858  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"CYBCC.sol\":22388:22864  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":22596:22848  if (_excluded[i] == account) {... */\n    tag_274:\n        /* \"CYBCC.sol\":22577:22580  i++ */\n      dup1\n      tag_286\n      dup2\n      tag_287\n      jump\t// in\n    tag_286:\n      swap2\n      pop\n      pop\n        /* \"CYBCC.sol\":22535:22858  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_267)\n    tag_268:\n      pop\n        /* \"CYBCC.sol\":22388:22864  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":28064:28606  function _getTransferValues(uint256 tAmount)... */\n    tag_169:\n        /* \"CYBCC.sol\":28168:28175  uint256 */\n      0x00\n        /* \"CYBCC.sol\":28189:28196  uint256 */\n      dup1\n        /* \"CYBCC.sol\":28210:28217  uint256 */\n      0x00\n        /* \"CYBCC.sol\":28231:28238  uint256 */\n      dup1\n        /* \"CYBCC.sol\":28263:28279  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":28282:28311  _getCompleteTaxValue(tAmount) */\n      tag_290\n        /* \"CYBCC.sol\":28303:28310  tAmount */\n      dup7\n        /* \"CYBCC.sol\":28282:28302  _getCompleteTaxValue */\n      tag_291\n        /* \"CYBCC.sol\":28282:28311  _getCompleteTaxValue(tAmount) */\n      jump\t// in\n    tag_290:\n        /* \"CYBCC.sol\":28263:28311  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28322:28345  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":28348:28366  tAmount - taxValue */\n      tag_292\n        /* \"CYBCC.sol\":28263:28311  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      dup3\n        /* \"CYBCC.sol\":28348:28355  tAmount */\n      dup9\n        /* \"CYBCC.sol\":28348:28366  tAmount - taxValue */\n      tag_171\n      jump\t// in\n    tag_292:\n        /* \"CYBCC.sol\":28322:28366  uint256 tTransferAmount = tAmount - taxValue */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28377:28396  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":28399:28409  _getRate() */\n      tag_293\n        /* \"CYBCC.sol\":28399:28407  _getRate */\n      tag_294\n        /* \"CYBCC.sol\":28399:28409  _getRate() */\n      jump\t// in\n    tag_293:\n        /* \"CYBCC.sol\":28377:28409  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28420:28443  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":28446:28475  tTransferAmount * currentRate */\n      tag_295\n        /* \"CYBCC.sol\":28377:28409  uint256 currentRate = _getRate() */\n      dup3\n        /* \"CYBCC.sol\":28446:28461  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":28446:28475  tTransferAmount * currentRate */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"CYBCC.sol\":28420:28475  uint256 rTransferAmount = tTransferAmount * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28486:28501  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":28504:28525  tAmount * currentRate */\n      tag_297\n        /* \"CYBCC.sol\":28514:28525  currentRate */\n      dup4\n        /* \"CYBCC.sol\":28504:28511  tAmount */\n      dup12\n        /* \"CYBCC.sol\":28504:28525  tAmount * currentRate */\n      tag_296\n      jump\t// in\n    tag_297:\n        /* \"CYBCC.sol\":28486:28525  uint256 rAmount = tAmount * currentRate */\n      swap11\n        /* \"CYBCC.sol\":28553:28568  rTransferAmount */\n      swap2\n      swap10\n      pop\n        /* \"CYBCC.sol\":28570:28585  tTransferAmount */\n      swap3\n      swap8\n      pop\n        /* \"CYBCC.sol\":28587:28598  currentRate */\n      swap1\n      swap6\n      pop\n        /* \"CYBCC.sol\":28064:28606  function _getTransferValues(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":15383:15541  function _approve(... */\n    tag_185:\n        /* \"CYBCC.sol\":15497:15534  _approve(owner, spender, value, true) */\n      tag_299\n        /* \"CYBCC.sol\":15506:15511  owner */\n      dup4\n        /* \"CYBCC.sol\":15513:15520  spender */\n      dup4\n        /* \"CYBCC.sol\":15522:15527  value */\n      dup4\n        /* \"CYBCC.sol\":15529:15533  true */\n      0x01\n        /* \"CYBCC.sol\":15497:15505  _approve */\n      tag_300\n        /* \"CYBCC.sol\":15497:15534  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_299:\n        /* \"CYBCC.sol\":15383:15541  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":17140:17724  function _spendAllowance(... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"CYBCC.sol\":17269:17293  uint256 currentAllowance */\n      0x00\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10188:10199  _allowances */\n      0x01\n        /* \"CYBCC.sol\":10188:10206  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":10188:10215  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"CYBCC.sol\":17335:17371  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"CYBCC.sol\":17331:17718  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"CYBCC.sol\":17410:17415  value */\n      dup2\n        /* \"CYBCC.sol\":17391:17407  currentAllowance */\n      dup2\n        /* \"CYBCC.sol\":17391:17415  currentAllowance < value */\n      lt\n        /* \"CYBCC.sol\":17387:17595  if (currentAllowance < value) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"CYBCC.sol\":17442:17580  ERC20InsufficientAllowance(... */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6503:6535   */\n      dup5\n      and\n        /* \"CYBCC.sol\":17442:17580  ERC20InsufficientAllowance(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6485:6536   */\n      mstore\n        /* \"#utility.yul\":6552:6570   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6545:6579   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6595:6613   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6588:6622   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x64\n      add\n        /* \"CYBCC.sol\":17442:17580  ERC20InsufficientAllowance(... */\n      tag_166\n        /* \"#utility.yul\":6283:6628   */\n      jump\n        /* \"CYBCC.sol\":17387:17595  if (currentAllowance < value) {... */\n    tag_304:\n        /* \"CYBCC.sol\":17636:17693  _approve(owner, spender, currentAllowance - value, false) */\n      tag_307\n        /* \"CYBCC.sol\":17645:17650  owner */\n      dup5\n        /* \"CYBCC.sol\":17652:17659  spender */\n      dup5\n        /* \"CYBCC.sol\":17680:17685  value */\n      dup5\n        /* \"CYBCC.sol\":17661:17677  currentAllowance */\n      dup5\n        /* \"CYBCC.sol\":17661:17685  currentAllowance - value */\n      sub\n        /* \"CYBCC.sol\":17687:17692  false */\n      0x00\n        /* \"CYBCC.sol\":17636:17644  _approve */\n      tag_300\n        /* \"CYBCC.sol\":17636:17693  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_307:\n        /* \"CYBCC.sol\":17259:17724  {... */\n      pop\n        /* \"CYBCC.sol\":17140:17724  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":23037:24017  function _transfer(... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23181:23201  sender != address(0) */\n      dup4\n      and\n        /* \"CYBCC.sol\":23173:23243  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6835:6837   */\n      0x20\n        /* \"CYBCC.sol\":23173:23243  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6817:6838   */\n      mstore\n        /* \"#utility.yul\":6874:6876   */\n      0x25\n        /* \"#utility.yul\":6854:6872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6847:6877   */\n      mstore\n        /* \"#utility.yul\":6913:6947   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6893:6911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6886:6948   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6964:6982   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6957:6992   */\n      mstore\n        /* \"#utility.yul\":7009:7028   */\n      0x84\n      add\n        /* \"CYBCC.sol\":23173:23243  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_166\n        /* \"#utility.yul\":6633:7034   */\n      jump\n        /* \"CYBCC.sol\":23173:23243  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23262:23285  recipient != address(0) */\n      dup3\n      and\n        /* \"CYBCC.sol\":23254:23325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"CYBCC.sol\":23254:23325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7223:7244   */\n      mstore\n        /* \"#utility.yul\":7280:7282   */\n      0x23\n        /* \"#utility.yul\":7260:7278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7253:7283   */\n      mstore\n        /* \"#utility.yul\":7319:7353   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7299:7317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7292:7354   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7370:7388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7363:7396   */\n      mstore\n        /* \"#utility.yul\":7413:7432   */\n      0x84\n      add\n        /* \"CYBCC.sol\":23254:23325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_166\n        /* \"#utility.yul\":7039:7438   */\n      jump\n        /* \"CYBCC.sol\":23254:23325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_312:\n        /* \"CYBCC.sol\":23336:23357  uint256 senderBalance */\n      0x00\n        /* \"CYBCC.sol\":23360:23377  balanceOf(sender) */\n      tag_315\n        /* \"CYBCC.sol\":23370:23376  sender */\n      dup5\n        /* \"CYBCC.sol\":23360:23369  balanceOf */\n      tag_104\n        /* \"CYBCC.sol\":23360:23377  balanceOf(sender) */\n      jump\t// in\n    tag_315:\n        /* \"CYBCC.sol\":23336:23377  uint256 senderBalance = balanceOf(sender) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":23426:23432  amount */\n      dup2\n        /* \"CYBCC.sol\":23409:23422  senderBalance */\n      dup2\n        /* \"CYBCC.sol\":23409:23432  senderBalance >= amount */\n      lt\n      iszero\n        /* \"CYBCC.sol\":23388:23496  require(... */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7645:7647   */\n      0x20\n        /* \"CYBCC.sol\":23388:23496  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7627:7648   */\n      mstore\n        /* \"#utility.yul\":7684:7686   */\n      0x26\n        /* \"#utility.yul\":7664:7682   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7657:7687   */\n      mstore\n        /* \"#utility.yul\":7723:7757   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7703:7721   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7696:7758   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7774:7792   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7767:7803   */\n      mstore\n        /* \"#utility.yul\":7820:7839   */\n      0x84\n      add\n        /* \"CYBCC.sol\":23388:23496  require(... */\n      tag_166\n        /* \"#utility.yul\":7443:7845   */\n      jump\n        /* \"CYBCC.sol\":23388:23496  require(... */\n    tag_316:\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23511:23528  sender != owner() */\n      dup6\n      dup2\n      and\n        /* \"CYBCC.sol\":19357:19363  _owner */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"CYBCC.sol\":23511:23528  sender != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"CYBCC.sol\":23511:23577  sender != owner() && sender != getMarketingAndDevelopmentAccount() */\n      tag_320\n      jumpi\n      pop\n        /* \"CYBCC.sol\":19938:19969  _marketingAndDevelopmentAccount */\n      sload(0x12)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23532:23577  sender != getMarketingAndDevelopmentAccount() */\n      dup6\n      dup2\n      and\n        /* \"CYBCC.sol\":19938:19969  _marketingAndDevelopmentAccount */\n      swap2\n      and\n        /* \"CYBCC.sol\":23532:23577  sender != getMarketingAndDevelopmentAccount() */\n      eq\n      iszero\n        /* \"CYBCC.sol\":23511:23577  sender != owner() && sender != getMarketingAndDevelopmentAccount() */\n    tag_320:\n        /* \"CYBCC.sol\":23511:23590  sender != owner() && sender != getMarketingAndDevelopmentAccount() && antiWhale */\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"CYBCC.sol\":23581:23590  antiWhale */\n      and(0xff, sload(0x15))\n        /* \"CYBCC.sol\":23511:23590  sender != owner() && sender != getMarketingAndDevelopmentAccount() && antiWhale */\n    tag_322:\n        /* \"CYBCC.sol\":23507:23742  if (sender != owner() && sender != getMarketingAndDevelopmentAccount() && antiWhale) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"CYBCC.sol\":23665:23680  maxWalletAmount */\n      sload(0x14)\n        /* \"CYBCC.sol\":23655:23661  amount */\n      dup3\n        /* \"CYBCC.sol\":23632:23652  balanceOf(recipient) */\n      tag_324\n        /* \"CYBCC.sol\":23642:23651  recipient */\n      dup6\n        /* \"CYBCC.sol\":23632:23641  balanceOf */\n      tag_104\n        /* \"CYBCC.sol\":23632:23652  balanceOf(recipient) */\n      jump\t// in\n    tag_324:\n        /* \"CYBCC.sol\":23632:23661  balanceOf(recipient) + amount */\n      tag_325\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_325:\n        /* \"CYBCC.sol\":23632:23680  balanceOf(recipient) + amount <= maxWalletAmount */\n      gt\n      iszero\n        /* \"CYBCC.sol\":23607:23730  require(... */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"CYBCC.sol\":23607:23730  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8034:8055   */\n      mstore\n        /* \"#utility.yul\":8091:8093   */\n      0x10\n        /* \"#utility.yul\":8071:8089   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8064:8094   */\n      mstore\n      shl(0x80, 0x5768616c652064657465637465642121)\n        /* \"#utility.yul\":8110:8128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8103:8149   */\n      mstore\n        /* \"#utility.yul\":8166:8184   */\n      0x64\n      add\n        /* \"CYBCC.sol\":23607:23730  require(... */\n      tag_166\n        /* \"#utility.yul\":7850:8190   */\n      jump\n        /* \"CYBCC.sol\":23607:23730  require(... */\n    tag_326:\n        /* \"CYBCC.sol\":23789:23800  pairAddress */\n      sload(0x13)\n        /* \"CYBCC.sol\":23752:23764  bool takeFee */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23779:23800  sender == pairAddress */\n      dup7\n      dup2\n      and\n        /* \"CYBCC.sol\":23789:23800  pairAddress */\n      swap2\n      and\n        /* \"CYBCC.sol\":23779:23800  sender == pairAddress */\n      eq\n      dup1\n        /* \"CYBCC.sol\":23779:23828  sender == pairAddress || recipient == pairAddress */\n      tag_329\n      jumpi\n      pop\n        /* \"CYBCC.sol\":23817:23828  pairAddress */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":23804:23828  recipient == pairAddress */\n      dup6\n      dup2\n      and\n        /* \"CYBCC.sol\":23817:23828  pairAddress */\n      swap2\n      and\n        /* \"CYBCC.sol\":23804:23828  recipient == pairAddress */\n      eq\n        /* \"CYBCC.sol\":23779:23828  sender == pairAddress || recipient == pairAddress */\n    tag_329:\n        /* \"CYBCC.sol\":23775:23869  if (sender == pairAddress || recipient == pairAddress) {... */\n      iszero\n      tag_330\n      jumpi\n      pop\n        /* \"CYBCC.sol\":23854:23858  true */\n      0x01\n        /* \"CYBCC.sol\":23775:23869  if (sender == pairAddress || recipient == pairAddress) {... */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      dup6\n      and\n        /* \"CYBCC.sol\":20047:20051  bool */\n      0x00\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":20070:20088  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":20070:20097  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":23879:23950  if (isExcludedFromFee(sender)) {... */\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"CYBCC.sol\":23934:23939  false */\n      0x00\n        /* \"CYBCC.sol\":23879:23950  if (isExcludedFromFee(sender)) {... */\n    tag_332:\n        /* \"CYBCC.sol\":23960:24010  _tokenTransfer(sender, recipient, amount, takeFee) */\n      tag_333\n        /* \"CYBCC.sol\":23975:23981  sender */\n      dup6\n        /* \"CYBCC.sol\":23983:23992  recipient */\n      dup6\n        /* \"CYBCC.sol\":23994:24000  amount */\n      dup6\n        /* \"CYBCC.sol\":24002:24009  takeFee */\n      dup5\n        /* \"CYBCC.sol\":23960:23974  _tokenTransfer */\n      tag_334\n        /* \"CYBCC.sol\":23960:24010  _tokenTransfer(sender, recipient, amount, takeFee) */\n      jump\t// in\n    tag_333:\n        /* \"CYBCC.sol\":23163:24017  {... */\n      pop\n      pop\n        /* \"CYBCC.sol\":23037:24017  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":21730:22041  function tokenFromReflection(uint256 rAmount)... */\n    tag_221:\n        /* \"CYBCC.sol\":21822:21829  uint256 */\n      0x00\n        /* \"CYBCC.sol\":21877:21884  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":21866:21873  rAmount */\n      dup3\n        /* \"CYBCC.sol\":21866:21884  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":21845:21952  require(... */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8397:8399   */\n      0x20\n        /* \"CYBCC.sol\":21845:21952  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8379:8400   */\n      mstore\n        /* \"#utility.yul\":8436:8438   */\n      0x2a\n        /* \"#utility.yul\":8416:8434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8409:8439   */\n      mstore\n        /* \"#utility.yul\":8475:8509   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":8455:8473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8448:8510   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":8526:8544   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8519:8559   */\n      mstore\n        /* \"#utility.yul\":8576:8595   */\n      0x84\n      add\n        /* \"CYBCC.sol\":21845:21952  require(... */\n      tag_166\n        /* \"#utility.yul\":8195:8601   */\n      jump\n        /* \"CYBCC.sol\":21845:21952  require(... */\n    tag_336:\n        /* \"CYBCC.sol\":21963:21982  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":21985:21995  _getRate() */\n      tag_339\n        /* \"CYBCC.sol\":21985:21993  _getRate */\n      tag_294\n        /* \"CYBCC.sol\":21985:21995  _getRate() */\n      jump\t// in\n    tag_339:\n        /* \"CYBCC.sol\":21963:21995  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":22013:22034  rAmount / currentRate */\n      tag_340\n        /* \"CYBCC.sol\":21963:21995  uint256 currentRate = _getRate() */\n      dup2\n        /* \"CYBCC.sol\":22013:22020  rAmount */\n      dup5\n        /* \"CYBCC.sol\":22013:22034  rAmount / currentRate */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"CYBCC.sol\":22006:22034  return rAmount / currentRate */\n      swap4\n        /* \"CYBCC.sol\":21730:22041  function tokenFromReflection(uint256 rAmount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":27810:28058  function _getCompleteTaxValue(uint256 tAmount)... */\n    tag_291:\n        /* \"CYBCC.sol\":27903:27910  uint256 */\n      0x00\n        /* \"CYBCC.sol\":27926:27942  uint256 allTaxes */\n      dup1\n        /* \"CYBCC.sol\":27962:27969  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":27945:27959  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":27945:27969  _reflectionFee + _taxFee */\n      tag_343\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_343:\n        /* \"CYBCC.sol\":27926:27969  uint256 allTaxes = _reflectionFee + _taxFee */\n      swap1\n      pop\n        /* \"CYBCC.sol\":27980:27996  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":28022:28025  100 */\n      0x64\n        /* \"CYBCC.sol\":28000:28018  tAmount * allTaxes */\n      tag_344\n        /* \"CYBCC.sol\":27926:27969  uint256 allTaxes = _reflectionFee + _taxFee */\n      dup4\n        /* \"CYBCC.sol\":28000:28007  tAmount */\n      dup7\n        /* \"CYBCC.sol\":28000:28018  tAmount * allTaxes */\n      tag_296\n      jump\t// in\n    tag_344:\n        /* \"CYBCC.sol\":27999:28025  (tAmount * allTaxes) / 100 */\n      tag_345\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_345:\n        /* \"CYBCC.sol\":27980:28025  uint256 taxValue = (tAmount * allTaxes) / 100 */\n      swap5\n        /* \"CYBCC.sol\":27810:28058  function _getCompleteTaxValue(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":28869:29028  function _getRate() private view returns (uint256) {... */\n    tag_294:\n        /* \"CYBCC.sol\":28911:28918  uint256 */\n      0x00\n        /* \"CYBCC.sol\":28931:28946  uint256 rSupply */\n      dup1\n        /* \"CYBCC.sol\":28948:28963  uint256 tSupply */\n      0x00\n        /* \"CYBCC.sol\":28967:28986  _getCurrentSupply() */\n      tag_347\n        /* \"CYBCC.sol\":28967:28984  _getCurrentSupply */\n      tag_348\n        /* \"CYBCC.sol\":28967:28986  _getCurrentSupply() */\n      jump\t// in\n    tag_347:\n        /* \"CYBCC.sol\":28930:28986  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CYBCC.sol\":29004:29021  rSupply / tSupply */\n      tag_349\n        /* \"CYBCC.sol\":28930:28986  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"CYBCC.sol\":29004:29021  rSupply / tSupply */\n      tag_341\n      jump\t// in\n    tag_349:\n        /* \"CYBCC.sol\":28997:29021  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":28869:29028  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"CYBCC.sol\":16388:16858  function _approve(... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":16538:16557  owner == address(0) */\n      dup5\n      and\n        /* \"CYBCC.sol\":16534:16623  if (owner == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"CYBCC.sol\":16580:16612  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"CYBCC.sol\":16609:16610  0 */\n      0x00\n        /* \"CYBCC.sol\":16580:16612  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2768:2819   */\n      mstore\n        /* \"#utility.yul\":2741:2759   */\n      0x24\n      add\n        /* \"CYBCC.sol\":16580:16612  ERC20InvalidApprover(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2622:2825   */\n      jump\n        /* \"CYBCC.sol\":16534:16623  if (owner == address(0)) {... */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":16636:16657  spender == address(0) */\n      dup4\n      and\n        /* \"CYBCC.sol\":16632:16722  if (spender == address(0)) {... */\n      tag_353\n      jumpi\n        /* \"CYBCC.sol\":16680:16711  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"CYBCC.sol\":16708:16709  0 */\n      0x00\n        /* \"CYBCC.sol\":16680:16711  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2768:2819   */\n      mstore\n        /* \"#utility.yul\":2741:2759   */\n      0x24\n      add\n        /* \"CYBCC.sol\":16680:16711  ERC20InvalidSpender(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2622:2825   */\n      jump\n        /* \"CYBCC.sol\":16632:16722  if (spender == address(0)) {... */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":16731:16749  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":16731:16742  _allowances */\n      0x01\n        /* \"CYBCC.sol\":16731:16749  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":16731:16758  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"CYBCC.sol\":16731:16766  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":16776:16852  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_307\n      jumpi\n        /* \"CYBCC.sol\":16826:16833  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":16810:16841  Approval(owner, spender, value) */\n      and\n        /* \"CYBCC.sol\":16819:16824  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":16810:16841  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"CYBCC.sol\":16835:16840  value */\n      dup5\n        /* \"CYBCC.sol\":16810:16841  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_356\n      swap2\n        /* \"#utility.yul\":1527:1552   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1500:1518   */\n      add\n      swap1\n        /* \"#utility.yul\":1381:1558   */\n      jump\n        /* \"CYBCC.sol\":16810:16841  Approval(owner, spender, value) */\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":16388:16858  function _approve(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":24023:24792  function _tokenTransfer(... */\n    tag_334:\n        /* \"CYBCC.sol\":24163:24170  takeFee */\n      dup1\n        /* \"CYBCC.sol\":24158:24211  if (!takeFee) {... */\n      tag_359\n      jumpi\n        /* \"CYBCC.sol\":24186:24200  removeAllFee() */\n      tag_359\n        /* \"CYBCC.sol\":24186:24198  removeAllFee */\n      tag_360\n        /* \"CYBCC.sol\":24186:24200  removeAllFee() */\n      jump\t// in\n    tag_359:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24225:24242  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24225:24236  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24225:24242  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24225:24262  _isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_361\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24247:24262  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24247:24258  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24247:24262  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24246:24262  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":24225:24262  _isExcluded[from] && !_isExcluded[to] */\n    tag_361:\n        /* \"CYBCC.sol\":24221:24722  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"CYBCC.sol\":24278:24316  _transferFromExcluded(from, to, value) */\n      tag_363\n        /* \"CYBCC.sol\":24300:24304  from */\n      dup5\n        /* \"CYBCC.sol\":24306:24308  to */\n      dup5\n        /* \"CYBCC.sol\":24310:24315  value */\n      dup5\n        /* \"CYBCC.sol\":24278:24299  _transferFromExcluded */\n      tag_364\n        /* \"CYBCC.sol\":24278:24316  _transferFromExcluded(from, to, value) */\n      jump\t// in\n    tag_363:\n        /* \"CYBCC.sol\":24221:24722  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      jump(tag_381)\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24338:24355  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24338:24349  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24338:24355  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24337:24355  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":24337:24374  !_isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_366\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24359:24374  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24359:24370  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24359:24374  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24337:24374  !_isExcluded[from] && _isExcluded[to] */\n    tag_366:\n        /* \"CYBCC.sol\":24333:24722  if (!_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"CYBCC.sol\":24390:24426  _transferToExcluded(from, to, value) */\n      tag_363\n        /* \"CYBCC.sol\":24410:24414  from */\n      dup5\n        /* \"CYBCC.sol\":24416:24418  to */\n      dup5\n        /* \"CYBCC.sol\":24420:24425  value */\n      dup5\n        /* \"CYBCC.sol\":24390:24409  _transferToExcluded */\n      tag_369\n        /* \"CYBCC.sol\":24390:24426  _transferToExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":24333:24722  if (!_isExcluded[from] && _isExcluded[to]) {... */\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24448:24465  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24448:24459  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24448:24465  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24447:24465  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":24447:24485  !_isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_371\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24470:24485  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24470:24481  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24470:24485  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24469:24485  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":24447:24485  !_isExcluded[from] && !_isExcluded[to] */\n    tag_371:\n        /* \"CYBCC.sol\":24443:24722  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"CYBCC.sol\":24501:24535  _transferStandard(from, to, value) */\n      tag_363\n        /* \"CYBCC.sol\":24519:24523  from */\n      dup5\n        /* \"CYBCC.sol\":24525:24527  to */\n      dup5\n        /* \"CYBCC.sol\":24529:24534  value */\n      dup5\n        /* \"CYBCC.sol\":24501:24518  _transferStandard */\n      tag_374\n        /* \"CYBCC.sol\":24501:24535  _transferStandard(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":24443:24722  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24556:24573  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24556:24567  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24556:24573  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24556:24592  _isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_376\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":24577:24592  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":24577:24588  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":24577:24592  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":24556:24592  _isExcluded[from] && _isExcluded[to] */\n    tag_376:\n        /* \"CYBCC.sol\":24552:24722  if (_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"CYBCC.sol\":24608:24646  _transferBothExcluded(from, to, value) */\n      tag_363\n        /* \"CYBCC.sol\":24630:24634  from */\n      dup5\n        /* \"CYBCC.sol\":24636:24638  to */\n      dup5\n        /* \"CYBCC.sol\":24640:24645  value */\n      dup5\n        /* \"CYBCC.sol\":24608:24629  _transferBothExcluded */\n      tag_379\n        /* \"CYBCC.sol\":24608:24646  _transferBothExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":24552:24722  if (_isExcluded[from] && _isExcluded[to]) {... */\n    tag_377:\n        /* \"CYBCC.sol\":24677:24711  _transferStandard(from, to, value) */\n      tag_381\n        /* \"CYBCC.sol\":24695:24699  from */\n      dup5\n        /* \"CYBCC.sol\":24701:24703  to */\n      dup5\n        /* \"CYBCC.sol\":24705:24710  value */\n      dup5\n        /* \"CYBCC.sol\":24677:24694  _transferStandard */\n      tag_374\n        /* \"CYBCC.sol\":24677:24711  _transferStandard(from, to, value) */\n      jump\t// in\n    tag_381:\n        /* \"CYBCC.sol\":24737:24744  takeFee */\n      dup1\n        /* \"CYBCC.sol\":24732:24786  if (!takeFee) {... */\n      tag_307\n      jumpi\n        /* \"CYBCC.sol\":24760:24775  restoreAllFee() */\n      tag_307\n        /* \"CYBCC.sol\":25097:25119  _previousReflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":25080:25094  _reflectionFee */\n      0x0e\n        /* \"CYBCC.sol\":25080:25119  _reflectionFee = _previousReflectionFee */\n      sstore\n        /* \"CYBCC.sol\":25140:25155  _previousTaxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":25130:25137  _taxFee */\n      0x10\n        /* \"CYBCC.sol\":25130:25155  _taxFee = _previousTaxFee */\n      sstore\n        /* \"CYBCC.sol\":25037:25162  function restoreAllFee() private {... */\n      jump\n        /* \"CYBCC.sol\":29034:29679  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_348:\n        /* \"CYBCC.sol\":29131:29138  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":29167:29174  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":29085:29092  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"CYBCC.sol\":29185:29544  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_386:\n        /* \"CYBCC.sol\":29209:29218  _excluded */\n      0x09\n        /* \"CYBCC.sol\":29209:29225  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":29205:29225  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":29185:29544  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_387\n      jumpi\n        /* \"CYBCC.sol\":29291:29298  rSupply */\n      dup3\n        /* \"CYBCC.sol\":29267:29274  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":29267:29288  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":29275:29284  _excluded */\n      0x09\n        /* \"CYBCC.sol\":29285:29286  i */\n      dup5\n        /* \"CYBCC.sol\":29275:29287  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_390\n      jumpi\n      tag_390\n      tag_272\n      jump\t// in\n    tag_390:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":29267:29288  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":29267:29298  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"CYBCC.sol\":29267:29349  _rOwned[_excluded[i]] > rSupply ||... */\n      tag_392\n      jumpi\n      pop\n        /* \"CYBCC.sol\":29342:29349  tSupply */\n      dup2\n        /* \"CYBCC.sol\":29318:29325  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":29318:29339  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":29326:29335  _excluded */\n      0x09\n        /* \"CYBCC.sol\":29336:29337  i */\n      dup5\n        /* \"CYBCC.sol\":29326:29338  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_394\n      jumpi\n      tag_394\n      tag_272\n      jump\t// in\n    tag_394:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":29318:29339  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":29318:29349  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"CYBCC.sol\":29267:29349  _rOwned[_excluded[i]] > rSupply ||... */\n    tag_392:\n        /* \"CYBCC.sol\":29246:29422  if (... */\n      iszero\n      tag_396\n      jumpi\n        /* \"CYBCC.sol\":29390:29397  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":29399:29406  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":29382:29407  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":29034:29679  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":29246:29422  if (... */\n    tag_396:\n        /* \"CYBCC.sol\":29456:29463  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":29456:29477  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":29464:29473  _excluded */\n      0x09\n        /* \"CYBCC.sol\":29474:29475  i */\n      dup4\n        /* \"CYBCC.sol\":29464:29476  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_398\n      jumpi\n      tag_398\n      tag_272\n      jump\t// in\n    tag_398:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":29456:29477  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":29446:29477  rSupply - _rOwned[_excluded[i]] */\n      tag_400\n      swap1\n        /* \"CYBCC.sol\":29446:29453  rSupply */\n      dup5\n        /* \"CYBCC.sol\":29446:29477  rSupply - _rOwned[_excluded[i]] */\n      tag_171\n      jump\t// in\n    tag_400:\n        /* \"CYBCC.sol\":29436:29477  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"CYBCC.sol\":29512:29519  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":29512:29533  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":29520:29529  _excluded */\n      0x09\n        /* \"CYBCC.sol\":29530:29531  i */\n      dup4\n        /* \"CYBCC.sol\":29520:29532  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_402\n      jumpi\n      tag_402\n      tag_272\n      jump\t// in\n    tag_402:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":29512:29533  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":29502:29533  tSupply - _tOwned[_excluded[i]] */\n      tag_404\n      swap1\n        /* \"CYBCC.sol\":29502:29509  tSupply */\n      dup4\n        /* \"CYBCC.sol\":29502:29533  tSupply - _tOwned[_excluded[i]] */\n      tag_171\n      jump\t// in\n    tag_404:\n        /* \"CYBCC.sol\":29492:29533  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"CYBCC.sol\":29227:29230  i++ */\n      dup1\n      tag_405\n      dup2\n      tag_287\n      jump\t// in\n    tag_405:\n      swap2\n      pop\n      pop\n        /* \"CYBCC.sol\":29185:29544  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_386)\n    tag_387:\n      pop\n        /* \"CYBCC.sol\":29578:29585  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":29568:29575  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":29568:29585  _rTotal / _tTotal */\n      tag_406\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_406:\n        /* \"CYBCC.sol\":29558:29565  rSupply */\n      dup3\n        /* \"CYBCC.sol\":29558:29585  rSupply < _rTotal / _tTotal */\n      lt\n        /* \"CYBCC.sol\":29554:29637  if (rSupply < _rTotal / _tTotal) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"CYBCC.sol\":29609:29616  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":29618:29625  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":29601:29626  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":29034:29679  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":29554:29637  if (rSupply < _rTotal / _tTotal) {... */\n    tag_407:\n        /* \"CYBCC.sol\":29655:29662  rSupply */\n      swap1\n      swap4\n        /* \"CYBCC.sol\":29664:29671  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"CYBCC.sol\":29034:29679  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":24798:25031  function removeAllFee() private {... */\n    tag_360:\n        /* \"CYBCC.sol\":24844:24858  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":24844:24863  _reflectionFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":24844:24879  _reflectionFee == 0 && _taxFee == 0 */\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n        /* \"CYBCC.sol\":24867:24874  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":24867:24879  _taxFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":24844:24879  _reflectionFee == 0 && _taxFee == 0 */\n    tag_409:\n        /* \"CYBCC.sol\":24840:24888  if (_reflectionFee == 0 && _taxFee == 0) return; */\n      iszero\n      tag_410\n      jumpi\n        /* \"CYBCC.sol\":24798:25031  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":24840:24888  if (_reflectionFee == 0 && _taxFee == 0) return; */\n    tag_410:\n        /* \"CYBCC.sol\":24923:24937  _reflectionFee */\n      0x0e\n      dup1\n      sload\n        /* \"CYBCC.sol\":24898:24920  _previousReflectionFee */\n      0x0f\n        /* \"CYBCC.sol\":24898:24937  _previousReflectionFee = _reflectionFee */\n      sstore\n        /* \"CYBCC.sol\":24966:24973  _taxFee */\n      0x10\n      dup1\n      sload\n        /* \"CYBCC.sol\":24948:24963  _previousTaxFee */\n      0x11\n        /* \"CYBCC.sol\":24948:24973  _previousTaxFee = _taxFee */\n      sstore\n      0x00\n        /* \"CYBCC.sol\":24984:25002  _reflectionFee = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":25013:25024  _taxFee = 0 */\n      sstore\n        /* \"CYBCC.sol\":24798:25031  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":26432:27081  function _transferFromExcluded(... */\n    tag_364:\n        /* \"CYBCC.sol\":26577:26592  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":26606:26629  uint256 rTransferAmount */\n      dup1\n        /* \"CYBCC.sol\":26643:26666  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":26680:26699  uint256 currentRate */\n      dup1\n        /* \"CYBCC.sol\":26712:26739  _getTransferValues(tAmount) */\n      tag_412\n        /* \"CYBCC.sol\":26731:26738  tAmount */\n      dup6\n        /* \"CYBCC.sol\":26712:26730  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":26712:26739  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26768:26783  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26768:26775  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":26768:26783  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":26563:26739  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":26768:26793  _tOwned[sender] - tAmount */\n      tag_413\n      swap1\n        /* \"CYBCC.sol\":26786:26793  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":26768:26793  _tOwned[sender] - tAmount */\n      tag_171\n      jump\t// in\n    tag_413:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26750:26765  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26750:26757  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":26750:26765  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":26750:26793  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":26822:26829  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26822:26837  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":26822:26847  _rOwned[sender] - rAmount */\n      tag_414\n      swap1\n        /* \"CYBCC.sol\":26840:26847  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":26822:26847  _rOwned[sender] - rAmount */\n      tag_171\n      jump\t// in\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26804:26819  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26804:26811  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26804:26819  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":26804:26847  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":26879:26897  _rOwned[recipient] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":26879:26915  _rOwned[recipient] + rTransferAmount */\n      tag_415\n      swap1\n        /* \"CYBCC.sol\":26900:26915  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":26879:26915  _rOwned[recipient] + rTransferAmount */\n      tag_174\n      jump\t// in\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26858:26876  _rOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26858:26865  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26858:26876  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":26858:26915  _rOwned[recipient] = _rOwned[recipient] + rTransferAmount */\n      sstore\n        /* \"CYBCC.sol\":26926:26970  taxFeeTransfer(sender, tAmount, currentRate) */\n      tag_416\n        /* \"CYBCC.sol\":26941:26947  sender */\n      dup8\n        /* \"CYBCC.sol\":26949:26956  tAmount */\n      dup7\n        /* \"CYBCC.sol\":26958:26969  currentRate */\n      dup4\n        /* \"CYBCC.sol\":26926:26940  taxFeeTransfer */\n      tag_417\n        /* \"CYBCC.sol\":26926:26970  taxFeeTransfer(sender, tAmount, currentRate) */\n      jump\t// in\n    tag_416:\n        /* \"CYBCC.sol\":26981:27014  _reflectFee(tAmount, currentRate) */\n      tag_418\n        /* \"CYBCC.sol\":26993:27000  tAmount */\n      dup6\n        /* \"CYBCC.sol\":27002:27013  currentRate */\n      dup3\n        /* \"CYBCC.sol\":26981:26992  _reflectFee */\n      tag_419\n        /* \"CYBCC.sol\":26981:27014  _reflectFee(tAmount, currentRate) */\n      jump\t// in\n    tag_418:\n        /* \"CYBCC.sol\":27047:27056  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":27030:27074  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"CYBCC.sol\":27039:27045  sender */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":27030:27074  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"CYBCC.sol\":27058:27073  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":27030:27074  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_420\n      swap2\n        /* \"#utility.yul\":1527:1552   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1500:1518   */\n      add\n      swap1\n        /* \"#utility.yul\":1381:1558   */\n      jump\n        /* \"CYBCC.sol\":27030:27074  Transfer(sender, recipient, tTransferAmount) */\n    tag_420:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":26553:27081  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":26432:27081  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":25765:26426  function _transferToExcluded(... */\n    tag_369:\n        /* \"CYBCC.sol\":25908:25923  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":25937:25960  uint256 rTransferAmount */\n      dup1\n        /* \"CYBCC.sol\":25974:25997  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":26011:26030  uint256 currentRate */\n      dup1\n        /* \"CYBCC.sol\":26043:26070  _getTransferValues(tAmount) */\n      tag_422\n        /* \"CYBCC.sol\":26062:26069  tAmount */\n      dup6\n        /* \"CYBCC.sol\":26043:26061  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":26043:26070  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_422:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26099:26114  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26099:26106  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26099:26114  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":25894:26070  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":26099:26124  _rOwned[sender] - rAmount */\n      tag_423\n      swap1\n        /* \"CYBCC.sol\":25894:26070  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":26099:26124  _rOwned[sender] - rAmount */\n      tag_171\n      jump\t// in\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26081:26096  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26081:26088  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26081:26096  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":26081:26124  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"CYBCC.sol\":26156:26174  _tOwned[recipient] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26156:26163  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":26156:26174  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":26156:26192  _tOwned[recipient] + tTransferAmount */\n      tag_424\n      swap1\n        /* \"CYBCC.sol\":26177:26192  tTransferAmount */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":26156:26192  _tOwned[recipient] + tTransferAmount */\n      tag_174\n      jump\t// in\n    tag_424:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":26135:26153  _tOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":26135:26142  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":26135:26153  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":26135:26192  _tOwned[recipient] = _tOwned[recipient] + tTransferAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":26224:26231  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":26224:26242  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":26224:26260  _rOwned[recipient] + rTransferAmount */\n      tag_415\n      swap1\n        /* \"CYBCC.sol\":26245:26260  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":26224:26260  _rOwned[recipient] + rTransferAmount */\n      tag_174\n      jump\t// in\n        /* \"CYBCC.sol\":25168:25759  function _transferStandard(... */\n    tag_374:\n        /* \"CYBCC.sol\":25309:25324  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":25338:25361  uint256 rTransferAmount */\n      dup1\n        /* \"CYBCC.sol\":25375:25398  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":25412:25431  uint256 currentRate */\n      dup1\n        /* \"CYBCC.sol\":25444:25471  _getTransferValues(tAmount) */\n      tag_430\n        /* \"CYBCC.sol\":25463:25470  tAmount */\n      dup6\n        /* \"CYBCC.sol\":25444:25462  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":25444:25471  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":25500:25515  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":25500:25507  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":25500:25515  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":25295:25471  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":25500:25525  _rOwned[sender] - rAmount */\n      tag_414\n      swap1\n        /* \"CYBCC.sol\":25295:25471  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":25500:25525  _rOwned[sender] - rAmount */\n      tag_171\n      jump\t// in\n        /* \"CYBCC.sol\":27087:27804  function _transferBothExcluded(... */\n    tag_379:\n        /* \"CYBCC.sol\":27232:27247  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":27261:27284  uint256 rTransferAmount */\n      dup1\n        /* \"CYBCC.sol\":27298:27321  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":27335:27354  uint256 currentRate */\n      dup1\n        /* \"CYBCC.sol\":27367:27394  _getTransferValues(tAmount) */\n      tag_437\n        /* \"CYBCC.sol\":27386:27393  tAmount */\n      dup6\n        /* \"CYBCC.sol\":27367:27385  _getTransferValues */\n      tag_169\n        /* \"CYBCC.sol\":27367:27394  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_437:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":27423:27438  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":27423:27430  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":27423:27438  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":27218:27394  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":27423:27448  _tOwned[sender] - tAmount */\n      tag_438\n      swap1\n        /* \"CYBCC.sol\":27441:27448  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":27423:27448  _tOwned[sender] - tAmount */\n      tag_171\n      jump\t// in\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":27405:27420  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":27405:27412  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":27405:27420  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":27405:27448  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":27477:27484  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":27477:27492  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":27477:27502  _rOwned[sender] - rAmount */\n      tag_423\n      swap1\n        /* \"CYBCC.sol\":27495:27502  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":27477:27502  _rOwned[sender] - rAmount */\n      tag_171\n      jump\t// in\n        /* \"CYBCC.sol\":29935:30420  function taxFeeTransfer(... */\n    tag_417:\n        /* \"CYBCC.sol\":30061:30076  uint256 tTaxFee */\n      0x00\n        /* \"CYBCC.sol\":30101:30104  100 */\n      0x64\n        /* \"CYBCC.sol\":30090:30097  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":30080:30087  tAmount */\n      dup5\n        /* \"CYBCC.sol\":30080:30097  tAmount * _taxFee */\n      tag_447\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_447:\n        /* \"CYBCC.sol\":30079:30104  (tAmount * _taxFee) / 100 */\n      tag_448\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_448:\n        /* \"CYBCC.sol\":30061:30104  uint256 tTaxFee = (tAmount * _taxFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":30119:30130  tTaxFee > 0 */\n      dup1\n      iszero\n        /* \"CYBCC.sol\":30115:30414  if (tTaxFee > 0) {... */\n      tag_307\n      jumpi\n        /* \"CYBCC.sol\":30146:30161  uint256 rTaxFee */\n      0x00\n        /* \"CYBCC.sol\":30164:30185  tTaxFee * currentRate */\n      tag_450\n        /* \"CYBCC.sol\":30174:30185  currentRate */\n      dup4\n        /* \"CYBCC.sol\":30164:30171  tTaxFee */\n      dup4\n        /* \"CYBCC.sol\":30164:30185  tTaxFee * currentRate */\n      tag_296\n      jump\t// in\n    tag_450:\n        /* \"CYBCC.sol\":30267:30298  _marketingAndDevelopmentAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"CYBCC.sol\":30259:30299  _rOwned[_marketingAndDevelopmentAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":30259:30266  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":30259:30299  _rOwned[_marketingAndDevelopmentAccount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":30146:30185  uint256 rTaxFee = tTaxFee * currentRate */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":30259:30325  _rOwned[_marketingAndDevelopmentAccount] +... */\n      tag_451\n      swap1\n        /* \"CYBCC.sol\":30146:30185  uint256 rTaxFee = tTaxFee * currentRate */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":30259:30325  _rOwned[_marketingAndDevelopmentAccount] +... */\n      tag_174\n      jump\t// in\n    tag_451:\n        /* \"CYBCC.sol\":30208:30239  _marketingAndDevelopmentAccount */\n      0x12\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CYBCC.sol\":30200:30240  _rOwned[_marketingAndDevelopmentAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":30200:30207  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":30200:30240  _rOwned[_marketingAndDevelopmentAccount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":30200:30325  _rOwned[_marketingAndDevelopmentAccount] =... */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"CYBCC.sol\":30362:30393  _marketingAndDevelopmentAccount */\n      swap2\n      sload\n        /* \"CYBCC.sol\":30345:30403  Transfer(sender, _marketingAndDevelopmentAccount, tTaxFee) */\n      swap2\n      mload\n        /* \"#utility.yul\":1527:1552   */\n      dup6\n      dup2\n      mstore\n        /* \"CYBCC.sol\":30362:30393  _marketingAndDevelopmentAccount */\n      swap2\n      dup2\n      and\n      swap3\n        /* \"CYBCC.sol\":30345:30403  Transfer(sender, _marketingAndDevelopmentAccount, tTaxFee) */\n      swap1\n      dup9\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"CYBCC.sol\":30345:30403  Transfer(sender, _marketingAndDevelopmentAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":30132:30414  {... */\n      pop\n        /* \"CYBCC.sol\":30051:30420  {... */\n      pop\n        /* \"CYBCC.sol\":29935:30420  function taxFeeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":28612:28863  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n    tag_419:\n        /* \"CYBCC.sol\":28689:28701  uint256 tFee */\n      0x00\n        /* \"CYBCC.sol\":28733:28736  100 */\n      0x64\n        /* \"CYBCC.sol\":28715:28729  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":28705:28712  tAmount */\n      dup5\n        /* \"CYBCC.sol\":28705:28729  tAmount * _reflectionFee */\n      tag_454\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_454:\n        /* \"CYBCC.sol\":28704:28736  (tAmount * _reflectionFee) / 100 */\n      tag_455\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_455:\n        /* \"CYBCC.sol\":28689:28736  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28747:28759  uint256 rFee */\n      0x00\n        /* \"CYBCC.sol\":28762:28780  tFee * currentRate */\n      tag_456\n        /* \"CYBCC.sol\":28769:28780  currentRate */\n      dup4\n        /* \"CYBCC.sol\":28689:28736  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      dup4\n        /* \"CYBCC.sol\":28762:28780  tFee * currentRate */\n      tag_296\n      jump\t// in\n    tag_456:\n        /* \"CYBCC.sol\":28747:28780  uint256 rFee = tFee * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":28811:28815  rFee */\n      dup1\n        /* \"CYBCC.sol\":28801:28808  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":28801:28815  _rTotal - rFee */\n      tag_457\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_457:\n        /* \"CYBCC.sol\":28791:28798  _rTotal */\n      0x0c\n        /* \"CYBCC.sol\":28791:28815  _rTotal = _rTotal - rFee */\n      sstore\n        /* \"CYBCC.sol\":28839:28849  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":28839:28856  _tFeeTotal + tFee */\n      tag_458\n      swap1\n        /* \"CYBCC.sol\":28852:28856  tFee */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":28839:28856  _tFeeTotal + tFee */\n      tag_174\n      jump\t// in\n    tag_458:\n        /* \"CYBCC.sol\":28826:28836  _tFeeTotal */\n      0x0d\n        /* \"CYBCC.sol\":28826:28856  _tFeeTotal = _tFeeTotal + tFee */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":28612:28863  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_41:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_463:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:747   */\n    tag_47:\n        /* \"#utility.yul\":311:315   */\n      0x00\n        /* \"#utility.yul\":340:342   */\n      0x20\n        /* \"#utility.yul\":369:371   */\n      dup1\n        /* \"#utility.yul\":358:367   */\n      dup4\n        /* \"#utility.yul\":351:372   */\n      mstore\n        /* \"#utility.yul\":401:407   */\n      dup4\n        /* \"#utility.yul\":395:408   */\n      mload\n        /* \"#utility.yul\":444:450   */\n      dup1\n        /* \"#utility.yul\":439:441   */\n      dup3\n        /* \"#utility.yul\":428:437   */\n      dup6\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"#utility.yul\":417:451   */\n      mstore\n        /* \"#utility.yul\":469:470   */\n      0x00\n        /* \"#utility.yul\":479:619   */\n    tag_465:\n        /* \"#utility.yul\":493:499   */\n      dup2\n        /* \"#utility.yul\":490:491   */\n      dup2\n        /* \"#utility.yul\":487:500   */\n      lt\n        /* \"#utility.yul\":479:619   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":588:602   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":584:607   */\n      dup4\n      add\n        /* \"#utility.yul\":578:608   */\n      mload\n        /* \"#utility.yul\":554:571   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":573:575   */\n      0x40\n        /* \"#utility.yul\":550:576   */\n      add\n        /* \"#utility.yul\":543:609   */\n      mstore\n        /* \"#utility.yul\":508:518   */\n      dup3\n      add\n        /* \"#utility.yul\":479:619   */\n      jump(tag_465)\n    tag_467:\n        /* \"#utility.yul\":483:486   */\n      pop\n        /* \"#utility.yul\":668:669   */\n      0x00\n        /* \"#utility.yul\":663:665   */\n      0x40\n        /* \"#utility.yul\":654:660   */\n      dup3\n        /* \"#utility.yul\":643:652   */\n      dup7\n        /* \"#utility.yul\":639:661   */\n      add\n        /* \"#utility.yul\":635:666   */\n      add\n        /* \"#utility.yul\":628:670   */\n      mstore\n        /* \"#utility.yul\":738:740   */\n      0x40\n        /* \"#utility.yul\":731:733   */\n      0x1f\n        /* \"#utility.yul\":727:734   */\n      not\n        /* \"#utility.yul\":722:724   */\n      0x1f\n        /* \"#utility.yul\":714:720   */\n      dup4\n        /* \"#utility.yul\":710:725   */\n      add\n        /* \"#utility.yul\":706:735   */\n      and\n        /* \"#utility.yul\":695:704   */\n      dup6\n        /* \"#utility.yul\":691:736   */\n      add\n        /* \"#utility.yul\":687:741   */\n      add\n        /* \"#utility.yul\":679:741   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":199:747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:925   */\n    tag_459:\n        /* \"#utility.yul\":820:840   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":869:900   */\n      dup2\n      and\n        /* \"#utility.yul\":859:901   */\n      dup2\n      eq\n        /* \"#utility.yul\":849:919   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":915:916   */\n      0x00\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":905:917   */\n      revert\n        /* \"#utility.yul\":849:919   */\n    tag_469:\n        /* \"#utility.yul\":752:925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1184   */\n    tag_51:\n        /* \"#utility.yul\":998:1004   */\n      0x00\n        /* \"#utility.yul\":1006:1012   */\n      dup1\n        /* \"#utility.yul\":1059:1061   */\n      0x40\n        /* \"#utility.yul\":1047:1056   */\n      dup4\n        /* \"#utility.yul\":1038:1045   */\n      dup6\n        /* \"#utility.yul\":1034:1057   */\n      sub\n        /* \"#utility.yul\":1030:1062   */\n      slt\n        /* \"#utility.yul\":1027:1079   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1072:1073   */\n      dup1\n        /* \"#utility.yul\":1065:1077   */\n      revert\n        /* \"#utility.yul\":1027:1079   */\n    tag_471:\n        /* \"#utility.yul\":1098:1127   */\n      tag_472\n        /* \"#utility.yul\":1117:1126   */\n      dup4\n        /* \"#utility.yul\":1098:1127   */\n      tag_459\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":1088:1127   */\n      swap5\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1159:1177   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1146:1178   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":930:1184   */\n      jump\t// out\n        /* \"#utility.yul\":1563:1891   */\n    tag_63:\n        /* \"#utility.yul\":1640:1646   */\n      0x00\n        /* \"#utility.yul\":1648:1654   */\n      dup1\n        /* \"#utility.yul\":1656:1662   */\n      0x00\n        /* \"#utility.yul\":1709:1711   */\n      0x60\n        /* \"#utility.yul\":1697:1706   */\n      dup5\n        /* \"#utility.yul\":1688:1695   */\n      dup7\n        /* \"#utility.yul\":1684:1707   */\n      sub\n        /* \"#utility.yul\":1680:1712   */\n      slt\n        /* \"#utility.yul\":1677:1729   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1722:1723   */\n      dup1\n        /* \"#utility.yul\":1715:1727   */\n      revert\n        /* \"#utility.yul\":1677:1729   */\n    tag_476:\n        /* \"#utility.yul\":1748:1777   */\n      tag_477\n        /* \"#utility.yul\":1767:1776   */\n      dup5\n        /* \"#utility.yul\":1748:1777   */\n      tag_459\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1738:1777   */\n      swap3\n      pop\n        /* \"#utility.yul\":1796:1834   */\n      tag_478\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup6\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1796:1834   */\n      tag_459\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1786:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1870:1879   */\n      dup5\n        /* \"#utility.yul\":1866:1884   */\n      add\n        /* \"#utility.yul\":1853:1885   */\n      calldataload\n        /* \"#utility.yul\":1843:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1891   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_78:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_481:\n        /* \"#utility.yul\":2236:2265   */\n      tag_340\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_459\n      jump\t// in\n        /* \"#utility.yul\":2276:2617   */\n    tag_83:\n        /* \"#utility.yul\":2341:2347   */\n      0x00\n        /* \"#utility.yul\":2349:2355   */\n      dup1\n        /* \"#utility.yul\":2402:2404   */\n      0x40\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2381:2388   */\n      dup6\n        /* \"#utility.yul\":2377:2400   */\n      sub\n        /* \"#utility.yul\":2373:2405   */\n      slt\n        /* \"#utility.yul\":2370:2422   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2418:2419   */\n      0x00\n        /* \"#utility.yul\":2415:2416   */\n      dup1\n        /* \"#utility.yul\":2408:2420   */\n      revert\n        /* \"#utility.yul\":2370:2422   */\n    tag_484:\n        /* \"#utility.yul\":2454:2463   */\n      dup3\n        /* \"#utility.yul\":2441:2464   */\n      calldataload\n        /* \"#utility.yul\":2431:2464   */\n      swap2\n      pop\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2503:2512   */\n      dup4\n        /* \"#utility.yul\":2499:2517   */\n      add\n        /* \"#utility.yul\":2486:2518   */\n      calldataload\n        /* \"#utility.yul\":2561:2566   */\n      dup1\n        /* \"#utility.yul\":2554:2567   */\n      iszero\n        /* \"#utility.yul\":2547:2568   */\n      iszero\n        /* \"#utility.yul\":2540:2545   */\n      dup2\n        /* \"#utility.yul\":2537:2569   */\n      eq\n        /* \"#utility.yul\":2527:2587   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2580:2581   */\n      dup1\n        /* \"#utility.yul\":2573:2585   */\n      revert\n        /* \"#utility.yul\":2527:2587   */\n    tag_485:\n        /* \"#utility.yul\":2606:2611   */\n      dup1\n        /* \"#utility.yul\":2596:2611   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2276:2617   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:3090   */\n    tag_147:\n        /* \"#utility.yul\":2898:2904   */\n      0x00\n        /* \"#utility.yul\":2906:2912   */\n      dup1\n        /* \"#utility.yul\":2959:2961   */\n      0x40\n        /* \"#utility.yul\":2947:2956   */\n      dup4\n        /* \"#utility.yul\":2938:2945   */\n      dup6\n        /* \"#utility.yul\":2934:2957   */\n      sub\n        /* \"#utility.yul\":2930:2962   */\n      slt\n        /* \"#utility.yul\":2927:2979   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":2975:2976   */\n      0x00\n        /* \"#utility.yul\":2972:2973   */\n      dup1\n        /* \"#utility.yul\":2965:2977   */\n      revert\n        /* \"#utility.yul\":2927:2979   */\n    tag_488:\n        /* \"#utility.yul\":2998:3027   */\n      tag_489\n        /* \"#utility.yul\":3017:3026   */\n      dup4\n        /* \"#utility.yul\":2998:3027   */\n      tag_459\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2988:3027   */\n      swap2\n      pop\n        /* \"#utility.yul\":3046:3084   */\n      tag_490\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3069:3078   */\n      dup5\n        /* \"#utility.yul\":3065:3083   */\n      add\n        /* \"#utility.yul\":3046:3084   */\n      tag_459\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3036:3084   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:3090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3508:3635   */\n    tag_460:\n        /* \"#utility.yul\":3569:3579   */\n      0x4e487b71\n        /* \"#utility.yul\":3564:3567   */\n      0xe0\n        /* \"#utility.yul\":3560:3580   */\n      shl\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3550:3581   */\n      mstore\n        /* \"#utility.yul\":3600:3604   */\n      0x11\n        /* \"#utility.yul\":3597:3598   */\n      0x04\n        /* \"#utility.yul\":3590:3605   */\n      mstore\n        /* \"#utility.yul\":3624:3628   */\n      0x24\n        /* \"#utility.yul\":3621:3622   */\n      0x00\n        /* \"#utility.yul\":3614:3629   */\n      revert\n        /* \"#utility.yul\":3640:3768   */\n    tag_171:\n        /* \"#utility.yul\":3707:3716   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3728:3739   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3725:3762   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":3742:3760   */\n      tag_182\n      tag_460\n      jump\t// in\n        /* \"#utility.yul\":3773:3898   */\n    tag_174:\n        /* \"#utility.yul\":3838:3847   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3859:3869   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3856:3892   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":3872:3890   */\n      tag_182\n      tag_460\n      jump\t// in\n        /* \"#utility.yul\":3903:4283   */\n    tag_177:\n        /* \"#utility.yul\":3982:3983   */\n      0x01\n        /* \"#utility.yul\":3978:3990   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4025:4037   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4046:4107   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":4100:4104   */\n      0x7f\n        /* \"#utility.yul\":4092:4098   */\n      dup3\n        /* \"#utility.yul\":4088:4105   */\n      and\n        /* \"#utility.yul\":4078:4105   */\n      swap2\n      pop\n        /* \"#utility.yul\":4046:4107   */\n    tag_500:\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4145:4151   */\n      dup3\n        /* \"#utility.yul\":4142:4156   */\n      lt\n        /* \"#utility.yul\":4122:4140   */\n      dup2\n        /* \"#utility.yul\":4119:4157   */\n      sub\n        /* \"#utility.yul\":4116:4277   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4199:4209   */\n      0x4e487b71\n        /* \"#utility.yul\":4194:4197   */\n      0xe0\n        /* \"#utility.yul\":4190:4210   */\n      shl\n        /* \"#utility.yul\":4187:4188   */\n      0x00\n        /* \"#utility.yul\":4180:4211   */\n      mstore\n        /* \"#utility.yul\":4234:4238   */\n      0x22\n        /* \"#utility.yul\":4231:4232   */\n      0x04\n        /* \"#utility.yul\":4224:4239   */\n      mstore\n        /* \"#utility.yul\":4262:4266   */\n      0x24\n        /* \"#utility.yul\":4259:4260   */\n      0x00\n        /* \"#utility.yul\":4252:4267   */\n      revert\n        /* \"#utility.yul\":4116:4277   */\n    tag_501:\n      pop\n        /* \"#utility.yul\":3903:4283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5706:5833   */\n    tag_272:\n        /* \"#utility.yul\":5767:5777   */\n      0x4e487b71\n        /* \"#utility.yul\":5762:5765   */\n      0xe0\n        /* \"#utility.yul\":5758:5778   */\n      shl\n        /* \"#utility.yul\":5755:5756   */\n      0x00\n        /* \"#utility.yul\":5748:5779   */\n      mstore\n        /* \"#utility.yul\":5798:5802   */\n      0x32\n        /* \"#utility.yul\":5795:5796   */\n      0x04\n        /* \"#utility.yul\":5788:5803   */\n      mstore\n        /* \"#utility.yul\":5822:5826   */\n      0x24\n        /* \"#utility.yul\":5819:5820   */\n      0x00\n        /* \"#utility.yul\":5812:5827   */\n      revert\n        /* \"#utility.yul\":5838:5965   */\n    tag_284:\n        /* \"#utility.yul\":5899:5909   */\n      0x4e487b71\n        /* \"#utility.yul\":5894:5897   */\n      0xe0\n        /* \"#utility.yul\":5890:5910   */\n      shl\n        /* \"#utility.yul\":5887:5888   */\n      0x00\n        /* \"#utility.yul\":5880:5911   */\n      mstore\n        /* \"#utility.yul\":5930:5934   */\n      0x31\n        /* \"#utility.yul\":5927:5928   */\n      0x04\n        /* \"#utility.yul\":5920:5935   */\n      mstore\n        /* \"#utility.yul\":5954:5958   */\n      0x24\n        /* \"#utility.yul\":5951:5952   */\n      0x00\n        /* \"#utility.yul\":5944:5959   */\n      revert\n        /* \"#utility.yul\":5970:6105   */\n    tag_287:\n        /* \"#utility.yul\":6009:6012   */\n      0x00\n        /* \"#utility.yul\":6030:6047   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6027:6070   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":6050:6068   */\n      tag_510\n      tag_460\n      jump\t// in\n    tag_510:\n      pop\n        /* \"#utility.yul\":6097:6098   */\n      0x01\n        /* \"#utility.yul\":6086:6099   */\n      add\n      swap1\n        /* \"#utility.yul\":5970:6105   */\n      jump\t// out\n        /* \"#utility.yul\":6110:6278   */\n    tag_296:\n        /* \"#utility.yul\":6183:6192   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6214:6223   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6231:6246   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6225:6247   */\n      dup5\n      eq\n        /* \"#utility.yul\":6211:6248   */\n      or\n        /* \"#utility.yul\":6201:6272   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":6252:6270   */\n      tag_182\n      tag_460\n      jump\t// in\n        /* \"#utility.yul\":8606:8823   */\n    tag_341:\n        /* \"#utility.yul\":8646:8647   */\n      0x00\n        /* \"#utility.yul\":8672:8673   */\n      dup3\n        /* \"#utility.yul\":8662:8794   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":8716:8726   */\n      0x4e487b71\n        /* \"#utility.yul\":8711:8714   */\n      0xe0\n        /* \"#utility.yul\":8707:8727   */\n      shl\n        /* \"#utility.yul\":8704:8705   */\n      0x00\n        /* \"#utility.yul\":8697:8728   */\n      mstore\n        /* \"#utility.yul\":8751:8755   */\n      0x12\n        /* \"#utility.yul\":8748:8749   */\n      0x04\n        /* \"#utility.yul\":8741:8756   */\n      mstore\n        /* \"#utility.yul\":8779:8783   */\n      0x24\n        /* \"#utility.yul\":8776:8777   */\n      0x00\n        /* \"#utility.yul\":8769:8784   */\n      revert\n        /* \"#utility.yul\":8662:8794   */\n    tag_521:\n      pop\n        /* \"#utility.yul\":8808:8817   */\n      div\n      swap1\n        /* \"#utility.yul\":8606:8823   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab85f0542cd11c51f3e18c8037bd49f28e828f82b915f7208c0e0cf6fdcfb53364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_516": {
									"entryPoint": 483,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 547,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5788:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:1",
																"statements": []
															},
															"src": "3013:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:1",
														"type": ""
													}
												],
												"src": "2867:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:1"
															},
															"nodeType": "YulIf",
															"src": "3363:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:1"
															},
															"nodeType": "YulIf",
															"src": "3452:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:1"
															},
															"nodeType": "YulIf",
															"src": "3764:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:1"
															},
															"nodeType": "YulIf",
															"src": "3998:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:1",
														"type": ""
													}
												],
												"src": "3294:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4175:61:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4185:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4215:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4221:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4194:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:36:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4185:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4146:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4152:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4165:5:1",
														"type": ""
													}
												],
												"src": "4105:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4293:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4303:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4318:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4321:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4314:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4303:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4381:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4383:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4383:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4383:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4352:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4345:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4345:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4359:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4366:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4375:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4362:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4356:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4356:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4342:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4342:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4335:45:1"
															},
															"nodeType": "YulIf",
															"src": "4332:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4272:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4275:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4281:7:1",
														"type": ""
													}
												],
												"src": "4241:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4475:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4503:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4496:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4527:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4530:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4414:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4584:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4607:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4609:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4609:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4609:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4604:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:9:1"
															},
															"nodeType": "YulIf",
															"src": "4594:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4638:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4647:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4650:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "4643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4643:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4638:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4569:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4572:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4578:1:1",
														"type": ""
													}
												],
												"src": "4546:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4712:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4722:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4734:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4737:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4730:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4722:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4765:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4754:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4760:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:11:1"
															},
															"nodeType": "YulIf",
															"src": "4748:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4694:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4697:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4703:4:1",
														"type": ""
													}
												],
												"src": "4663:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4842:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4865:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4867:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4867:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4867:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4862:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:9:1"
															},
															"nodeType": "YulIf",
															"src": "4852:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4905:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4908:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4901:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4896:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4827:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4830:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4836:1:1",
														"type": ""
													}
												],
												"src": "4796:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5022:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5032:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5040:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5032:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5074:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5089:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5105:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5110:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5101:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5101:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5114:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5097:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5085:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5067:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5067:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4991:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5002:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5013:4:1",
														"type": ""
													}
												],
												"src": "4921:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5177:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5187:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5198:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5201:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5187:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5226:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5228:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5228:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5228:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5218:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5221:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5215:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:10:1"
															},
															"nodeType": "YulIf",
															"src": "5212:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5160:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5163:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5169:3:1",
														"type": ""
													}
												],
												"src": "5129:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5416:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5426:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5438:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5426:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5468:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5483:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5499:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5504:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5495:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5495:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5508:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5491:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5491:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5479:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5461:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5543:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5548:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5521:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5369:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5380:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5388:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5396:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5407:4:1",
														"type": ""
													}
												],
												"src": "5259:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5710:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5720:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5732:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5743:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5720:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5762:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5773:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5755:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5679:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5690:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5701:4:1",
														"type": ""
													}
												],
												"src": "5609:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a8054610100600160a81b03191633610100021790555f600d556015805460ff1916905534801562000035575f80fd5b506040518060400160405280600881526020016730b1319031b7b4b760c11b81525060405180604001604052806005815260200164435942434360d81b8152508160039081620000869190620003f2565b506004620000958282620003f2565b5050600a805460ff191660129081178255620000b3925090620005c9565b620000c390633b9aca00620005dd565b600b819055620000d5905f196200060b565b620000e2905f1962000621565b600c556002600e819055600f5560016010819055601155600a54601280546101009092046001600160a01b03166001600160a01b0319909216919091179055600b54620001329060649062000637565b6200013f906002620005dd565b601455600160075f6200015f600a5461010090046001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182015f908120805495151560ff199687161790556012548216815260078452828120805486166001908117909155308252838220805490961617909455600c54600a54610100900490911684526005909252909120819055620001dd903390620001e3565b62000663565b6001600160a01b038216620002125760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6200021f5f838362000223565b5050565b6001600160a01b03831662000251578060025f8282546200024591906200064d565b90915550620002c39050565b6001600160a01b0383165f9081526020819052604090205481811015620002a55760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000209565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620002e157600280548290039055620002ff565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200034591815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200037b57607f821691505b6020821081036200039a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620003ed575f81815260208120601f850160051c81016020861015620003c85750805b601f850160051c820191505b81811015620003e957828155600101620003d4565b5050505b505050565b81516001600160401b038111156200040e576200040e62000352565b62000426816200041f845462000366565b84620003a0565b602080601f8311600181146200045c575f8415620004445750858301515b5f19600386901b1c1916600185901b178555620003e9565b5f85815260208120601f198616915b828110156200048c578886015182559484019460019091019084016200046b565b5085821015620004aa57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200050e57815f1904821115620004f257620004f2620004ba565b808516156200050057918102915b93841c9390800290620004d3565b509250929050565b5f826200052657506001620005c3565b816200053457505f620005c3565b81600181146200054d5760028114620005585762000578565b6001915050620005c3565b60ff8411156200056c576200056c620004ba565b50506001821b620005c3565b5060208310610133831016604e8410600b84101617156200059d575081810a620005c3565b620005a98383620004ce565b805f1904821115620005bf57620005bf620004ba565b0290505b92915050565b5f620005d6838362000516565b9392505050565b8082028115828204841417620005c357620005c3620004ba565b634e487b7160e01b5f52601260045260245ffd5b5f826200061c576200061c620005f7565b500690565b81810381811115620005c357620005c3620004ba565b5f82620006485762000648620005f7565b500490565b80820180821115620005c357620005c3620004ba565b611a2a80620006715f395ff3fe608060405260043610610198575f3560e01c806370a08231116100e7578063a9059cbb11610087578063dd62ed3e11610062578063dd62ed3e1461048d578063f2fde38b146104d1578063f66608fe146104f0578063fdeb889f14610504575f80fd5b8063a9059cbb1461041a578063cba0e99614610439578063d12dc1c114610470575f80fd5b80638873b15f116100c25780638873b15f146103925780638da5cb5b146103b157806395d89b41146103e7578063a8b08982146103fb575f80fd5b806370a082311461034b578063715018a61461036a57806383ad79941461037e575f80fd5b806332035504116101525780635342acb41161012d5780635342acb4146102cd5780635c7ffc88146103045780636049876e1461031857806360c3ae8414610337575f80fd5b8063320355041461027b578063437823ec1461028f5780634549b039146102ae575f80fd5b8063053ab182146101a357806306fdde03146101c4578063095ea7b3146101ee57806318160ddd1461021d57806323b872dd1461023b578063313ce5671461025a575f80fd5b3661019f57005b5f80fd5b3480156101ae575f80fd5b506101c26101bd3660046117b2565b610523565b005b3480156101cf575f80fd5b506101d861060e565b6040516101e591906117c9565b60405180910390f35b3480156101f9575f80fd5b5061020d61020836600461182f565b61069e565b60405190151581526020016101e5565b348015610228575f80fd5b50600b545b6040519081526020016101e5565b348015610246575f80fd5b5061020d610255366004611857565b6106b7565b348015610265575f80fd5b50600a5460405160ff90911681526020016101e5565b348015610286575f80fd5b50600d5461022d565b34801561029a575f80fd5b506101c26102a9366004611890565b6106da565b3480156102b9575f80fd5b5061022d6102c83660046118a9565b610721565b3480156102d8575f80fd5b5061020d6102e7366004611890565b6001600160a01b03165f9081526007602052604090205460ff1690565b34801561030f575f80fd5b506101c26107a7565b348015610323575f80fd5b506101c2610332366004611890565b6107d8565b348015610342575f80fd5b506101c261091d565b348015610356575f80fd5b5061022d610365366004611890565b61094a565b348015610375575f80fd5b506101c26109a6565b348015610389575f80fd5b50600e5461022d565b34801561039d575f80fd5b506101c26103ac366004611890565b610a2b565b3480156103bc575f80fd5b50600a5461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101e5565b3480156103f2575f80fd5b506101d8610a6c565b348015610406575f80fd5b506013546103cf906001600160a01b031681565b348015610425575f80fd5b5061020d61043436600461182f565b610a7b565b348015610444575f80fd5b5061020d610453366004611890565b6001600160a01b03165f9081526008602052604090205460ff1690565b34801561047b575f80fd5b506012546001600160a01b03166103cf565b348015610498575f80fd5b5061022d6104a73660046118db565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156104dc575f80fd5b506101c26104eb366004611890565b610a88565b3480156104fb575f80fd5b5060105461022d565b34801561050f575f80fd5b506101c261051e366004611890565b610ace565b335f8181526008602052604090205460ff161561059c5760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6105a683610c74565b5050506001600160a01b0383165f908152600560205260409020549091506105cf908290611920565b6001600160a01b0383165f90815260056020526040902055600c546105f5908290611920565b600c55600d54610606908490611933565b600d55505050565b60606003805461061d90611946565b80601f016020809104026020016040519081016040528092919081815260200182805461064990611946565b80156106945780601f1061066b57610100808354040283529160200191610694565b820191905f5260205f20905b81548152906001019060200180831161067757829003601f168201915b5050505050905090565b5f336106ab818585610cc5565b60019150505b92915050565b5f336106c4858285610cd7565b6106cf858585610d53565b506001949350505050565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600b548311156107745760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610593565b81610790575f61078384610c74565b509193506106b192505050565b5f61079a84610c74565b509093506106b192505050565b600a54339061010090046001600160a01b03166001600160a01b0316036107d6576015805460ff191660011790555b565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f9081526008602052604090205460ff16156108615760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610593565b6001600160a01b0381165f90815260056020526040902054156108b8576001600160a01b0381165f9081526005602052604090205461089f90610f8a565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b600a54339061010090046001600160a01b03166001600160a01b0316036107d6576015805460ff19169055565b6001600160a01b0381165f9081526008602052604081205460ff161561098557506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546106b190610f8a565b600a54339061010090046001600160a01b03166001600160a01b0316036107d657600a5461010090046001600160a01b0316610a185760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481c995b9bdd5b98d959607a1b6044820152606401610593565b600a8054610100600160a81b0319169055565b600a54339061010090046001600160a01b03166001600160a01b03160361071e57601380546001600160a01b0383166001600160a01b031990911617905550565b60606004805461061d90611946565b5f336106ab818585610d53565b600a54339061010090046001600160a01b03166001600160a01b03160361071e57600a80546001600160a01b03831661010002610100600160a81b031990911617905550565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f9081526008602052604090205460ff16610b565760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c7564656400000000006044820152606401610593565b5f5b600954811015610c7057816001600160a01b031660098281548110610b7f57610b7f61197e565b5f918252602090912001546001600160a01b031603610c5e5760098054610ba890600190611920565b81548110610bb857610bb861197e565b5f91825260209091200154600980546001600160a01b039092169183908110610be357610be361197e565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600890925220805460ff191690556009805480610c3a57610c3a611992565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b80610c68816119a6565b915050610b58565b5050565b5f805f805f610c828661100c565b90505f610c8f8288611920565b90505f610c9a61103f565b90505f610ca782846119be565b90505f610cb4838b6119be565b9a9199509297509095509350505050565b610cd28383836001611060565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610d4d5781811015610d3f57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610593565b610d4d84848484035f611060565b50505050565b6001600160a01b038316610db75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610593565b6001600160a01b038216610e195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610593565b5f610e238461094a565b905081811015610e845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610593565b600a546001600160a01b038581166101009092041614801590610eb557506012546001600160a01b03858116911614155b8015610ec3575060155460ff165b15610f205760145482610ed58561094a565b610edf9190611933565b1115610f205760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b6044820152606401610593565b6013545f906001600160a01b0386811691161480610f4b57506013546001600160a01b038581169116145b15610f54575060015b6001600160a01b0385165f9081526007602052604090205460ff1615610f7757505f5b610f8385858584611132565b5050505050565b5f600c54821115610ff05760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610593565b5f610ff961103f565b905061100581846119d5565b9392505050565b5f80601054600e5461101e9190611933565b90505f606461102d83866119be565b61103791906119d5565b949350505050565b5f805f61104a6112a1565b909250905061105981836119d5565b9250505090565b6001600160a01b0384166110895760405163e602df0560e01b81525f6004820152602401610593565b6001600160a01b0383166110b257604051634a1406b160e11b81525f6004820152602401610593565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610d4d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161112491815260200190565b60405180910390a350505050565b8061113f5761113f61141b565b6001600160a01b0384165f9081526008602052604090205460ff16801561117e57506001600160a01b0383165f9081526008602052604090205460ff16155b156111935761118e848484611448565b61128b565b6001600160a01b0384165f9081526008602052604090205460ff161580156111d257506001600160a01b0383165f9081526008602052604090205460ff165b156111e25761118e848484611563565b6001600160a01b0384165f9081526008602052604090205460ff1615801561122257506001600160a01b0383165f9081526008602052604090205460ff16155b156112325761118e848484611602565b6001600160a01b0384165f9081526008602052604090205460ff16801561127057506001600160a01b0383165f9081526008602052604090205460ff165b156112805761118e84848461163c565b61128b848484611602565b80610d4d57610d4d600f54600e55601154601055565b600c54600b545f918291825b6009548110156113ea578260055f600984815481106112ce576112ce61197e565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061133657508160065f600984815481106113105761131061197e565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561134c57600c54600b54945094505050509091565b60055f600983815481106113625761136261197e565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546113909084611920565b925060065f600983815481106113a8576113a861197e565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546113d69083611920565b9150806113e2816119a6565b9150506112ad565b50600b54600c546113fb91906119d5565b82101561141257600c54600b549350935050509091565b90939092509050565b600e5415801561142b5750601054155b1561143257565b600e8054600f55601080546011555f9182905555565b5f805f8061145585610c74565b6001600160a01b038b165f9081526006602052604090205493975091955093509150611482908690611920565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546114b1908590611920565b6001600160a01b038089165f9081526005602052604080822093909355908816815220546114e0908490611933565b6001600160a01b0387165f908152600560205260409020556115038786836116a5565b61150d8582611760565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161155291815260200190565b60405180910390a350505050505050565b5f805f8061157085610c74565b6001600160a01b038b165f908152600560205260409020549397509195509350915061159d908590611920565b6001600160a01b038089165f908152600560209081526040808320949094559189168152600690915220546115d3908390611933565b6001600160a01b0387165f908152600660209081526040808320939093556005905220546114e0908490611933565b5f805f8061160f85610c74565b6001600160a01b038b165f90815260056020526040902054939750919550935091506114b1908590611920565b5f805f8061164985610c74565b6001600160a01b038b165f9081526006602052604090205493975091955093509150611676908690611920565b6001600160a01b0388165f9081526006602090815260408083209390935560059052205461159d908590611920565b5f6064601054846116b691906119be565b6116c091906119d5565b90508015610d4d575f6116d383836119be565b6012546001600160a01b03165f908152600560205260409020549091506116fb908290611933565b601280546001600160a01b039081165f90815260056020908152604091829020949094559154915185815291811692908816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050505050565b5f6064600e548461177191906119be565b61177b91906119d5565b90505f61178883836119be565b905080600c546117989190611920565b600c55600d546117a9908390611933565b600d5550505050565b5f602082840312156117c2575f80fd5b5035919050565b5f6020808352835180828501525f5b818110156117f4578581018301518582016040015282016117d8565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461182a575f80fd5b919050565b5f8060408385031215611840575f80fd5b61184983611814565b946020939093013593505050565b5f805f60608486031215611869575f80fd5b61187284611814565b925061188060208501611814565b9150604084013590509250925092565b5f602082840312156118a0575f80fd5b61100582611814565b5f80604083850312156118ba575f80fd5b82359150602083013580151581146118d0575f80fd5b809150509250929050565b5f80604083850312156118ec575f80fd5b6118f583611814565b915061190360208401611814565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106b1576106b161190c565b808201808211156106b1576106b161190c565b600181811c9082168061195a57607f821691505b60208210810361197857634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f600182016119b7576119b761190c565b5060010190565b80820281158282048414176106b1576106b161190c565b5f826119ef57634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220ab85f0542cd11c51f3e18c8037bd49f28e828f82b915f7208c0e0cf6fdcfb53364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH0 PUSH1 0xD SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x30B1319031B7B4B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4359424343 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x86 SWAP2 SWAP1 PUSH3 0x3F2 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x95 DUP3 DUP3 PUSH3 0x3F2 JUMP JUMPDEST POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR DUP3 SSTORE PUSH3 0xB3 SWAP3 POP SWAP1 PUSH3 0x5C9 JUMP JUMPDEST PUSH3 0xC3 SWAP1 PUSH4 0x3B9ACA00 PUSH3 0x5DD JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH3 0xD5 SWAP1 PUSH0 NOT PUSH3 0x60B JUMP JUMPDEST PUSH3 0xE2 SWAP1 PUSH0 NOT PUSH3 0x621 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x2 PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0xF SSTORE PUSH1 0x1 PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 SSTORE PUSH1 0xA SLOAD PUSH1 0x12 DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH3 0x132 SWAP1 PUSH1 0x64 SWAP1 PUSH3 0x637 JUMP JUMPDEST PUSH3 0x13F SWAP1 PUSH1 0x2 PUSH3 0x5DD JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH3 0x15F PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x12 SLOAD DUP3 AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD DUP7 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADDRESS DUP3 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH3 0x1DD SWAP1 CALLER SWAP1 PUSH3 0x1E3 JUMP JUMPDEST PUSH3 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x21F PUSH0 DUP4 DUP4 PUSH3 0x223 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x251 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x245 SWAP2 SWAP1 PUSH3 0x64D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x2C3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x209 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2E1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x345 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x37B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x39A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3ED JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3C8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3E9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3D4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x40E JUMPI PUSH3 0x40E PUSH3 0x352 JUMP JUMPDEST PUSH3 0x426 DUP2 PUSH3 0x41F DUP5 SLOAD PUSH3 0x366 JUMP JUMPDEST DUP5 PUSH3 0x3A0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x45C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x444 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3E9 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x48C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x46B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4AA JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x50E JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4F2 PUSH3 0x4BA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x500 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4D3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x526 JUMPI POP PUSH1 0x1 PUSH3 0x5C3 JUMP JUMPDEST DUP2 PUSH3 0x534 JUMPI POP PUSH0 PUSH3 0x5C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x54D JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x558 JUMPI PUSH3 0x578 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x5C3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56C PUSH3 0x4BA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x5C3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x59D JUMPI POP DUP2 DUP2 EXP PUSH3 0x5C3 JUMP JUMPDEST PUSH3 0x5A9 DUP4 DUP4 PUSH3 0x4CE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x5BF JUMPI PUSH3 0x5BF PUSH3 0x4BA JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5D6 DUP4 DUP4 PUSH3 0x516 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x5C3 JUMPI PUSH3 0x5C3 PUSH3 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH3 0x61C JUMPI PUSH3 0x61C PUSH3 0x5F7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x5C3 JUMPI PUSH3 0x5C3 PUSH3 0x4BA JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x648 JUMPI PUSH3 0x648 PUSH3 0x5F7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x5C3 JUMPI PUSH3 0x5C3 PUSH3 0x4BA JUMP JUMPDEST PUSH2 0x1A2A DUP1 PUSH3 0x671 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x504 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xD12DC1C1 EQ PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8873B15F GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32035504 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x5342ACB4 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x5C7FFC88 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x60C3AE84 EQ PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32035504 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x7A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0xA6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x3CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A6 DUP4 PUSH2 0xC74 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x5CF SWAP1 DUP3 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xC SLOAD PUSH2 0x5F5 SWAP1 DUP3 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x606 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x1946 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH2 0x1946 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x694 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x694 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x677 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6AB DUP2 DUP6 DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6C4 DUP6 DUP3 DUP6 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x6CF DUP6 DUP6 DUP6 PUSH2 0xD53 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH0 PUSH2 0x783 DUP5 PUSH2 0xC74 JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x6B1 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79A DUP5 PUSH2 0xC74 JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x6B1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x89F SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x985 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481C995B9BDD5B98D959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x1946 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6AB DUP2 DUP6 DUP6 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xC70 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB7F JUMPI PUSH2 0xB7F PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC5E JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xBA8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1920 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBB8 JUMPI PUSH2 0xBB8 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0xC3A JUMPI PUSH2 0xC3A PUSH2 0x1992 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xC68 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0xC82 DUP7 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8F DUP3 DUP9 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC9A PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCA7 DUP3 DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCB4 DUP4 DUP12 PUSH2 0x19BE JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCD2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1060 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xD4D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH2 0xD4D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1060 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 PUSH2 0xE23 DUP5 PUSH2 0x94A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ DUP1 ISZERO SWAP1 PUSH2 0xEB5 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEC3 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x14 SLOAD DUP3 PUSH2 0xED5 DUP6 PUSH2 0x94A JUMP JUMPDEST PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST GT ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xF4B JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF54 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF77 JUMPI POP PUSH0 JUMPDEST PUSH2 0xF83 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1132 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP3 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 DUP2 DUP5 PUSH2 0x19D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x102D DUP4 DUP7 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x104A PUSH2 0x12A1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1059 DUP2 DUP4 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD4D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x113F JUMPI PUSH2 0x113F PUSH2 0x141B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x117E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1193 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1222 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1232 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1270 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1280 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x128B DUP5 DUP5 DUP5 PUSH2 0x1602 JUMP JUMPDEST DUP1 PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH1 0xF SLOAD PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x13EA JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12CE JUMPI PUSH2 0x12CE PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x1336 JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1310 JUMPI PUSH2 0x1310 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x134C JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1362 JUMPI PUSH2 0x1362 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1390 SWAP1 DUP5 PUSH2 0x1920 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13A8 JUMPI PUSH2 0x13A8 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x13D6 SWAP1 DUP4 PUSH2 0x1920 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x13E2 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12AD JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1412 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO DUP1 ISZERO PUSH2 0x142B JUMPI POP PUSH1 0x10 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1432 JUMPI JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x11 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1455 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1482 SWAP1 DUP7 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14B1 SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1503 DUP8 DUP7 DUP4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x150D DUP6 DUP3 PUSH2 0x1760 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1552 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1570 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x159D SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x15D3 SWAP1 DUP4 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x160F DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x14B1 SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1649 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1676 SWAP1 DUP7 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x159D SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0x16B6 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH0 PUSH2 0x16D3 DUP4 DUP4 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x16FB SWAP1 DUP3 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP2 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP2 AND SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xE SLOAD DUP5 PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1788 DUP4 DUP4 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x17A9 SWAP1 DUP4 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x182A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1849 DUP4 PUSH2 0x1814 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1872 DUP5 PUSH2 0x1814 JUMP JUMPDEST SWAP3 POP PUSH2 0x1880 PUSH1 0x20 DUP6 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1005 DUP3 PUSH2 0x1814 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18F5 DUP4 PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP PUSH2 0x1903 PUSH1 0x20 DUP5 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x195A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x190C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x19EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB DUP6 CREATE SLOAD 0x2C 0xD1 SHR MLOAD RETURN 0xE1 DUP13 DUP1 CALLDATACOPY 0xBD 0x49 CALLCODE DUP15 DUP3 DUP16 DUP3 0xB9 ISZERO 0xF7 KECCAK256 DUP13 0xE 0xC 0xF6 REVERT 0xCF 0xB5 CALLER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "17775:12647:0:-:0;;;18078:35;;;-1:-1:-1;;;;;;18078:35:0;18103:10;18078:35;;;;;-1:-1:-1;18229:30:0;;18540:22;;;-1:-1:-1;;18540:22:0;;;18569:675;;;;;;;;;;8096:113;;;;;;;;;;;;;-1:-1:-1;;;8096:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;8096:113:0;;;8170:5;8162;:13;;;;;;:::i;:::-;-1:-1:-1;8185:7:0;:17;8195:7;8185;:17;:::i;:::-;-1:-1:-1;;18620:9:0::1;:14:::0;;-1:-1:-1;;18620:14:0::1;18632:2;18620:14:::0;;::::1;::::0;;18668:22:::1;::::0;-1:-1:-1;18632:2:0;18668:22:::1;:::i;:::-;18655:35;::::0;:10:::1;:35;:::i;:::-;18645:7;:45:::0;;;18719:13:::1;::::0;-1:-1:-1;;18719:13:0::1;:::i;:::-;18712:21;::::0;-1:-1:-1;;18712:21:0::1;:::i;:::-;18701:7;:33:::0;18762:1:::1;18745:14;:18:::0;;;18774:22:::1;:39:::0;18834:1:::1;18824:7;:11:::0;;;18846:15:::1;:25:::0;18916:6:::1;::::0;18882:31:::1;:40:::0;;18916:6:::1;::::0;;::::1;-1:-1:-1::0;;;;;18916:6:0::1;-1:-1:-1::0;;;;;;18882:40:0;;::::1;::::0;;;::::1;::::0;;18985:7:::1;::::0;:13:::1;::::0;18995:3:::1;::::0;18985:13:::1;:::i;:::-;18980:19;::::0;:1:::1;:19;:::i;:::-;18962:15;:37:::0;19040:4:::1;19010:18;:27;19029:7;19357:6:::0;;;;;-1:-1:-1;;;;;19357:6:0;;19285:85;19029:7:::1;-1:-1:-1::0;;;;;19010:27:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;19010:27:0;;;:34;;;::::1;;-1:-1:-1::0;;19010:34:0;;::::1;;::::0;;19074:31:::1;::::0;;::::1;19055:51:::0;;:18:::1;:51:::0;;;;;:58;;;::::1;19010:34:::0;19055:58;;::::1;::::0;;;19151:4:::1;19124:33:::0;;;;;:40;;;;::::1;;::::0;;;19193:7:::1;::::0;19183:6:::1;::::0;19010:34:::1;19183:6:::0;::::1;::::0;;::::1;19175:15:::0;;:7:::1;:15:::0;;;;;;:25;;;19211:26:::1;::::0;19217:10:::1;::::0;19211:5:::1;:26::i;:::-;17775:12647:::0;;14115:208;-1:-1:-1;;;;;14185:21:0;;14181:91;;14229:32;;-1:-1:-1;;;14229:32:0;;14258:1;14229:32;;;5067:51:1;5040:18;;14229:32:0;;;;;;;;14181:91;14281:35;14297:1;14301:7;14310:5;14281:7;:35::i;:::-;14115:208;;:::o;12635:1137::-;-1:-1:-1;;;;;12754:18:0;;12750:540;;12906:5;12890:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;12750:540:0;;-1:-1:-1;12750:540:0;;-1:-1:-1;;;;;12964:15:0;;12942:19;12964:15;;;;;;;;;;;12997:19;;;12993:115;;;13043:50;;-1:-1:-1;;;13043:50:0;;-1:-1:-1;;;;;5479:32:1;;13043:50:0;;;5461:51:1;5528:18;;;5521:34;;;5571:18;;;5564:34;;;5434:18;;13043:50:0;5259:345:1;12993:115:0;-1:-1:-1;;;;;13228:15:0;;:9;:15;;;;;;;;;;13246:19;;;;13228:37;;12750:540;-1:-1:-1;;;;;13304:16:0;;13300:425;;13467:12;:21;;;;;;;13300:425;;;-1:-1:-1;;;;;13678:13:0;;:9;:13;;;;;;;;;;:22;;;;;;13300:425;13755:2;-1:-1:-1;;;;;13740:25:0;13749:4;-1:-1:-1;;;;;13740:25:0;;13759:5;13740:25;;;;5755::1;;5743:2;5728:18;;5609:177;13740:25:0;;;;;;;;12635:1137;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:1;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:1;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:1;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:1;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:1;;;;;:::o;4105:131::-;4165:5;4194:36;4221:8;4215:4;4194:36;:::i;:::-;4185:45;4105:131;-1:-1:-1;;;4105:131:1:o;4241:168::-;4314:9;;;4345;;4362:15;;;4356:22;;4342:37;4332:71;;4383:18;;:::i;4414:127::-;4475:10;4470:3;4466:20;4463:1;4456:31;4506:4;4503:1;4496:15;4530:4;4527:1;4520:15;4546:112;4578:1;4604;4594:35;;4609:18;;:::i;:::-;-1:-1:-1;4643:9:1;;4546:112::o;4663:128::-;4730:9;;;4751:11;;;4748:37;;;4765:18;;:::i;4796:120::-;4836:1;4862;4852:35;;4867:18;;:::i;:::-;-1:-1:-1;4901:9:1;;4796:120::o;5129:125::-;5194:9;;;5215:10;;;5212:36;;;5228:18;;:::i;5609:177::-;17775:12647:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_567": {
									"entryPoint": 3269,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 4192,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getCompleteTaxValue_1754": {
									"entryPoint": 4108,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getCurrentSupply_1940": {
									"entryPoint": 4769,
									"id": 1940,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_1855": {
									"entryPoint": 4159,
									"id": 1855,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTransferValues_1803": {
									"entryPoint": 3188,
									"id": 1803,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_1838": {
									"entryPoint": 5984,
									"id": 1838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_675": {
									"entryPoint": 3287,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tokenTransfer_1412": {
									"entryPoint": 4402,
									"id": 1412,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1729": {
									"entryPoint": 5692,
									"id": 1729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1650": {
									"entryPoint": 5192,
									"id": 1650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferStandard_1512": {
									"entryPoint": 5634,
									"id": 1512,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1581": {
									"entryPoint": 5475,
									"id": 1581,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1315": {
									"entryPoint": 3411,
									"id": 1315,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 1694,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": 2378,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changePairAddress_977": {
									"entryPoint": 2603,
									"id": 977,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_862": {
									"entryPoint": null,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disbleAntiWhale_1215": {
									"entryPoint": 2333,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableAntiWhale_1205": {
									"entryPoint": 1959,
									"id": 1205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@excludeAccountFromReward_1131": {
									"entryPoint": 2008,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromFee_965": {
									"entryPoint": 1754,
									"id": 965,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getMarketingAndDevelopmentAccount_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@includeAccountinReward_1195": {
									"entryPoint": 2766,
									"id": 1195,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isExcludedFromFee_907": {
									"entryPoint": null,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_222": {
									"entryPoint": 1550,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_730": {
									"entryPoint": null,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reflect_1024": {
									"entryPoint": 1315,
									"id": 1024,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reflectionFee_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflectionFromToken_1062": {
									"entryPoint": 1825,
									"id": 1062,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_1441": {
									"entryPoint": 5147,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_1963": {
									"entryPoint": 2470,
									"id": 1963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_1453": {
									"entryPoint": null,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_231": {
									"entryPoint": 2668,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFeeTransfer_2021": {
									"entryPoint": 5797,
									"id": 2021,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenFromReflection_1086": {
									"entryPoint": 3978,
									"id": 1086,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFeesRedistributed_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_871": {
									"entryPoint": null,
									"id": 871,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 1719,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1975": {
									"entryPoint": 2696,
									"id": 1975,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_286": {
									"entryPoint": 2683,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b53bdb152a23f76fad642d2f477f012cffcad63f25bb0bd964f66c744b5e63c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8825:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "340:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "369:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "351:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "401:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "385:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "439:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "444:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "460:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "469:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "464:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "558:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "569:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "554:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "554:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "573:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "550:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "550:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "592:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "600:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "588:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "588:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "604:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "584:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "584:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "578:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "543:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "543:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "490:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "487:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "501:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "503:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "512:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "515:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "508:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "508:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "503:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "483:3:1",
																"statements": []
															},
															"src": "479:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "643:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "639:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "639:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "668:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "628:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "679:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "695:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "714:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "710:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "710:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "731:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "727:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "727:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "706:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "706:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "289:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "300:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "311:4:1",
														"type": ""
													}
												],
												"src": "199:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "801:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "811:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "833:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "820:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "811:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "905:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "905:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "862:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "888:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "893:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "884:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "884:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "897:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "880:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "880:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "859:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "859:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:50:1"
															},
															"nodeType": "YulIf",
															"src": "849:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "780:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "791:5:1",
														"type": ""
													}
												],
												"src": "752:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1017:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1063:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1072:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1075:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1065:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1065:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1065:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1038:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1047:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:32:1"
															},
															"nodeType": "YulIf",
															"src": "1027:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1088:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1117:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1098:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1136:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1159:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1146:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "975:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "986:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "998:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1006:6:1",
														"type": ""
													}
												],
												"src": "930:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1284:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1294:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1306:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1294:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1336:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1361:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1354:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1347:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1329:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1253:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1264:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1275:4:1",
														"type": ""
													}
												],
												"src": "1189:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1492:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1504:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1492:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1545:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1462:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1473:4:1",
														"type": ""
													}
												],
												"src": "1381:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1667:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1713:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1725:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1715:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1715:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1688:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1697:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:32:1"
															},
															"nodeType": "YulIf",
															"src": "1677:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1738:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1767:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1748:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1786:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1796:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1843:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1881:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1853:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1617:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1628:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1648:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1656:6:1",
														"type": ""
													}
												],
												"src": "1563:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2003:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2015:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1962:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1984:4:1",
														"type": ""
													}
												],
												"src": "1896:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2360:257:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2406:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2415:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2408:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2408:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2408:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2381:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2402:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:32:1"
															},
															"nodeType": "YulIf",
															"src": "2370:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2431:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2454:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2441:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2473:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2477:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2571:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2580:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2573:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2573:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2540:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2561:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2554:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2554:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2547:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2547:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2537:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2537:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:40:1"
															},
															"nodeType": "YulIf",
															"src": "2527:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2596:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2606:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2318:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2329:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2341:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2349:6:1",
														"type": ""
													}
												],
												"src": "2276:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2723:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2733:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2745:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2756:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2733:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2790:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2806:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2811:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2802:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2802:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2815:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2798:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2798:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2768:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2768:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2692:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2703:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2714:4:1",
														"type": ""
													}
												],
												"src": "2622:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2917:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2938:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2947:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2959:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:32:1"
															},
															"nodeType": "YulIf",
															"src": "2927:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2988:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2998:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3036:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3069:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3080:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3065:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3046:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3046:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2875:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2886:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2898:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2906:6:1",
														"type": ""
													}
												],
												"src": "2830:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3269:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3286:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3279:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3320:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3331:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3316:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:1"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3375:34:1",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3441:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:18:1"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3446:14:1",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3470:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3482:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3493:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3478:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3470:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3246:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3260:4:1",
														"type": ""
													}
												],
												"src": "3095:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3540:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3564:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3569:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3550:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3597:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3600:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3590:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3624:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3508:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3689:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3699:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3711:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3714:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3699:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3740:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3742:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3742:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3742:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3731:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3737:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3728:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:11:1"
															},
															"nodeType": "YulIf",
															"src": "3725:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3671:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3674:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3680:4:1",
														"type": ""
													}
												],
												"src": "3640:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3842:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3845:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3870:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3872:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3872:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3872:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3862:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3865:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3859:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:10:1"
															},
															"nodeType": "YulIf",
															"src": "3856:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3804:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3807:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3813:3:1",
														"type": ""
													}
												],
												"src": "3773:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3958:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3968:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3985:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3978:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3978:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3999:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4029:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4003:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4076:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4078:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4092:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4100:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4088:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4088:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4078:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4056:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:26:1"
															},
															"nodeType": "YulIf",
															"src": "4046:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4166:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4187:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4194:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4199:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4190:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4190:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4180:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4180:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4180:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4231:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4234:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4224:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4224:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4259:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4262:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4252:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4252:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4122:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4145:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4153:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4142:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4119:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:38:1"
															},
															"nodeType": "YulIf",
															"src": "4116:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3938:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3947:6:1",
														"type": ""
													}
												],
												"src": "3903:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4462:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4472:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4472:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4524:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4529:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4502:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4563:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:18:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4568:33:1",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4541:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4611:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4611:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4439:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4453:4:1",
														"type": ""
													}
												],
												"src": "4288:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4873:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4884:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4869:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4862:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4923:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4908:18:1"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4928:29:1",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4799:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4813:4:1",
														"type": ""
													}
												],
												"src": "4648:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5240:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:18:1"
																	},
																	{
																		"hexValue": "616c72656164792072656e6f756e636564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5284:19:1",
																		"type": "",
																		"value": "already renounced"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5313:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b53bdb152a23f76fad642d2f477f012cffcad63f25bb0bd964f66c744b5e63c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:1",
														"type": ""
													}
												],
												"src": "5004:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:29:1",
																		"type": "",
																		"value": "Account is already included"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5669:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:1",
														"type": ""
													}
												],
												"src": "5350:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5738:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5762:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5767:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5758:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5748:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5788:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5819:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5822:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5812:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5706:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5870:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5887:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5894:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5890:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5930:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5920:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5954:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5944:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "5838:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6017:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6048:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6050:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6050:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6050:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6033:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6044:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6030:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:17:1"
															},
															"nodeType": "YulIf",
															"src": "6027:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6090:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6097:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6009:3:1",
														"type": ""
													}
												],
												"src": "5970:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6162:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6172:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6187:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6190:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6172:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6250:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6252:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6252:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6252:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6221:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6214:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6214:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6228:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6235:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6244:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6231:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6225:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6225:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6211:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:45:1"
															},
															"nodeType": "YulIf",
															"src": "6201:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6141:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6144:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6150:7:1",
														"type": ""
													}
												],
												"src": "6110:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6450:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6462:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6473:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6458:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6450:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6492:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6507:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6523:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6528:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6519:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6519:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6532:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6515:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6515:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6503:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6485:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6485:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6556:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6567:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6552:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6572:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6545:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6610:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6595:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6588:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6393:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6404:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6412:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6420:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6431:4:1",
														"type": ""
													}
												],
												"src": "6283:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6807:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6817:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6869:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6854:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6908:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6893:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6913:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6886:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6979:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6964:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6984:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6957:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7001:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7024:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7001:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6784:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6798:4:1",
														"type": ""
													}
												],
												"src": "6633:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7213:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7260:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7280:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7314:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7299:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7319:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7292:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7385:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7370:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7390:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7363:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7405:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7417:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7428:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7405:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7190:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7204:4:1",
														"type": ""
													}
												],
												"src": "7039:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7617:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7627:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7679:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7657:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7723:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7778:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7789:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7774:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7794:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7767:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7812:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7820:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7812:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7594:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7608:4:1",
														"type": ""
													}
												],
												"src": "7443:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8024:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8064:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8110:18:1"
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8130:18:1",
																		"type": "",
																		"value": "Whale detected!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8103:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8181:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8158:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8015:4:1",
														"type": ""
													}
												],
												"src": "7850:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8369:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8386:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8397:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8379:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8431:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8416:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8436:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8409:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8409:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8470:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8455:18:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8475:34:1",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8448:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8448:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8530:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8541:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8526:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8526:18:1"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8546:12:1",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8519:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8519:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8568:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8580:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8591:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8576:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8568:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8346:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8360:4:1",
														"type": ""
													}
												],
												"src": "8195:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8652:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8683:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8704:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8711:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8716:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8707:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8707:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8697:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8697:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8697:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8748:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8751:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8741:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8741:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8741:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8779:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8672:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:9:1"
															},
															"nodeType": "YulIf",
															"src": "8662:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8803:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8812:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8815:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8808:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8803:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8637:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8640:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8646:1:1",
														"type": ""
													}
												],
												"src": "8606:217:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b53bdb152a23f76fad642d2f477f012cffcad63f25bb0bd964f66c744b5e63c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"already renounced\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already included\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Whale detected!!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610198575f3560e01c806370a08231116100e7578063a9059cbb11610087578063dd62ed3e11610062578063dd62ed3e1461048d578063f2fde38b146104d1578063f66608fe146104f0578063fdeb889f14610504575f80fd5b8063a9059cbb1461041a578063cba0e99614610439578063d12dc1c114610470575f80fd5b80638873b15f116100c25780638873b15f146103925780638da5cb5b146103b157806395d89b41146103e7578063a8b08982146103fb575f80fd5b806370a082311461034b578063715018a61461036a57806383ad79941461037e575f80fd5b806332035504116101525780635342acb41161012d5780635342acb4146102cd5780635c7ffc88146103045780636049876e1461031857806360c3ae8414610337575f80fd5b8063320355041461027b578063437823ec1461028f5780634549b039146102ae575f80fd5b8063053ab182146101a357806306fdde03146101c4578063095ea7b3146101ee57806318160ddd1461021d57806323b872dd1461023b578063313ce5671461025a575f80fd5b3661019f57005b5f80fd5b3480156101ae575f80fd5b506101c26101bd3660046117b2565b610523565b005b3480156101cf575f80fd5b506101d861060e565b6040516101e591906117c9565b60405180910390f35b3480156101f9575f80fd5b5061020d61020836600461182f565b61069e565b60405190151581526020016101e5565b348015610228575f80fd5b50600b545b6040519081526020016101e5565b348015610246575f80fd5b5061020d610255366004611857565b6106b7565b348015610265575f80fd5b50600a5460405160ff90911681526020016101e5565b348015610286575f80fd5b50600d5461022d565b34801561029a575f80fd5b506101c26102a9366004611890565b6106da565b3480156102b9575f80fd5b5061022d6102c83660046118a9565b610721565b3480156102d8575f80fd5b5061020d6102e7366004611890565b6001600160a01b03165f9081526007602052604090205460ff1690565b34801561030f575f80fd5b506101c26107a7565b348015610323575f80fd5b506101c2610332366004611890565b6107d8565b348015610342575f80fd5b506101c261091d565b348015610356575f80fd5b5061022d610365366004611890565b61094a565b348015610375575f80fd5b506101c26109a6565b348015610389575f80fd5b50600e5461022d565b34801561039d575f80fd5b506101c26103ac366004611890565b610a2b565b3480156103bc575f80fd5b50600a5461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101e5565b3480156103f2575f80fd5b506101d8610a6c565b348015610406575f80fd5b506013546103cf906001600160a01b031681565b348015610425575f80fd5b5061020d61043436600461182f565b610a7b565b348015610444575f80fd5b5061020d610453366004611890565b6001600160a01b03165f9081526008602052604090205460ff1690565b34801561047b575f80fd5b506012546001600160a01b03166103cf565b348015610498575f80fd5b5061022d6104a73660046118db565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156104dc575f80fd5b506101c26104eb366004611890565b610a88565b3480156104fb575f80fd5b5060105461022d565b34801561050f575f80fd5b506101c261051e366004611890565b610ace565b335f8181526008602052604090205460ff161561059c5760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6105a683610c74565b5050506001600160a01b0383165f908152600560205260409020549091506105cf908290611920565b6001600160a01b0383165f90815260056020526040902055600c546105f5908290611920565b600c55600d54610606908490611933565b600d55505050565b60606003805461061d90611946565b80601f016020809104026020016040519081016040528092919081815260200182805461064990611946565b80156106945780601f1061066b57610100808354040283529160200191610694565b820191905f5260205f20905b81548152906001019060200180831161067757829003601f168201915b5050505050905090565b5f336106ab818585610cc5565b60019150505b92915050565b5f336106c4858285610cd7565b6106cf858585610d53565b506001949350505050565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600b548311156107745760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610593565b81610790575f61078384610c74565b509193506106b192505050565b5f61079a84610c74565b509093506106b192505050565b600a54339061010090046001600160a01b03166001600160a01b0316036107d6576015805460ff191660011790555b565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f9081526008602052604090205460ff16156108615760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610593565b6001600160a01b0381165f90815260056020526040902054156108b8576001600160a01b0381165f9081526005602052604090205461089f90610f8a565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b600a54339061010090046001600160a01b03166001600160a01b0316036107d6576015805460ff19169055565b6001600160a01b0381165f9081526008602052604081205460ff161561098557506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546106b190610f8a565b600a54339061010090046001600160a01b03166001600160a01b0316036107d657600a5461010090046001600160a01b0316610a185760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481c995b9bdd5b98d959607a1b6044820152606401610593565b600a8054610100600160a81b0319169055565b600a54339061010090046001600160a01b03166001600160a01b03160361071e57601380546001600160a01b0383166001600160a01b031990911617905550565b60606004805461061d90611946565b5f336106ab818585610d53565b600a54339061010090046001600160a01b03166001600160a01b03160361071e57600a80546001600160a01b03831661010002610100600160a81b031990911617905550565b600a54339061010090046001600160a01b03166001600160a01b03160361071e576001600160a01b0381165f9081526008602052604090205460ff16610b565760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c7564656400000000006044820152606401610593565b5f5b600954811015610c7057816001600160a01b031660098281548110610b7f57610b7f61197e565b5f918252602090912001546001600160a01b031603610c5e5760098054610ba890600190611920565b81548110610bb857610bb861197e565b5f91825260209091200154600980546001600160a01b039092169183908110610be357610be361197e565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600890925220805460ff191690556009805480610c3a57610c3a611992565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b80610c68816119a6565b915050610b58565b5050565b5f805f805f610c828661100c565b90505f610c8f8288611920565b90505f610c9a61103f565b90505f610ca782846119be565b90505f610cb4838b6119be565b9a9199509297509095509350505050565b610cd28383836001611060565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610d4d5781811015610d3f57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610593565b610d4d84848484035f611060565b50505050565b6001600160a01b038316610db75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610593565b6001600160a01b038216610e195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610593565b5f610e238461094a565b905081811015610e845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610593565b600a546001600160a01b038581166101009092041614801590610eb557506012546001600160a01b03858116911614155b8015610ec3575060155460ff165b15610f205760145482610ed58561094a565b610edf9190611933565b1115610f205760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b6044820152606401610593565b6013545f906001600160a01b0386811691161480610f4b57506013546001600160a01b038581169116145b15610f54575060015b6001600160a01b0385165f9081526007602052604090205460ff1615610f7757505f5b610f8385858584611132565b5050505050565b5f600c54821115610ff05760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610593565b5f610ff961103f565b905061100581846119d5565b9392505050565b5f80601054600e5461101e9190611933565b90505f606461102d83866119be565b61103791906119d5565b949350505050565b5f805f61104a6112a1565b909250905061105981836119d5565b9250505090565b6001600160a01b0384166110895760405163e602df0560e01b81525f6004820152602401610593565b6001600160a01b0383166110b257604051634a1406b160e11b81525f6004820152602401610593565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610d4d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161112491815260200190565b60405180910390a350505050565b8061113f5761113f61141b565b6001600160a01b0384165f9081526008602052604090205460ff16801561117e57506001600160a01b0383165f9081526008602052604090205460ff16155b156111935761118e848484611448565b61128b565b6001600160a01b0384165f9081526008602052604090205460ff161580156111d257506001600160a01b0383165f9081526008602052604090205460ff165b156111e25761118e848484611563565b6001600160a01b0384165f9081526008602052604090205460ff1615801561122257506001600160a01b0383165f9081526008602052604090205460ff16155b156112325761118e848484611602565b6001600160a01b0384165f9081526008602052604090205460ff16801561127057506001600160a01b0383165f9081526008602052604090205460ff165b156112805761118e84848461163c565b61128b848484611602565b80610d4d57610d4d600f54600e55601154601055565b600c54600b545f918291825b6009548110156113ea578260055f600984815481106112ce576112ce61197e565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061133657508160065f600984815481106113105761131061197e565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561134c57600c54600b54945094505050509091565b60055f600983815481106113625761136261197e565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546113909084611920565b925060065f600983815481106113a8576113a861197e565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546113d69083611920565b9150806113e2816119a6565b9150506112ad565b50600b54600c546113fb91906119d5565b82101561141257600c54600b549350935050509091565b90939092509050565b600e5415801561142b5750601054155b1561143257565b600e8054600f55601080546011555f9182905555565b5f805f8061145585610c74565b6001600160a01b038b165f9081526006602052604090205493975091955093509150611482908690611920565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546114b1908590611920565b6001600160a01b038089165f9081526005602052604080822093909355908816815220546114e0908490611933565b6001600160a01b0387165f908152600560205260409020556115038786836116a5565b61150d8582611760565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161155291815260200190565b60405180910390a350505050505050565b5f805f8061157085610c74565b6001600160a01b038b165f908152600560205260409020549397509195509350915061159d908590611920565b6001600160a01b038089165f908152600560209081526040808320949094559189168152600690915220546115d3908390611933565b6001600160a01b0387165f908152600660209081526040808320939093556005905220546114e0908490611933565b5f805f8061160f85610c74565b6001600160a01b038b165f90815260056020526040902054939750919550935091506114b1908590611920565b5f805f8061164985610c74565b6001600160a01b038b165f9081526006602052604090205493975091955093509150611676908690611920565b6001600160a01b0388165f9081526006602090815260408083209390935560059052205461159d908590611920565b5f6064601054846116b691906119be565b6116c091906119d5565b90508015610d4d575f6116d383836119be565b6012546001600160a01b03165f908152600560205260409020549091506116fb908290611933565b601280546001600160a01b039081165f90815260056020908152604091829020949094559154915185815291811692908816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050505050565b5f6064600e548461177191906119be565b61177b91906119d5565b90505f61178883836119be565b905080600c546117989190611920565b600c55600d546117a9908390611933565b600d5550505050565b5f602082840312156117c2575f80fd5b5035919050565b5f6020808352835180828501525f5b818110156117f4578581018301518582016040015282016117d8565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461182a575f80fd5b919050565b5f8060408385031215611840575f80fd5b61184983611814565b946020939093013593505050565b5f805f60608486031215611869575f80fd5b61187284611814565b925061188060208501611814565b9150604084013590509250925092565b5f602082840312156118a0575f80fd5b61100582611814565b5f80604083850312156118ba575f80fd5b82359150602083013580151581146118d0575f80fd5b809150509250929050565b5f80604083850312156118ec575f80fd5b6118f583611814565b915061190360208401611814565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106b1576106b161190c565b808201808211156106b1576106b161190c565b600181811c9082168061195a57607f821691505b60208210810361197857634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f600182016119b7576119b761190c565b5060010190565b80820281158282048414176106b1576106b161190c565b5f826119ef57634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220ab85f0542cd11c51f3e18c8037bd49f28e828f82b915f7208c0e0cf6fdcfb53364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x504 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xD12DC1C1 EQ PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8873B15F GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32035504 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x5342ACB4 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x5C7FFC88 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x60C3AE84 EQ PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32035504 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x7A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0xA6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x3CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A6 DUP4 PUSH2 0xC74 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x5CF SWAP1 DUP3 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xC SLOAD PUSH2 0x5F5 SWAP1 DUP3 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x606 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x1946 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH2 0x1946 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x694 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x694 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x677 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6AB DUP2 DUP6 DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6C4 DUP6 DUP3 DUP6 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x6CF DUP6 DUP6 DUP6 PUSH2 0xD53 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH0 PUSH2 0x783 DUP5 PUSH2 0xC74 JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x6B1 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79A DUP5 PUSH2 0xC74 JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x6B1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x89F SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x985 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7D6 JUMPI PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481C995B9BDD5B98D959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x1946 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6AB DUP2 DUP6 DUP6 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xC70 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB7F JUMPI PUSH2 0xB7F PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC5E JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xBA8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1920 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBB8 JUMPI PUSH2 0xBB8 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0xC3A JUMPI PUSH2 0xC3A PUSH2 0x1992 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xC68 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0xC82 DUP7 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8F DUP3 DUP9 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC9A PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCA7 DUP3 DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCB4 DUP4 DUP12 PUSH2 0x19BE JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCD2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1060 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xD4D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH2 0xD4D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1060 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 PUSH2 0xE23 DUP5 PUSH2 0x94A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ DUP1 ISZERO SWAP1 PUSH2 0xEB5 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEC3 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x14 SLOAD DUP3 PUSH2 0xED5 DUP6 PUSH2 0x94A JUMP JUMPDEST PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST GT ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xF4B JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF54 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF77 JUMPI POP PUSH0 JUMPDEST PUSH2 0xF83 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1132 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP3 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x593 JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 DUP2 DUP5 PUSH2 0x19D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x102D DUP4 DUP7 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x104A PUSH2 0x12A1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1059 DUP2 DUP4 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD4D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x113F JUMPI PUSH2 0x113F PUSH2 0x141B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x117E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1193 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1222 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1232 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1270 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1280 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x128B DUP5 DUP5 DUP5 PUSH2 0x1602 JUMP JUMPDEST DUP1 PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH1 0xF SLOAD PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x13EA JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12CE JUMPI PUSH2 0x12CE PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x1336 JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1310 JUMPI PUSH2 0x1310 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x134C JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1362 JUMPI PUSH2 0x1362 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1390 SWAP1 DUP5 PUSH2 0x1920 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13A8 JUMPI PUSH2 0x13A8 PUSH2 0x197E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x13D6 SWAP1 DUP4 PUSH2 0x1920 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x13E2 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12AD JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1412 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO DUP1 ISZERO PUSH2 0x142B JUMPI POP PUSH1 0x10 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1432 JUMPI JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x11 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1455 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1482 SWAP1 DUP7 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14B1 SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1503 DUP8 DUP7 DUP4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x150D DUP6 DUP3 PUSH2 0x1760 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1552 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1570 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x159D SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x15D3 SWAP1 DUP4 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 DUP5 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x160F DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x14B1 SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1649 DUP6 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1676 SWAP1 DUP7 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x159D SWAP1 DUP6 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0x16B6 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH0 PUSH2 0x16D3 DUP4 DUP4 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x16FB SWAP1 DUP3 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP2 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP2 AND SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xE SLOAD DUP5 PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1788 DUP4 DUP4 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x17A9 SWAP1 DUP4 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x182A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1849 DUP4 PUSH2 0x1814 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1872 DUP5 PUSH2 0x1814 JUMP JUMPDEST SWAP3 POP PUSH2 0x1880 PUSH1 0x20 DUP6 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1005 DUP3 PUSH2 0x1814 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18F5 DUP4 PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP PUSH2 0x1903 PUSH1 0x20 DUP5 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x195A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x190C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x190C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x19EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB DUP6 CREATE SLOAD 0x2C 0xD1 SHR MLOAD RETURN 0xE1 DUP13 DUP1 CALLDATACOPY 0xBD 0x49 CALLCODE DUP15 DUP3 DUP16 DUP3 0xB9 ISZERO 0xF7 KECCAK256 DUP13 0xE 0xC 0xF6 REVERT 0xCF 0xB5 CALLER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "17775:12647:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20832:409;;;;;;;;;;-1:-1:-1;20832:409:0;;;;;:::i;:::-;;:::i;:::-;;8274:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10529:214;;;;;;;;;;-1:-1:-1;10529:214:0;;;;;:::i;:::-;;:::i;:::-;;;1354:14:1;;1347:22;1329:41;;1317:2;1302:18;10529:214:0;1189:187:1;19552:101:0;;;;;;;;;;-1:-1:-1;19639:7:0;;19552:101;;;1527:25:1;;;1515:2;1500:18;19552:101:0;1381:177:1;11335:274:0;;;;;;;;;;-1:-1:-1;11335:274:0;;;;;:::i;:::-;;:::i;19448:98::-;;;;;;;;;;-1:-1:-1;19530:9:0;;19448:98;;19530:9;;;;2038:36:1;;2026:2;2011:18;19448:98:0;1896:184:1;20498:98:0;;;;;;;;;;-1:-1:-1;20579:10:0;;20498:98;;20602:109;;;;;;;;;;-1:-1:-1;20602:109:0;;;;;:::i;:::-;;:::i;21247:477::-;;;;;;;;;;-1:-1:-1;21247:477:0;;;;;:::i;:::-;;:::i;19982:122::-;;;;;;;;;;-1:-1:-1;19982:122:0;;;;;:::i;:::-;-1:-1:-1;;;;;20070:27:0;20047:4;20070:27;;;:18;:27;;;;;;;;;19982:122;22870:77;;;;;;;;;;;;;:::i;22047:335::-;;;;;;;;;;-1:-1:-1;22047:335:0;;;;;:::i;:::-;;:::i;22953:78::-;;;;;;;;;;;;;:::i;20110:268::-;;;;;;;;;;-1:-1:-1;20110:268:0;;;;;:::i;:::-;;:::i;29685:142::-;;;;;;;;;;;;;:::i;19659:93::-;;;;;;;;;;-1:-1:-1;19731:14:0;;19659:93;;20717:109;;;;;;;;;;-1:-1:-1;20717:109:0;;;;;:::i;:::-;;:::i;19285:85::-;;;;;;;;;;-1:-1:-1;19357:6:0;;;;;-1:-1:-1;;;;;19357:6:0;19285:85;;;-1:-1:-1;;;;;2786:32:1;;;2768:51;;2756:2;2741:18;19285:85:0;2622:203:1;8476:93:0;;;;;;;;;;;;;:::i;18470:26::-;;;;;;;;;;-1:-1:-1;18470:26:0;;;;-1:-1:-1;;;;;18470:26:0;;;9810:178;;;;;;;;;;-1:-1:-1;9810:178:0;;;;;:::i;:::-;;:::i;20384:108::-;;;;;;;;;;-1:-1:-1;20384:108:0;;;;;:::i;:::-;-1:-1:-1;;;;;20465:20:0;20442:4;20465:20;;;:11;:20;;;;;;;;;20384:108;19846:130;;;;;;;;;;-1:-1:-1;19938:31:0;;-1:-1:-1;;;;;19938:31:0;19846:130;;10046:176;;;;;;;;;;-1:-1:-1;10046:176:0;;;;;:::i;:::-;-1:-1:-1;;;;;10188:18:0;;;10158:7;10188:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;10046:176;29833:96;;;;;;;;;;-1:-1:-1;29833:96:0;;;;;:::i;:::-;;:::i;19758:82::-;;;;;;;;;;-1:-1:-1;19826:7:0;;19758:82;;22388:476;;;;;;;;;;-1:-1:-1;22388:476:0;;;;;:::i;:::-;;:::i;20832:409::-;4366:10;20883:14;20945:19;;;:11;:19;;;;;;;;20944:20;20923:111;;;;-1:-1:-1;;;20923:111:0;;3297:2:1;20923:111:0;;;3279:21:1;3336:2;3316:18;;;3309:30;3375:34;3355:18;;;3348:62;-1:-1:-1;;;3426:18:1;;;3419:42;3478:19;;20923:111:0;;;;;;;;;21046:15;21071:27;21090:7;21071:18;:27::i;:::-;-1:-1:-1;;;;;;;;21127:15:0;;;;;;:7;:15;;;;;;21045:53;;-1:-1:-1;21127:25:0;;21045:53;;21127:25;:::i;:::-;-1:-1:-1;;;;;21109:15:0;;;;;;:7;:15;;;;;:43;21173:7;;:17;;21183:7;;21173:17;:::i;:::-;21163:7;:27;21214:10;;:20;;21227:7;;21214:20;:::i;:::-;21201:10;:33;-1:-1:-1;;;20832:409:0:o;8274:89::-;8319:13;8351:5;8344:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8274:89;:::o;10529:214::-;10626:4;4366:10;10684:31;4366:10;10700:7;10709:5;10684:8;:31::i;:::-;10732:4;10725:11;;;10529:214;;;;;:::o;11335:274::-;11452:4;4366:10;11508:37;11524:4;4366:10;11539:5;11508:15;:37::i;:::-;11555:26;11565:4;11571:2;11575:5;11555:9;:26::i;:::-;-1:-1:-1;11598:4:0;;11335:274;-1:-1:-1;;;;11335:274:0:o;20602:109::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;-1:-1:-1;;;;;20670:27:0;::::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;20670:34:0::1;20700:4;20670:34;::::0;;19407:28;20602:109;:::o;21247:477::-;21362:7;21404;;21393;:18;;21385:62;;;;-1:-1:-1;;;21385:62:0;;4490:2:1;21385:62:0;;;4472:21:1;4529:2;4509:18;;;4502:30;4568:33;4548:18;;;4541:61;4619:18;;21385:62:0;4288:355:1;21385:62:0;21463:17;21458:260;;21497:15;21522:27;21541:7;21522:18;:27::i;:::-;-1:-1:-1;21496:53:0;;-1:-1:-1;21564:14:0;;-1:-1:-1;;;21564:14:0;21458:260;21612:23;21643:27;21662:7;21643:18;:27::i;:::-;-1:-1:-1;21609:61:0;;-1:-1:-1;21685:22:0;;-1:-1:-1;;;21685:22:0;22870:77;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;22924:9:::1;:16:::0;;-1:-1:-1;;22924:16:0::1;22936:4;22924:16;::::0;;19407:28;22870:77::o;22047:335::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;-1:-1:-1;;;;;22134:20:0;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;22133:21;22125:61;;;::::0;-1:-1:-1;;;22125:61:0;;4850:2:1;22125:61:0::1;::::0;::::1;4832:21:1::0;4889:2;4869:18;;;4862:30;4928:29;4908:18;;;4901:57;4975:18;;22125:61:0::1;4648:351:1::0;22125:61:0::1;-1:-1:-1::0;;;;;22201:16:0;::::1;22220:1;22201:16:::0;;;:7:::1;:16;::::0;;;;;:20;22197:107:::1;;-1:-1:-1::0;;;;;22276:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;22256:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;22237:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;22197:107:::1;-1:-1:-1::0;;;;;22314:20:0::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;22314:27:0::1;22337:4;22314:27:::0;;::::1;::::0;;;22352:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;22352:23:0::1;::::0;;::::1;::::0;;22047:335::o;22953:78::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;23007:9:::1;:17:::0;;-1:-1:-1;;23007:17:0::1;::::0;;22953:78::o;20110:268::-;-1:-1:-1;;;;;20250:19:0;;20223:7;20250:19;;;:11;:19;;;;;;;;20246:72;;;-1:-1:-1;;;;;;20292:15:0;;;;;:7;:15;;;;;;;20110:268::o;20246:72::-;-1:-1:-1;;;;;20355:15:0;;;;;;:7;:15;;;;;;20335:36;;:19;:36::i;29685:142::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;29749:6:::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;29749:6:0::1;29741:50;;;::::0;-1:-1:-1;;;29741:50:0;;5206:2:1;29741:50:0::1;::::0;::::1;5188:21:1::0;5245:2;5225:18;;;5218:30;-1:-1:-1;;;5264:18:1;;;5257:47;5321:18;;29741:50:0::1;5004:341:1::0;29741:50:0::1;29801:6;:19:::0;;-1:-1:-1;;;;;;29801:19:0::1;::::0;;29685:142::o;20717:109::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;20793:11:::1;:26:::0;;-1:-1:-1;;;;;20793:26:0;::::1;-1:-1:-1::0;;;;;;20793:26:0;;::::1;;::::0;;20717:109;:::o;8476:93::-;8523:13;8555:7;8548:14;;;;;:::i;9810:178::-;9879:4;4366:10;9933:27;4366:10;9950:2;9954:5;9933:9;:27::i;29833:96::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;29905:6:::1;:17:::0;;-1:-1:-1;;;;;29905:17:0;::::1;;;-1:-1:-1::0;;;;;;29905:17:0;;::::1;;::::0;;29833:96;:::o;22388:476::-;19357:6;;19422:10;;19357:6;;;-1:-1:-1;;;;;19357:6:0;-1:-1:-1;;;;;19411:21:0;;19407:28;;-1:-1:-1;;;;;22472:20:0;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;22464:60;;;::::0;-1:-1:-1;;;22464:60:0;;5552:2:1;22464:60:0::1;::::0;::::1;5534:21:1::0;5591:2;5571:18;;;5564:30;5630:29;5610:18;;;5603:57;5677:18;;22464:60:0::1;5350:351:1::0;22464:60:0::1;22540:9;22535:323;22559:9;:16:::0;22555:20;::::1;22535:323;;;22616:7;-1:-1:-1::0;;;;;22600:23:0::1;:9;22610:1;22600:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;22600:12:0::1;:23:::0;22596:252:::1;;22658:9;22668:16:::0;;:20:::1;::::0;22687:1:::1;::::0;22668:20:::1;:::i;:::-;22658:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;22643:9:::1;:12:::0;;-1:-1:-1;;;;;22658:31:0;;::::1;::::0;22653:1;;22643:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;22643:46:0::1;-1:-1:-1::0;;;;;22643:46:0;;::::1;;::::0;;22708:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;22747:11:::1;:20:::0;;;;:28;;-1:-1:-1;;22747:28:0::1;::::0;;22794:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;22794:15:0;;;;;-1:-1:-1;;;;;;22794:15:0::1;::::0;;;;;22535:323:::1;22388:476:::0;:::o;22596:252::-:1;22577:3:::0;::::1;::::0;::::1;:::i;:::-;;;;22535:323;;;;22388:476:::0;:::o;28064:542::-;28168:7;28189;28210;28231;28263:16;28282:29;28303:7;28282:20;:29::i;:::-;28263:48;-1:-1:-1;28322:23:0;28348:18;28263:48;28348:7;:18;:::i;:::-;28322:44;;28377:19;28399:10;:8;:10::i;:::-;28377:32;-1:-1:-1;28420:23:0;28446:29;28377:32;28446:15;:29;:::i;:::-;28420:55;-1:-1:-1;28486:15:0;28504:21;28514:11;28504:7;:21;:::i;:::-;28486:39;28553:15;;-1:-1:-1;28570:15:0;;-1:-1:-1;28587:11:0;;-1:-1:-1;28064:542:0;-1:-1:-1;;;;28064:542:0:o;15383:158::-;15497:37;15506:5;15513:7;15522:5;15529:4;15497:8;:37::i;:::-;15383:158;;;:::o;17140:584::-;-1:-1:-1;;;;;10188:18:0;;;17269:24;10188:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;17335:36:0;;17331:387;;;17410:5;17391:16;:24;17387:208;;;17442:138;;-1:-1:-1;;;17442:138:0;;-1:-1:-1;;;;;6503:32:1;;17442:138:0;;;6485:51:1;6552:18;;;6545:34;;;6595:18;;;6588:34;;;6458:18;;17442:138:0;6283:345:1;17387:208:0;17636:57;17645:5;17652:7;17680:5;17661:16;:24;17687:5;17636:8;:57::i;:::-;17259:465;17140:584;;;:::o;23037:980::-;-1:-1:-1;;;;;23181:20:0;;23173:70;;;;-1:-1:-1;;;23173:70:0;;6835:2:1;23173:70:0;;;6817:21:1;6874:2;6854:18;;;6847:30;6913:34;6893:18;;;6886:62;-1:-1:-1;;;6964:18:1;;;6957:35;7009:19;;23173:70:0;6633:401:1;23173:70:0;-1:-1:-1;;;;;23262:23:0;;23254:71;;;;-1:-1:-1;;;23254:71:0;;7241:2:1;23254:71:0;;;7223:21:1;7280:2;7260:18;;;7253:30;7319:34;7299:18;;;7292:62;-1:-1:-1;;;7370:18:1;;;7363:33;7413:19;;23254:71:0;7039:399:1;23254:71:0;23336:21;23360:17;23370:6;23360:9;:17::i;:::-;23336:41;;23426:6;23409:13;:23;;23388:108;;;;-1:-1:-1;;;23388:108:0;;7645:2:1;23388:108:0;;;7627:21:1;7684:2;7664:18;;;7657:30;7723:34;7703:18;;;7696:62;-1:-1:-1;;;7774:18:1;;;7767:36;7820:19;;23388:108:0;7443:402:1;23388:108:0;19357:6;;-1:-1:-1;;;;;23511:17:0;;;19357:6;;;;;23511:17;;;;:66;;-1:-1:-1;19938:31:0;;-1:-1:-1;;;;;23532:45:0;;;19938:31;;23532:45;;23511:66;:79;;;;-1:-1:-1;23581:9:0;;;;23511:79;23507:235;;;23665:15;;23655:6;23632:20;23642:9;23632;:20::i;:::-;:29;;;;:::i;:::-;:48;;23607:123;;;;-1:-1:-1;;;23607:123:0;;8052:2:1;23607:123:0;;;8034:21:1;8091:2;8071:18;;;8064:30;-1:-1:-1;;;8110:18:1;;;8103:46;8166:18;;23607:123:0;7850:340:1;23607:123:0;23789:11;;23752:12;;-1:-1:-1;;;;;23779:21:0;;;23789:11;;23779:21;;:49;;-1:-1:-1;23817:11:0;;-1:-1:-1;;;;;23804:24:0;;;23817:11;;23804:24;23779:49;23775:94;;;-1:-1:-1;23854:4:0;23775:94;-1:-1:-1;;;;;20070:27:0;;20047:4;20070:27;;;:18;:27;;;;;;;;23879:71;;;-1:-1:-1;23934:5:0;23879:71;23960:50;23975:6;23983:9;23994:6;24002:7;23960:14;:50::i;:::-;23163:854;;23037:980;;;:::o;21730:311::-;21822:7;21877;;21866;:18;;21845:107;;;;-1:-1:-1;;;21845:107:0;;8397:2:1;21845:107:0;;;8379:21:1;8436:2;8416:18;;;8409:30;8475:34;8455:18;;;8448:62;-1:-1:-1;;;8526:18:1;;;8519:40;8576:19;;21845:107:0;8195:406:1;21845:107:0;21963:19;21985:10;:8;:10::i;:::-;21963:32;-1:-1:-1;22013:21:0;21963:32;22013:7;:21;:::i;:::-;22006:28;21730:311;-1:-1:-1;;;21730:311:0:o;27810:248::-;27903:7;27926:16;27962:7;;27945:14;;:24;;;;:::i;:::-;27926:43;-1:-1:-1;27980:16:0;28022:3;28000:18;27926:43;28000:7;:18;:::i;:::-;27999:26;;;;:::i;:::-;27980:45;27810:248;-1:-1:-1;;;;27810:248:0:o;28869:159::-;28911:7;28931:15;28948;28967:19;:17;:19::i;:::-;28930:56;;-1:-1:-1;28930:56:0;-1:-1:-1;29004:17:0;28930:56;;29004:17;:::i;:::-;28997:24;;;;28869:159;:::o;16388:470::-;-1:-1:-1;;;;;16538:19:0;;16534:89;;16580:32;;-1:-1:-1;;;16580:32:0;;16609:1;16580:32;;;2768:51:1;2741:18;;16580:32:0;2622:203:1;16534:89:0;-1:-1:-1;;;;;16636:21:0;;16632:90;;16680:31;;-1:-1:-1;;;16680:31:0;;16708:1;16680:31;;;2768:51:1;2741:18;;16680:31:0;2622:203:1;16632:90:0;-1:-1:-1;;;;;16731:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;16776:76;;;;16826:7;-1:-1:-1;;;;;16810:31:0;16819:5;-1:-1:-1;;;;;16810:31:0;;16835:5;16810:31;;;;1527:25:1;;1515:2;1500:18;;1381:177;16810:31:0;;;;;;;;16388:470;;;;:::o;24023:769::-;24163:7;24158:53;;24186:14;:12;:14::i;:::-;-1:-1:-1;;;;;24225:17:0;;;;;;:11;:17;;;;;;;;:37;;;;-1:-1:-1;;;;;;24247:15:0;;;;;;:11;:15;;;;;;;;24246:16;24225:37;24221:501;;;24278:38;24300:4;24306:2;24310:5;24278:21;:38::i;:::-;24221:501;;;-1:-1:-1;;;;;24338:17:0;;;;;;:11;:17;;;;;;;;24337:18;:37;;;;-1:-1:-1;;;;;;24359:15:0;;;;;;:11;:15;;;;;;;;24337:37;24333:389;;;24390:36;24410:4;24416:2;24420:5;24390:19;:36::i;24333:389::-;-1:-1:-1;;;;;24448:17:0;;;;;;:11;:17;;;;;;;;24447:18;:38;;;;-1:-1:-1;;;;;;24470:15:0;;;;;;:11;:15;;;;;;;;24469:16;24447:38;24443:279;;;24501:34;24519:4;24525:2;24529:5;24501:17;:34::i;24443:279::-;-1:-1:-1;;;;;24556:17:0;;;;;;:11;:17;;;;;;;;:36;;;;-1:-1:-1;;;;;;24577:15:0;;;;;;:11;:15;;;;;;;;24556:36;24552:170;;;24608:38;24630:4;24636:2;24640:5;24608:21;:38::i;24552:170::-;24677:34;24695:4;24701:2;24705:5;24677:17;:34::i;:::-;24737:7;24732:54;;24760:15;25097:22;;25080:14;:39;25140:15;;25130:7;:25;25037:125;29034:645;29131:7;;29167;;29085;;;;;29185:359;29209:9;:16;29205:20;;29185:359;;;29291:7;29267;:21;29275:9;29285:1;29275:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;29275:12:0;29267:21;;;;;;;;;;;;;:31;;:82;;;29342:7;29318;:21;29326:9;29336:1;29326:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;29326:12:0;29318:21;;;;;;;;;;;;;:31;29267:82;29246:176;;;29390:7;;29399;;29382:25;;;;;;;29034:645;;:::o;29246:176::-;29456:7;:21;29464:9;29474:1;29464:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;29464:12:0;29456:21;;;;;;;;;;;;;29446:31;;:7;:31;:::i;:::-;29436:41;;29512:7;:21;29520:9;29530:1;29520:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;29520:12:0;29512:21;;;;;;;;;;;;;29502:31;;:7;:31;:::i;:::-;29492:41;-1:-1:-1;29227:3:0;;;;:::i;:::-;;;;29185:359;;;;29578:7;;29568;;:17;;;;:::i;:::-;29558:7;:27;29554:83;;;29609:7;;29618;;29601:25;;;;;;29034:645;;:::o;29554:83::-;29655:7;;29664;;-1:-1:-1;29034:645:0;-1:-1:-1;29034:645:0:o;24798:233::-;24844:14;;:19;:35;;;;-1:-1:-1;24867:7:0;;:12;24844:35;24840:48;;;24798:233::o;24840:48::-;24923:14;;;24898:22;:39;24966:7;;;24948:15;:25;-1:-1:-1;24984:18:0;;;;25013:11;24798:233::o;26432:649::-;26577:15;26606:23;26643;26680:19;26712:27;26731:7;26712:18;:27::i;:::-;-1:-1:-1;;;;;26768:15:0;;;;;;:7;:15;;;;;;26563:176;;-1:-1:-1;26563:176:0;;-1:-1:-1;26563:176:0;-1:-1:-1;26563:176:0;-1:-1:-1;26768:25:0;;26786:7;;26768:25;:::i;:::-;-1:-1:-1;;;;;26750:15:0;;;;;;:7;:15;;;;;;;;:43;;;;26822:7;:15;;;;:25;;26840:7;;26822:25;:::i;:::-;-1:-1:-1;;;;;26804:15:0;;;;;;;:7;:15;;;;;;:43;;;;26879:18;;;;;;;:36;;26900:15;;26879:36;:::i;:::-;-1:-1:-1;;;;;26858:18:0;;;;;;:7;:18;;;;;:57;26926:44;26941:6;26949:7;26958:11;26926:14;:44::i;:::-;26981:33;26993:7;27002:11;26981;:33::i;:::-;27047:9;-1:-1:-1;;;;;27030:44:0;27039:6;-1:-1:-1;;;;;27030:44:0;;27058:15;27030:44;;;;1527:25:1;;1515:2;1500:18;;1381:177;27030:44:0;;;;;;;;26553:528;;;;26432:649;;;:::o;25765:661::-;25908:15;25937:23;25974;26011:19;26043:27;26062:7;26043:18;:27::i;:::-;-1:-1:-1;;;;;26099:15:0;;;;;;:7;:15;;;;;;25894:176;;-1:-1:-1;25894:176:0;;-1:-1:-1;25894:176:0;-1:-1:-1;25894:176:0;-1:-1:-1;26099:25:0;;25894:176;;26099:25;:::i;:::-;-1:-1:-1;;;;;26081:15:0;;;;;;;:7;:15;;;;;;;;:43;;;;26156:18;;;;;:7;:18;;;;;:36;;26177:15;;26156:36;:::i;:::-;-1:-1:-1;;;;;26135:18:0;;;;;;:7;:18;;;;;;;;:57;;;;26224:7;:18;;;;:36;;26245:15;;26224:36;:::i;25168:591::-;25309:15;25338:23;25375;25412:19;25444:27;25463:7;25444:18;:27::i;:::-;-1:-1:-1;;;;;25500:15:0;;;;;;:7;:15;;;;;;25295:176;;-1:-1:-1;25295:176:0;;-1:-1:-1;25295:176:0;-1:-1:-1;25295:176:0;-1:-1:-1;25500:25:0;;25295:176;;25500:25;:::i;27087:717::-;27232:15;27261:23;27298;27335:19;27367:27;27386:7;27367:18;:27::i;:::-;-1:-1:-1;;;;;27423:15:0;;;;;;:7;:15;;;;;;27218:176;;-1:-1:-1;27218:176:0;;-1:-1:-1;27218:176:0;-1:-1:-1;27218:176:0;-1:-1:-1;27423:25:0;;27441:7;;27423:25;:::i;:::-;-1:-1:-1;;;;;27405:15:0;;;;;;:7;:15;;;;;;;;:43;;;;27477:7;:15;;;;:25;;27495:7;;27477:25;:::i;29935:485::-;30061:15;30101:3;30090:7;;30080;:17;;;;:::i;:::-;30079:25;;;;:::i;:::-;30061:43;-1:-1:-1;30119:11:0;;30115:299;;30146:15;30164:21;30174:11;30164:7;:21;:::i;:::-;30267:31;;-1:-1:-1;;;;;30267:31:0;30259:40;;;;:7;:40;;;;;;30146:39;;-1:-1:-1;30259:66:0;;30146:39;;30259:66;:::i;:::-;30208:31;;;-1:-1:-1;;;;;30208:31:0;;;30200:40;;;;:7;:40;;;;;;;;;:125;;;;30362:31;;30345:58;;1527:25:1;;;30362:31:0;;;;30345:58;;;;;;1500:18:1;30345:58:0;;;;;;;30132:282;30051:369;29935:485;;;:::o;28612:251::-;28689:12;28733:3;28715:14;;28705:7;:24;;;;:::i;:::-;28704:32;;;;:::i;:::-;28689:47;-1:-1:-1;28747:12:0;28762:18;28769:11;28689:47;28762:18;:::i;:::-;28747:33;;28811:4;28801:7;;:14;;;;:::i;:::-;28791:7;:24;28839:10;;:17;;28852:4;;28839:17;:::i;:::-;28826:10;:30;-1:-1:-1;;;;28612:251:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:548::-;311:4;340:2;369;358:9;351:21;401:6;395:13;444:6;439:2;428:9;424:18;417:34;469:1;479:140;493:6;490:1;487:13;479:140;;;588:14;;;584:23;;578:30;554:17;;;573:2;550:26;543:66;508:10;;479:140;;;483:3;668:1;663:2;654:6;643:9;639:22;635:31;628:42;738:2;731;727:7;722:2;714:6;710:15;706:29;695:9;691:45;687:54;679:62;;;;199:548;;;;:::o;752:173::-;820:20;;-1:-1:-1;;;;;869:31:1;;859:42;;849:70;;915:1;912;905:12;849:70;752:173;;;:::o;930:254::-;998:6;1006;1059:2;1047:9;1038:7;1034:23;1030:32;1027:52;;;1075:1;1072;1065:12;1027:52;1098:29;1117:9;1098:29;:::i;:::-;1088:39;1174:2;1159:18;;;;1146:32;;-1:-1:-1;;;930:254:1:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;2276:341::-;2341:6;2349;2402:2;2390:9;2381:7;2377:23;2373:32;2370:52;;;2418:1;2415;2408:12;2370:52;2454:9;2441:23;2431:33;;2514:2;2503:9;2499:18;2486:32;2561:5;2554:13;2547:21;2540:5;2537:32;2527:60;;2583:1;2580;2573:12;2527:60;2606:5;2596:15;;;2276:341;;;;;:::o;2830:260::-;2898:6;2906;2959:2;2947:9;2938:7;2934:23;2930:32;2927:52;;;2975:1;2972;2965:12;2927:52;2998:29;3017:9;2998:29;:::i;:::-;2988:39;;3046:38;3080:2;3069:9;3065:18;3046:38;:::i;:::-;3036:48;;2830:260;;;;;:::o;3508:127::-;3569:10;3564:3;3560:20;3557:1;3550:31;3600:4;3597:1;3590:15;3624:4;3621:1;3614:15;3640:128;3707:9;;;3728:11;;;3725:37;;;3742:18;;:::i;3773:125::-;3838:9;;;3859:10;;;3856:36;;;3872:18;;:::i;3903:380::-;3982:1;3978:12;;;;4025;;;4046:61;;4100:4;4092:6;4088:17;4078:27;;4046:61;4153:2;4145:6;4142:14;4122:18;4119:38;4116:161;;4199:10;4194:3;4190:20;4187:1;4180:31;4234:4;4231:1;4224:15;4262:4;4259:1;4252:15;4116:161;;3903:380;;;:::o;5706:127::-;5767:10;5762:3;5758:20;5755:1;5748:31;5798:4;5795:1;5788:15;5822:4;5819:1;5812:15;5838:127;5899:10;5894:3;5890:20;5887:1;5880:31;5930:4;5927:1;5920:15;5954:4;5951:1;5944:15;5970:135;6009:3;6030:17;;;6027:43;;6050:18;;:::i;:::-;-1:-1:-1;6097:1:1;6086:13;;5970:135::o;6110:168::-;6183:9;;;6214;;6231:15;;;6225:22;;6211:37;6201:71;;6252:18;;:::i;8606:217::-;8646:1;8672;8662:132;;8716:10;8711:3;8707:20;8704:1;8697:31;8751:4;8748:1;8741:15;8779:4;8776:1;8769:15;8662:132;-1:-1:-1;8808:9:1;;8606:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1339600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24780",
								"balanceOf(address)": "infinite",
								"changePairAddress(address)": "26778",
								"decimals()": "2422",
								"disbleAntiWhale()": "26643",
								"enableAntiWhale()": "26606",
								"excludeAccountFromReward(address)": "infinite",
								"excludeFromFee(address)": "26852",
								"getMarketingAndDevelopmentAccount()": "2419",
								"getTaxFee()": "2379",
								"includeAccountinReward(address)": "infinite",
								"isExcluded(address)": "2613",
								"isExcludedFromFee(address)": "2591",
								"name()": "infinite",
								"owner()": "2397",
								"pairAddress()": "2447",
								"reflect(uint256)": "infinite",
								"reflectionFee()": "2381",
								"reflectionFromToken(uint256,bool)": "infinite",
								"renounceOwnership()": "28758",
								"symbol()": "infinite",
								"totalFeesRedistributed()": "2337",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "26807"
							},
							"internal": {
								"_getCompleteTaxValue(uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_getTransferValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"removeAllFee()": "62689",
								"restoreAllFee()": "infinite",
								"taxFeeTransfer(address,uint256,uint256)": "infinite",
								"tokenFromReflection(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18103,
									"end": 18113,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18078,
									"end": 18113,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 18229,
									"end": 18259,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 18229,
									"end": 18259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18540,
									"end": 18562,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18569,
									"end": 19244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "30B1319031B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4359424343"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8170,
									"end": 8175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8167,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8162,
									"end": 8175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8185,
									"end": 8192,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8185,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8195,
									"end": 8202,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 8192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8185,
									"end": 8202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 8202,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8185,
									"end": 8202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18620,
									"end": 18629,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18620,
									"end": 18634,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18634,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18620,
									"end": 18634,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18620,
									"end": 18634,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18668,
									"end": 18690,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18668,
									"end": 18690,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18632,
									"end": 18634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18668,
									"end": 18690,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18668,
									"end": 18690,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18668,
									"end": 18690,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18668,
									"end": 18690,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18655,
									"end": 18690,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18655,
									"end": 18690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18655,
									"end": 18665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 18655,
									"end": 18690,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18655,
									"end": 18690,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18655,
									"end": 18690,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18655,
									"end": 18690,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18652,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18645,
									"end": 18690,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18690,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18719,
									"end": 18732,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18719,
									"end": 18732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18719,
									"end": 18732,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18719,
									"end": 18732,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18719,
									"end": 18732,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18719,
									"end": 18732,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18712,
									"end": 18733,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18712,
									"end": 18733,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18712,
									"end": 18733,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18712,
									"end": 18733,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18712,
									"end": 18733,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18712,
									"end": 18733,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18701,
									"end": 18708,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 18701,
									"end": 18734,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18762,
									"end": 18763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18745,
									"end": 18759,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 18745,
									"end": 18763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18745,
									"end": 18763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18745,
									"end": 18763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18774,
									"end": 18796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 18774,
									"end": 18813,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18834,
									"end": 18835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18824,
									"end": 18831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18824,
									"end": 18835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18824,
									"end": 18835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18824,
									"end": 18835,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18846,
									"end": 18861,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18846,
									"end": 18871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18916,
									"end": 18922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 18916,
									"end": 18922,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18913,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18916,
									"end": 18922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 18916,
									"end": 18922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18916,
									"end": 18922,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18916,
									"end": 18922,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18916,
									"end": 18922,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18882,
									"end": 18922,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18985,
									"end": 18992,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18985,
									"end": 18992,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18985,
									"end": 18998,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18985,
									"end": 18998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18995,
									"end": 18998,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 18995,
									"end": 18998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18985,
									"end": 18998,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 18985,
									"end": 18998,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18985,
									"end": 18998,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18985,
									"end": 18998,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18980,
									"end": 18999,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18980,
									"end": 18999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18980,
									"end": 18981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18980,
									"end": 18999,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18980,
									"end": 18999,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18980,
									"end": 18999,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18980,
									"end": 18999,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18962,
									"end": 18977,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18962,
									"end": 18999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19040,
									"end": 19044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19010,
									"end": 19028,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19010,
									"end": 19037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19029,
									"end": 19036,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19357,
									"end": 19363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19285,
									"end": 19370,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19029,
									"end": 19036,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19029,
									"end": 19036,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19037,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19074,
									"end": 19105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19074,
									"end": 19105,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19074,
									"end": 19105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19074,
									"end": 19105,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19073,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19106,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19113,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19151,
									"end": 19155,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19157,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19157,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 19124,
									"end": 19164,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19193,
									"end": 19200,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 19193,
									"end": 19200,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19183,
									"end": 19189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19183,
									"end": 19189,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19010,
									"end": 19044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 19183,
									"end": 19189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19183,
									"end": 19189,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19183,
									"end": 19189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19183,
									"end": 19189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19183,
									"end": 19189,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19182,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19190,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19175,
									"end": 19200,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19211,
									"end": 19237,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 19211,
									"end": 19237,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19217,
									"end": 19227,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19217,
									"end": 19227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19211,
									"end": 19216,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 19211,
									"end": 19237,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19211,
									"end": 19237,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 19211,
									"end": 19237,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14115,
									"end": 14323,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 14115,
									"end": 14323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14185,
									"end": 14206,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14185,
									"end": 14206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14181,
									"end": 14272,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 14181,
									"end": 14272,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14258,
									"end": 14259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5067,
									"end": 5118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5040,
									"end": 5058,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5040,
									"end": 5058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14229,
									"end": 14261,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14181,
									"end": 14272,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 14181,
									"end": 14272,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14281,
									"end": 14316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 14297,
									"end": 14298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14301,
									"end": 14308,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14315,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14281,
									"end": 14288,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 14281,
									"end": 14316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14281,
									"end": 14316,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 14281,
									"end": 14316,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14115,
									"end": 14323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14115,
									"end": 14323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14115,
									"end": 14323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 13772,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 12635,
									"end": 13772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12754,
									"end": 12772,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12754,
									"end": 12772,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12906,
									"end": 12911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12902,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12890,
									"end": 12902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 12890,
									"end": 12911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 12911,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12942,
									"end": 12961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12964,
									"end": 12979,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12997,
									"end": 13016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12997,
									"end": 13016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12997,
									"end": 13016,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12993,
									"end": 13108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12993,
									"end": 13108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 12993,
									"end": 13108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5479,
									"end": 5511,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5479,
									"end": 5511,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5461,
									"end": 5512,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 5546,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5528,
									"end": 5546,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 5546,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5521,
									"end": 5555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5521,
									"end": 5555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5521,
									"end": 5555,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5571,
									"end": 5589,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5571,
									"end": 5589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5571,
									"end": 5589,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5598,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5598,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5434,
									"end": 5452,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5434,
									"end": 5452,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13043,
									"end": 13093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 5259,
									"end": 5604,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12993,
									"end": 13108,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 12993,
									"end": 13108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13237,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13243,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13246,
									"end": 13265,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13246,
									"end": 13265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13246,
									"end": 13265,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13246,
									"end": 13265,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13265,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13228,
									"end": 13265,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 12750,
									"end": 13290,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13304,
									"end": 13320,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13304,
									"end": 13320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13479,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13467,
									"end": 13488,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13691,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13678,
									"end": 13700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 13300,
									"end": 13725,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13749,
									"end": 13753,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13759,
									"end": 13764,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5755,
									"end": 5780,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5755,
									"end": 5780,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5743,
									"end": 5745,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5609,
									"end": 5786,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13740,
									"end": 13765,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 13772,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 13772,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 13772,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 13772,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4105,
									"end": 4236,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 4105,
									"end": 4236,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4165,
									"end": 4170,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4194,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4221,
									"end": 4229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4215,
									"end": 4219,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4194,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4194,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4194,
									"end": 4230,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4194,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4185,
									"end": 4230,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4105,
									"end": 4236,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4409,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 4241,
									"end": 4409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4345,
									"end": 4354,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4345,
									"end": 4354,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4362,
									"end": 4377,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4362,
									"end": 4377,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4362,
									"end": 4377,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4356,
									"end": 4378,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4356,
									"end": 4378,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4379,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4332,
									"end": 4403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4332,
									"end": 4403,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 4383,
									"end": 4401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4414,
									"end": 4541,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4414,
									"end": 4541,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4475,
									"end": 4485,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 4470,
									"end": 4473,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 4466,
									"end": 4486,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4463,
									"end": 4464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4456,
									"end": 4487,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 4503,
									"end": 4504,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4496,
									"end": 4511,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4530,
									"end": 4534,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4527,
									"end": 4528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4546,
									"end": 4658,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4546,
									"end": 4658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4578,
									"end": 4579,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 4605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4594,
									"end": 4629,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4609,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4609,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4609,
									"end": 4627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4609,
									"end": 4627,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4609,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4643,
									"end": 4652,
									"name": "MOD",
									"source": 1
								},
								{
									"begin": 4643,
									"end": 4652,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4546,
									"end": 4658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4663,
									"end": 4791,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 4663,
									"end": 4791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4730,
									"end": 4739,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4730,
									"end": 4739,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4730,
									"end": 4739,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4785,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4785,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4748,
									"end": 4785,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4765,
									"end": 4783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 4765,
									"end": 4783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4796,
									"end": 4916,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 4796,
									"end": 4916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4836,
									"end": 4837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4862,
									"end": 4863,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4852,
									"end": 4887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4852,
									"end": 4887,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4867,
									"end": 4885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4901,
									"end": 4910,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4901,
									"end": 4910,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4796,
									"end": 4916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5129,
									"end": 5254,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 5129,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5194,
									"end": 5203,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5194,
									"end": 5203,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5194,
									"end": 5203,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5215,
									"end": 5225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5215,
									"end": 5225,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5215,
									"end": 5225,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5212,
									"end": 5248,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5212,
									"end": 5248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5212,
									"end": 5248,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5228,
									"end": 5246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5228,
									"end": 5246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5228,
									"end": 5246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5609,
									"end": 5786,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5609,
									"end": 5786,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17775,
									"end": 30422,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab85f0542cd11c51f3e18c8037bd49f28e828f82b915f7208c0e0cf6fdcfb53364736f6c63430008140033",
									".code": [
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "F66608FE"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "FDEB889F"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "CBA0E996"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "D12DC1C1"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "8873B15F"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "8873B15F"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "A8B08982"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "83AD7994"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "32035504"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "5342ACB4"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "5342ACB4"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "5C7FFC88"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "6049876E"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "60C3AE84"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "32035504"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "4549B039"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "53AB182"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 30422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20832,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 20832,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8274,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8274,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10529,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10529,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1189,
											"end": 1376,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19639,
											"end": 19646,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 19639,
											"end": 19646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19552,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1381,
											"end": 1558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11335,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11335,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19448,
											"end": 19546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1896,
											"end": 2080,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20579,
											"end": 20589,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 20579,
											"end": 20589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20498,
											"end": 20596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20602,
											"end": 20711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20602,
											"end": 20711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 21247,
											"end": 21724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21247,
											"end": 21724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19982,
											"end": 20104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20047,
											"end": 20051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19982,
											"end": 20104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22870,
											"end": 22947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22047,
											"end": 22382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22047,
											"end": 22382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22953,
											"end": 23031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20110,
											"end": 20378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20110,
											"end": 20378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29685,
											"end": 29827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19731,
											"end": 19745,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 19731,
											"end": 19745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19659,
											"end": 19752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20717,
											"end": 20826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20717,
											"end": 20826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19285,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2622,
											"end": 2825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8476,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9810,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9810,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20384,
											"end": 20492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20442,
											"end": 20446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20476,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20465,
											"end": 20485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19846,
											"end": 19976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10046,
											"end": 10222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10222,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29833,
											"end": 29929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29833,
											"end": 29929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19826,
											"end": 19833,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19826,
											"end": 19833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19758,
											"end": 19840,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22388,
											"end": 22864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 22388,
											"end": 22864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 20832,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20956,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20964,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20923,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21046,
											"end": 21061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21090,
											"end": 21097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21071,
											"end": 21089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21071,
											"end": 21098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21071,
											"end": 21098,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21071,
											"end": 21098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21134,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21045,
											"end": 21098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21045,
											"end": 21098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21127,
											"end": 21152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21127,
											"end": 21152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21045,
											"end": 21098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21045,
											"end": 21098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21127,
											"end": 21152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21152,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21127,
											"end": 21152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21116,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 21173,
											"end": 21180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21173,
											"end": 21190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21170,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 21163,
											"end": 21190,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21224,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 21214,
											"end": 21224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21227,
											"end": 21234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21227,
											"end": 21234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 21214,
											"end": 21234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21211,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 21201,
											"end": 21234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20832,
											"end": 21241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8319,
											"end": 8332,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8344,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8344,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10709,
											"end": 10714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 10684,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10715,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10684,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11452,
											"end": 11456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11508,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11571,
											"end": 11573,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11580,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11555,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11555,
											"end": 11581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11598,
											"end": 11602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11598,
											"end": 11602,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11609,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11335,
											"end": 11609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20670,
											"end": 20697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20670,
											"end": 20704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20670,
											"end": 20704,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21247,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21404,
											"end": 21411,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 21404,
											"end": 21411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21393,
											"end": 21400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21393,
											"end": 21411,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21393,
											"end": 21411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4509,
											"end": 4527,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4509,
											"end": 4527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4601,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4288,
											"end": 4643,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 21385,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 21458,
											"end": 21718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21497,
											"end": 21512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21522,
											"end": 21549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21541,
											"end": 21548,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21522,
											"end": 21549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21549,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21522,
											"end": 21549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21496,
											"end": 21549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21496,
											"end": 21549,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21564,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21564,
											"end": 21578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21564,
											"end": 21578,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21718,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 21458,
											"end": 21718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21612,
											"end": 21635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21643,
											"end": 21670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21662,
											"end": 21669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21643,
											"end": 21670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21670,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21643,
											"end": 21670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21609,
											"end": 21670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21670,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21685,
											"end": 21707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21685,
											"end": 21707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21685,
											"end": 21707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22870,
											"end": 22947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22924,
											"end": 22933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22924,
											"end": 22940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22924,
											"end": 22940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22924,
											"end": 22940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22936,
											"end": 22940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22924,
											"end": 22940,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22924,
											"end": 22940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22924,
											"end": 22940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22047,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22134,
											"end": 22154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22134,
											"end": 22154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22133,
											"end": 22154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22125,
											"end": 22186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22125,
											"end": 22186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4850,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22125,
											"end": 22186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4832,
											"end": 4853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4648,
											"end": 4999,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22125,
											"end": 22186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22220,
											"end": 22221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22201,
											"end": 22217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 22197,
											"end": 22304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22276,
											"end": 22292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22256,
											"end": 22293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22256,
											"end": 22293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22256,
											"end": 22275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 22256,
											"end": 22293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22256,
											"end": 22293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22256,
											"end": 22293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22237,
											"end": 22253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22237,
											"end": 22293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 22197,
											"end": 22304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22314,
											"end": 22334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22314,
											"end": 22334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22314,
											"end": 22341,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22337,
											"end": 22341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22314,
											"end": 22341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 22352,
											"end": 22375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22352,
											"end": 22375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22375,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22953,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23007,
											"end": 23016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23007,
											"end": 23024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23007,
											"end": 23024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23007,
											"end": 23024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23007,
											"end": 23024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23007,
											"end": 23024,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22953,
											"end": 23031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20110,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20223,
											"end": 20230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20261,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20250,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20246,
											"end": 20318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20246,
											"end": 20318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 20246,
											"end": 20318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20299,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20110,
											"end": 20378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20246,
											"end": 20318,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 20246,
											"end": 20318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20362,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20355,
											"end": 20370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20335,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20335,
											"end": 20371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20335,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20335,
											"end": 20371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29685,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29749,
											"end": 29755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29749,
											"end": 29755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29749,
											"end": 29755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29749,
											"end": 29755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29749,
											"end": 29755,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29749,
											"end": 29755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29741,
											"end": 29791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29741,
											"end": 29791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29741,
											"end": 29791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29741,
											"end": 29791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E481C995B9BDD5B98D959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5004,
											"end": 5345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 29741,
											"end": 29791,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29801,
											"end": 29820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29801,
											"end": 29820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20819,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8523,
											"end": 8536,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8555,
											"end": 8562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8548,
											"end": 8562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9810,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9954,
											"end": 9959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9933,
											"end": 9960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29905,
											"end": 29922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19411,
											"end": 19432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19407,
											"end": 19435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22472,
											"end": 22492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22472,
											"end": 22492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22472,
											"end": 22492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22464,
											"end": 22524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22464,
											"end": 22524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22464,
											"end": 22524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22464,
											"end": 22524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "4163636F756E7420697320616C726561647920696E636C756465640000000000"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5350,
											"end": 5701,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 22464,
											"end": 22524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22540,
											"end": 22549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22559,
											"end": 22568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22559,
											"end": 22575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22555,
											"end": 22575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22555,
											"end": 22575,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22616,
											"end": 22623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22600,
											"end": 22623,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22610,
											"end": 22611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22600,
											"end": 22612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22600,
											"end": 22612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22596,
											"end": 22848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 22596,
											"end": 22848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22668,
											"end": 22684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22668,
											"end": 22684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22668,
											"end": 22688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 22668,
											"end": 22688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22687,
											"end": 22688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22687,
											"end": 22688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22668,
											"end": 22688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22668,
											"end": 22688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22668,
											"end": 22688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 22668,
											"end": 22688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22658,
											"end": 22689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22653,
											"end": 22654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22653,
											"end": 22654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22643,
											"end": 22655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22643,
											"end": 22689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22724,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22708,
											"end": 22728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22747,
											"end": 22775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22775,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 22794,
											"end": 22809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22794,
											"end": 22809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22809,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22596,
											"end": 22848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 22596,
											"end": 22848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22577,
											"end": 22580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 22577,
											"end": 22580,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22577,
											"end": 22580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28064,
											"end": 28606,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28064,
											"end": 28606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28189,
											"end": 28196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28210,
											"end": 28217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28231,
											"end": 28238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28263,
											"end": 28279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28282,
											"end": 28311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28303,
											"end": 28310,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28282,
											"end": 28302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 28282,
											"end": 28311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28282,
											"end": 28311,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28282,
											"end": 28311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28263,
											"end": 28311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28322,
											"end": 28345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28348,
											"end": 28366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28263,
											"end": 28311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28348,
											"end": 28355,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 28348,
											"end": 28366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28348,
											"end": 28366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28348,
											"end": 28366,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28348,
											"end": 28366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28322,
											"end": 28366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28377,
											"end": 28396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28399,
											"end": 28409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28399,
											"end": 28407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28399,
											"end": 28409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28409,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28399,
											"end": 28409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28377,
											"end": 28409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28420,
											"end": 28443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28446,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28377,
											"end": 28409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28446,
											"end": 28461,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28446,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28446,
											"end": 28475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28446,
											"end": 28475,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28446,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28420,
											"end": 28475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28486,
											"end": 28501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28504,
											"end": 28525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28514,
											"end": 28525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28504,
											"end": 28511,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 28504,
											"end": 28525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28504,
											"end": 28525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28504,
											"end": 28525,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28504,
											"end": 28525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28486,
											"end": 28525,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 28553,
											"end": 28568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28553,
											"end": 28568,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28570,
											"end": 28585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28570,
											"end": 28585,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28587,
											"end": 28598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28587,
											"end": 28598,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28064,
											"end": 28606,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28064,
											"end": 28606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15541,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 15383,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15497,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 15506,
											"end": 15511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15513,
											"end": 15520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15533,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15497,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 15497,
											"end": 15534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15497,
											"end": 15534,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 15497,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15383,
											"end": 15541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17724,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17140,
											"end": 17724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17269,
											"end": 17293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17335,
											"end": 17371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17335,
											"end": 17371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17331,
											"end": 17718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17331,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 17331,
											"end": 17718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17410,
											"end": 17415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17391,
											"end": 17407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 17387,
											"end": 17595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6503,
											"end": 6535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6570,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6552,
											"end": 6570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17442,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6283,
											"end": 6628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17387,
											"end": 17595,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 17387,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17636,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 17645,
											"end": 17650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17652,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17680,
											"end": 17685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17661,
											"end": 17677,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17661,
											"end": 17685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17687,
											"end": 17692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17636,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 17636,
											"end": 17693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17636,
											"end": 17693,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 17636,
											"end": 17693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 24017,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23037,
											"end": 24017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23181,
											"end": 23201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23181,
											"end": 23201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7009,
											"end": 7028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6633,
											"end": 7034,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 23173,
											"end": 23243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7282,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7353,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7432,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7413,
											"end": 7432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7039,
											"end": 7438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23360,
											"end": 23377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 23370,
											"end": 23376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23360,
											"end": 23377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23377,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 23360,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23432,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7757,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7696,
											"end": 7758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7839,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7820,
											"end": 7839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7443,
											"end": 7845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 23388,
											"end": 23496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19357,
											"end": 19363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 23511,
											"end": 23577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23532,
											"end": 23577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23532,
											"end": 23577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23532,
											"end": 23577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19938,
											"end": 19969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23532,
											"end": 23577,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23532,
											"end": 23577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23577,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 23511,
											"end": 23577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23581,
											"end": 23590,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23581,
											"end": 23590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23581,
											"end": 23590,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23581,
											"end": 23590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 23511,
											"end": 23590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23507,
											"end": 23742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23507,
											"end": 23742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23507,
											"end": 23742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23680,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23665,
											"end": 23680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23655,
											"end": 23661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 23642,
											"end": 23651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23632,
											"end": 23652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23652,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 23632,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 23632,
											"end": 23661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 23632,
											"end": 23661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23680,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8034,
											"end": 8055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5768616C652064657465637465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7850,
											"end": 8190,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23607,
											"end": 23730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23789,
											"end": 23800,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23789,
											"end": 23800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23752,
											"end": 23764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23779,
											"end": 23800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23789,
											"end": 23800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23789,
											"end": 23800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23800,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 23779,
											"end": 23828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23817,
											"end": 23828,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23817,
											"end": 23828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23804,
											"end": 23828,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 23828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 23828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23828,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 23779,
											"end": 23828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23775,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 23775,
											"end": 23869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23854,
											"end": 23858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23775,
											"end": 23869,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 23775,
											"end": 23869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20047,
											"end": 20051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 23879,
											"end": 23950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23934,
											"end": 23939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23950,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 23879,
											"end": 23950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23960,
											"end": 24010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 23975,
											"end": 23981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23983,
											"end": 23992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23994,
											"end": 24000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23960,
											"end": 23974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 23960,
											"end": 24010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23960,
											"end": 24010,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 23960,
											"end": 24010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23163,
											"end": 24017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23163,
											"end": 24017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 24017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 24017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 24017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 24017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 21730,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21877,
											"end": 21884,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 21877,
											"end": 21884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21866,
											"end": 21873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8438,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8475,
											"end": 8509,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8195,
											"end": 8601,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 21845,
											"end": 21952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21963,
											"end": 21982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21985,
											"end": 21995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 21985,
											"end": 21993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 21985,
											"end": 21995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21985,
											"end": 21995,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 21985,
											"end": 21995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21963,
											"end": 21995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22013,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 21963,
											"end": 21995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 22013,
											"end": 22034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22034,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 22013,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22006,
											"end": 22034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 22041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21730,
											"end": 22041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27810,
											"end": 28058,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 27810,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27926,
											"end": 27942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27962,
											"end": 27969,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27962,
											"end": 27969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27959,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 27945,
											"end": 27959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 27945,
											"end": 27969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 27945,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27980,
											"end": 27996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28022,
											"end": 28025,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28000,
											"end": 28018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 27926,
											"end": 27969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28000,
											"end": 28007,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28000,
											"end": 28018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28000,
											"end": 28018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28000,
											"end": 28018,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 28000,
											"end": 28018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 27999,
											"end": 28025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27980,
											"end": 28025,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27810,
											"end": 28058,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27810,
											"end": 28058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28869,
											"end": 29028,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28869,
											"end": 29028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28911,
											"end": 28918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28931,
											"end": 28946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28967,
											"end": 28986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 28967,
											"end": 28984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 28967,
											"end": 28986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28967,
											"end": 28986,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 28967,
											"end": 28986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28930,
											"end": 28986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28930,
											"end": 28986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28930,
											"end": 28986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29004,
											"end": 29021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 28930,
											"end": 28986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28930,
											"end": 28986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29004,
											"end": 29021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29004,
											"end": 29021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29004,
											"end": 29021,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 29004,
											"end": 29021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28997,
											"end": 29021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28997,
											"end": 29021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28997,
											"end": 29021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28997,
											"end": 29021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28869,
											"end": 29028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28869,
											"end": 29028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16538,
											"end": 16557,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16534,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 16534,
											"end": 16623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16609,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16580,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2622,
											"end": 2825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16534,
											"end": 16623,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 16534,
											"end": 16623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16636,
											"end": 16657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16632,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 16632,
											"end": 16722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16708,
											"end": 16709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2622,
											"end": 2825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16632,
											"end": 16722,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 16632,
											"end": 16722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16731,
											"end": 16766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16776,
											"end": 16852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16776,
											"end": 16852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16776,
											"end": 16852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16776,
											"end": 16852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16835,
											"end": 16840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16841,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16388,
											"end": 16858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24023,
											"end": 24792,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 24023,
											"end": 24792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24158,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 24158,
											"end": 24211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24186,
											"end": 24200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 24186,
											"end": 24198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 24186,
											"end": 24200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24186,
											"end": 24200,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 24186,
											"end": 24200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24236,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24225,
											"end": 24242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24258,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24247,
											"end": 24262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24246,
											"end": 24262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 24225,
											"end": 24262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24278,
											"end": 24316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 24300,
											"end": 24304,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24306,
											"end": 24308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24278,
											"end": 24299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 24278,
											"end": 24316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24278,
											"end": 24316,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 24278,
											"end": 24316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 24221,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24349,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24338,
											"end": 24355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24337,
											"end": 24355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24370,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24359,
											"end": 24374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 24337,
											"end": 24374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24333,
											"end": 24722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24333,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 24333,
											"end": 24722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24390,
											"end": 24426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 24410,
											"end": 24414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24416,
											"end": 24418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24420,
											"end": 24425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24390,
											"end": 24409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 24390,
											"end": 24426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24333,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 24333,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24459,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24448,
											"end": 24465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24481,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 24443,
											"end": 24722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 24519,
											"end": 24523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24525,
											"end": 24527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 24501,
											"end": 24535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 24443,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24556,
											"end": 24573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24588,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24577,
											"end": 24592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 24556,
											"end": 24592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 24552,
											"end": 24722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 24630,
											"end": 24634,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24636,
											"end": 24638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24640,
											"end": 24645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 24608,
											"end": 24646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 24552,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24677,
											"end": 24711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 24695,
											"end": 24699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24701,
											"end": 24703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24677,
											"end": 24694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 24677,
											"end": 24711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24677,
											"end": 24711,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 24677,
											"end": 24711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 24732,
											"end": 24786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 25097,
											"end": 25119,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 25097,
											"end": 25119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25080,
											"end": 25094,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 25080,
											"end": 25119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25140,
											"end": 25155,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25140,
											"end": 25155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25137,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25130,
											"end": 25155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25037,
											"end": 25162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29131,
											"end": 29138,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29131,
											"end": 29138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29174,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29167,
											"end": 29174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29085,
											"end": 29092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29085,
											"end": 29092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29085,
											"end": 29092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29085,
											"end": 29092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29085,
											"end": 29092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29218,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29209,
											"end": 29225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29205,
											"end": 29225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29205,
											"end": 29225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29274,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29275,
											"end": 29284,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29285,
											"end": 29286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 29275,
											"end": 29287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29275,
											"end": 29287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 29267,
											"end": 29349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29325,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29326,
											"end": 29335,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29336,
											"end": 29337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 29326,
											"end": 29338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29326,
											"end": 29338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29349,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29349,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 29267,
											"end": 29349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 29246,
											"end": 29422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29390,
											"end": 29397,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29390,
											"end": 29397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29399,
											"end": 29406,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29399,
											"end": 29406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 29246,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29464,
											"end": 29473,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29474,
											"end": 29475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 29464,
											"end": 29476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29464,
											"end": 29476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 29446,
											"end": 29477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29453,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29446,
											"end": 29477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29477,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 29446,
											"end": 29477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29436,
											"end": 29477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29436,
											"end": 29477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29520,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29530,
											"end": 29531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 29520,
											"end": 29532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29520,
											"end": 29532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29512,
											"end": 29533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 29533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 29502,
											"end": 29533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 29509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 29533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29502,
											"end": 29533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 29502,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 29227,
											"end": 29230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29227,
											"end": 29230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29578,
											"end": 29585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29575,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29568,
											"end": 29575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29568,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 29568,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29585,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 29554,
											"end": 29637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29609,
											"end": 29616,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29609,
											"end": 29616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29618,
											"end": 29625,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29618,
											"end": 29625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29637,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 29554,
											"end": 29637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29655,
											"end": 29662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29655,
											"end": 29662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29664,
											"end": 29671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29664,
											"end": 29671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29034,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29034,
											"end": 29679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24798,
											"end": 25031,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 24798,
											"end": 25031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 24844,
											"end": 24858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24867,
											"end": 24874,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24867,
											"end": 24874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24867,
											"end": 24879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 24844,
											"end": 24879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 24840,
											"end": 24888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24798,
											"end": 25031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24888,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 24840,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 24937,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 24923,
											"end": 24937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 24937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 24898,
											"end": 24937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24966,
											"end": 24973,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24966,
											"end": 24973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24966,
											"end": 24973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24963,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24948,
											"end": 24973,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25013,
											"end": 25024,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24798,
											"end": 25031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26432,
											"end": 27081,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 26432,
											"end": 27081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26577,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26606,
											"end": 26629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26643,
											"end": 26666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26680,
											"end": 26699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26712,
											"end": 26739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 26731,
											"end": 26738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26712,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 26712,
											"end": 26739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26712,
											"end": 26739,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 26712,
											"end": 26739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26775,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26563,
											"end": 26739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26768,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 26768,
											"end": 26793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26786,
											"end": 26793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26786,
											"end": 26793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26768,
											"end": 26793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26768,
											"end": 26793,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 26768,
											"end": 26793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26757,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26829,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26822,
											"end": 26837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 26822,
											"end": 26847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26847,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26822,
											"end": 26847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26822,
											"end": 26847,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 26822,
											"end": 26847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26811,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26847,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 26879,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26900,
											"end": 26915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26900,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26879,
											"end": 26915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26879,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 26879,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26876,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26858,
											"end": 26915,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26926,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 26941,
											"end": 26947,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26949,
											"end": 26956,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26958,
											"end": 26969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26926,
											"end": 26940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 26926,
											"end": 26970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26926,
											"end": 26970,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 26926,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26981,
											"end": 27014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 26993,
											"end": 27000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27002,
											"end": 27013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26981,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 26981,
											"end": 27014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26981,
											"end": 27014,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 26981,
											"end": 27014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27047,
											"end": 27056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27045,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 27058,
											"end": 27073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27030,
											"end": 27074,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26432,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26432,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26432,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26432,
											"end": 27081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25765,
											"end": 26426,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 25765,
											"end": 26426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25908,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25937,
											"end": 25960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 25997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26011,
											"end": 26030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26043,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 26062,
											"end": 26069,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26043,
											"end": 26061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 26043,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26043,
											"end": 26070,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 26043,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26106,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26099,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 26099,
											"end": 26124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 26070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26099,
											"end": 26124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26124,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 26099,
											"end": 26124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26124,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26124,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26081,
											"end": 26124,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26163,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 26156,
											"end": 26192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26177,
											"end": 26192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26177,
											"end": 26192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26156,
											"end": 26192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26156,
											"end": 26192,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 26156,
											"end": 26192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26142,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26231,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26224,
											"end": 26242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 26224,
											"end": 26260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26245,
											"end": 26260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26245,
											"end": 26260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26224,
											"end": 26260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25759,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 25168,
											"end": 25759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25309,
											"end": 25324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25338,
											"end": 25361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25375,
											"end": 25398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25412,
											"end": 25431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 25463,
											"end": 25470,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 25444,
											"end": 25471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25471,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 25444,
											"end": 25471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25507,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25500,
											"end": 25525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 25500,
											"end": 25525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25295,
											"end": 25471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25500,
											"end": 25525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 25500,
											"end": 25525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27087,
											"end": 27804,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 27087,
											"end": 27804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27261,
											"end": 27284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27298,
											"end": 27321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27335,
											"end": 27354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 27386,
											"end": 27393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 27367,
											"end": 27394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27394,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 27367,
											"end": 27394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27430,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27218,
											"end": 27394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27423,
											"end": 27448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 27423,
											"end": 27448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27441,
											"end": 27448,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27441,
											"end": 27448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 27423,
											"end": 27448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27448,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 27423,
											"end": 27448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27448,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27448,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27484,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27477,
											"end": 27492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 27477,
											"end": 27502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27495,
											"end": 27502,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27495,
											"end": 27502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 27477,
											"end": 27502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 30420,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 29935,
											"end": 30420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30061,
											"end": 30076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30101,
											"end": 30104,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30090,
											"end": 30097,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30090,
											"end": 30097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 30080,
											"end": 30097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 30080,
											"end": 30097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 30079,
											"end": 30104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 30079,
											"end": 30104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30061,
											"end": 30104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30119,
											"end": 30130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30119,
											"end": 30130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 30115,
											"end": 30414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30146,
											"end": 30161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30164,
											"end": 30185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 30174,
											"end": 30185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 30164,
											"end": 30185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30185,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 30164,
											"end": 30185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30298,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30267,
											"end": 30298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30267,
											"end": 30298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30266,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30146,
											"end": 30185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30146,
											"end": 30185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30259,
											"end": 30325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 30259,
											"end": 30325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30146,
											"end": 30185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30146,
											"end": 30185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 30259,
											"end": 30325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30325,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 30259,
											"end": 30325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30208,
											"end": 30239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30325,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30325,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30200,
											"end": 30325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30403,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 30420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 30420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 30420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 30420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 28863,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 28612,
											"end": 28863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28689,
											"end": 28701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28733,
											"end": 28736,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28715,
											"end": 28729,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 28715,
											"end": 28729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28705,
											"end": 28729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 28705,
											"end": 28729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 28704,
											"end": 28736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 28704,
											"end": 28736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28689,
											"end": 28736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28747,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28762,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 28769,
											"end": 28780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28689,
											"end": 28736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28762,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28762,
											"end": 28780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28762,
											"end": 28780,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 28762,
											"end": 28780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28808,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28801,
											"end": 28808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28801,
											"end": 28815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 28801,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28798,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28791,
											"end": 28815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28849,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 28839,
											"end": 28849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 28839,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 28839,
											"end": 28856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 28839,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28826,
											"end": 28836,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 28826,
											"end": 28856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28612,
											"end": 28863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 199,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 351,
											"end": 372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 444,
											"end": 450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 428,
											"end": 437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 417,
											"end": 451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 469,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 500,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 479,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 479,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 588,
											"end": 602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 584,
											"end": 607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 584,
											"end": 607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 554,
											"end": 571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 543,
											"end": 609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 508,
											"end": 518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 508,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 479,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 643,
											"end": 652,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 639,
											"end": 661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 733,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 727,
											"end": 734,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 722,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 710,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 695,
											"end": 704,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 691,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 679,
											"end": 741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 679,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 679,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 679,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 752,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 820,
											"end": 840,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 859,
											"end": 901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 859,
											"end": 901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 849,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 849,
											"end": 919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 915,
											"end": 916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 905,
											"end": 917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 849,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 849,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 752,
											"end": 925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 752,
											"end": 925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 930,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1098,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1127,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 930,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1712,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1748,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1796,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2405,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2370,
											"end": 2422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2420,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2370,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2567,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2568,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2527,
											"end": 2587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2587,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2527,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2945,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2962,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2998,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3046,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 3046,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 3090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3508,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3604,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3597,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3640,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3739,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3725,
											"end": 3762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3742,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3898,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3773,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3856,
											"end": 3892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3872,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 4283,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3903,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4116,
											"end": 4277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4194,
											"end": 4197,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4190,
											"end": 4210,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4116,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 4283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 4283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 4283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5833,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 5706,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5762,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5758,
											"end": 5778,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 5803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5819,
											"end": 5820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5965,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5838,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5909,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5890,
											"end": 5910,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5920,
											"end": 5935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5958,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5951,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5970,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6027,
											"end": 6070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6050,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6086,
											"end": 6099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6278,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6110,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6201,
											"end": 6272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6252,
											"end": 6270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8823,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8606,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8726,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8711,
											"end": 8714,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8755,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8741,
											"end": 8756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8776,
											"end": 8777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8784,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8808,
											"end": 8817,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"CYBCC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changePairAddress(address)": "8873b15f",
							"decimals()": "313ce567",
							"disbleAntiWhale()": "60c3ae84",
							"enableAntiWhale()": "5c7ffc88",
							"excludeAccountFromReward(address)": "6049876e",
							"excludeFromFee(address)": "437823ec",
							"getMarketingAndDevelopmentAccount()": "d12dc1c1",
							"getTaxFee()": "f66608fe",
							"includeAccountinReward(address)": "fdeb889f",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromFee(address)": "5342acb4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pairAddress()": "a8b08982",
							"reflect(uint256)": "053ab182",
							"reflectionFee()": "83ad7994",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalFeesRedistributed()": "32035504",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairAddress\",\"type\":\"address\"}],\"name\":\"changePairAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disbleAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccountFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketingAndDevelopmentAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccountinReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"reflect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesRedistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"CYBCC\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 683,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rOwned",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tOwned",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 691,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 695,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 698,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_excluded",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 700,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_decimals",
								"offset": 0,
								"slot": "10",
								"type": "t_uint8"
							},
							{
								"astId": 704,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_owner",
								"offset": 1,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 713,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tTotal",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 715,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rTotal",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 718,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 720,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_reflectionFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 722,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousReflectionFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 724,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_taxFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 726,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 728,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_marketingAndDevelopmentAccount",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 730,
								"contract": "CYBCC.sol:CYBCC",
								"label": "pairAddress",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 732,
								"contract": "CYBCC.sol:CYBCC",
								"label": "maxWalletAmount",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 735,
								"contract": "CYBCC.sol:CYBCC",
								"label": "antiWhale",
								"offset": 0,
								"slot": "21",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "CYBCC.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "CYBCC.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "CYBCC.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "CYBCC.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "CYBCC.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CYBCC.sol\":{\"keccak256\":\"0x76ab820705cd95af8869863fc882b2cdf2b14e0981efa8a2035be4c6a9be9b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0917c444a71bf70b36c5bc6d48d52a49e78555be24ae49e36ee93bf4e76e4626\",\"dweb:/ipfs/QmUL2dwkG2Qx9H2mbBd9dujjfSyTMjvUKkUEoGda6RbD4n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CYBCC.sol": {
				"ast": {
					"absolutePath": "CYBCC.sol",
					"exportedSymbols": {
						"CYBCC": [
							2022
						],
						"Context": [
							129
						],
						"ERC20": [
							676
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						]
					},
					"id": 2023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "163:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "189:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "270:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "283:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "452:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "483:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "503:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:57:0"
									},
									"src": "446:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "524:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "683:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "701:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "748:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "732:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:93:0"
									},
									"src": "677:108:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "791:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "870:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "907:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:9:0"
									},
									"scope": 77,
									"src": "861:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "922:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1007:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1017:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1057:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:9:0"
									},
									"scope": 77,
									"src": "998:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1072:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1299:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1353:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:6:0"
									},
									"scope": 77,
									"src": "1290:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1365:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1643:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1661:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1732:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:9:0"
									},
									"scope": 77,
									"src": "1634:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1747:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2428:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2461:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:6:0"
									},
									"scope": 77,
									"src": "2419:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2498:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2809:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2861:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2853:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:71:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2911:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:6:0"
									},
									"scope": 77,
									"src": "2800:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2023,
							"src": "260:2659:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3090:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3232:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3232:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3232:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3116:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3214:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3245:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3313:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3343:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:15:0"
									},
									"scope": 100,
									"src": "3304:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3364:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3434:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3440:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3466:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3466:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:15:0"
									},
									"scope": 100,
									"src": "3425:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3487:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3566:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3574:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3600:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3600:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3599:7:0"
									},
									"scope": 100,
									"src": "3557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2023,
							"src": "3204:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3732:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3758:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4273:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4349:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4366:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4370:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4366:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4359:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4296:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4306:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:9:0"
									},
									"scope": 129,
									"src": "4287:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4456:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4473:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4477:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4473:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4466:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4398:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4406:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4440:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4440:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:16:0"
									},
									"scope": 129,
									"src": "4389:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4566:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4583:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4576:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4503:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4523:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4556:9:0"
									},
									"scope": 129,
									"src": "4494:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2023,
							"src": "4255:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4739:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4765:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4915:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4934:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5254:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5296:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5345:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5278:79:0"
									},
									"src": "5248:110:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5364:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5527:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5545:16:0"
									},
									"src": "5521:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5568:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5738:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5767:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5759:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5758:18:0"
									},
									"src": "5732:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5783:345:0",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6139:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6208:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6200:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6235:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6227:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6165:82:0"
									},
									"src": "6133:115:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6254:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6439:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6468:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6460:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6459:18:0"
									},
									"src": "6433:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6484:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6690:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6709:17:0"
									},
									"src": "6684:43:0"
								}
							],
							"scope": 2023,
							"src": "4905:1824:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6860:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"7671:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "7671:7:0"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "7671:7:0"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"7680:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "7680:6:0"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "7680:6:0"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"7688:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "7688:14:0"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "7688:14:0"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"7704:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "7704:12:0"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "7704:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "6886:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "7662:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "7759:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "7723:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7723:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7742:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "7831:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "7775:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7783:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7775:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7802:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7794:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7813:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "7865:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "7849:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7849:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "7899:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "7884:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7884:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "7925:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "7910:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7910:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "8152:57:0",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "8162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "8170:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8162:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "8162:13:0"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "8185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "8195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8185:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "8185:17:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "7939:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "8122:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8108:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "8143:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8129:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8107:44:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8152:0:0"
									},
									"scope": 676,
									"src": "8096:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "8334:29:0",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "8351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "8344:12:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "8215:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8283:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8287:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "8319:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8319:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8318:15:0"
									},
									"scope": 676,
									"src": "8274:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "8538:31:0",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "8555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "8548:14:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "8369:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8485:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8491:2:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "8523:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8522:15:0"
									},
									"scope": 676,
									"src": "8476:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "9258:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9275:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "9268:9:0"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "8575:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "9211:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9219:2:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9251:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9250:7:0"
									},
									"scope": 676,
									"src": "9202:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "9405:36:0",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "9422:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "9415:19:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9290:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9353:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9364:2:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "9396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9395:9:0"
									},
									"scope": 676,
									"src": "9344:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "9573:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "9590:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9590:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "9583:25:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "9447:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "9508:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "9518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9517:17:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "9564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9563:9:0"
									},
									"scope": 676,
									"src": "9499:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "9885:103:0",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9903:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "9895:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9895:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "9911:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9911:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9895:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "9943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "9950:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "9954:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9933:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9933:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "9933:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "9970:11:0"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "9621:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "9819:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "9828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9848:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "9840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9827:27:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "9879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9878:6:0"
									},
									"scope": 676,
									"src": "9810:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "10171:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "10188:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "10200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "10207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10188:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "10181:34:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "9994:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10055:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10073:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "10065:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "10080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10064:32:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "10158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10157:9:0"
									},
									"scope": 676,
									"src": "10046:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "10636:107:0",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10654:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "10646:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10646:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "10662:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10662:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10646:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "10693:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "10700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "10709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "10684:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10684:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "10684:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "10725:11:0"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "10228:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10538:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10554:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10546:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10563:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10545:32:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10625:6:0"
									},
									"scope": 676,
									"src": "10529:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "11458:151:0",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "11476:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "11468:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11468:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "11486:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11486:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11468:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "11524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "11539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "11508:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11508:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "11508:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "11565:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "11571:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "11575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "11555:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11555:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "11555:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "11591:11:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "10749:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11344:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11374:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "11366:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11396:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "11388:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "11408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11356:71:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "11452:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11451:6:0"
									},
									"scope": 676,
									"src": "11335:274:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "12089:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "12103:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12119:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12111:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12111:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12103:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "12099:86:0",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "12123:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12171:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12163:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12163:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12163:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "12144:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12144:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "12137:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "12198:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12204:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12204:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12198:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "12194:86:0",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "12216:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12266:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12258:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12258:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12258:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "12237:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12237:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "12230:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "12297:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12303:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "12307:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "12289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12289:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "12289:24:0"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "11615:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11991:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12018:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "12010:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12040:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "12032:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12060:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "12052:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12000:71:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12089:0:0"
									},
									"scope": 676,
									"src": "11982:338:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "12740:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "12754:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12770:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12762:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12762:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12762:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12754:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "12928:362:0",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12950:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "12942:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "12964:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "12974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12964:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12942:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12997:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "13011:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12997:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "12993:115:0",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "13018:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "13068:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "13074:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "13087:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "13043:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13043:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "13036:57:0"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "13121:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "13228:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "13238:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "13228:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "13246:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "13260:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13246:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13228:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "13228:37:0"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "12750:540:0",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "12774:148:0",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "12890:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "12906:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12890:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "12890:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "13304:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13318:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13310:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13310:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13304:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "13519:206:0",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "13533:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "13678:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "13688:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "13678:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "13695:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13678:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "13678:22:0"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "13300:425:0",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "13322:191:0",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "13336:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "13467:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "13483:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13467:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "13467:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "13749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "13755:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "13759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13740:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "13735:30:0"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "12326:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "12644:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12669:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "12661:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12691:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "12683:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "12703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12651:71:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12740:0:0"
									},
									"scope": 676,
									"src": "12635:1137:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "14171:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "14185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14204:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14196:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14196:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14185:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "14181:91:0",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "14208:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14258:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14250:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14250:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14250:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "14229:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14229:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "14222:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "14301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "14310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "14281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14281:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "14281:35:0"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "13778:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "14124:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14138:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "14130:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "14147:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14129:32:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14171:0:0"
									},
									"scope": 676,
									"src": "14115:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "14697:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "14711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14722:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14722:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14711:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "14707:89:0",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "14734:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14782:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14774:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14774:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14774:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "14755:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14755:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "14748:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "14813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14830:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14822:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14822:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "14834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "14805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14805:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "14805:35:0"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "14329:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14650:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "14656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14681:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "14673:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14655:32:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14697:0:0"
									},
									"scope": 676,
									"src": "14641:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "15487:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "15506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "15513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "15522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15529:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "15497:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15497:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "15497:37:0"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "14853:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15392:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15418:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "15410:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15441:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "15433:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "15458:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15400:77:0"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15487:0:0"
									},
									"scope": 676,
									"src": "15383:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "16524:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "16538:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16555:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16547:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16547:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16538:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "16534:89:0",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "16559:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16609:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16601:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16601:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16601:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "16580:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16580:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "16573:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "16636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16655:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16647:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16647:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16636:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "16632:90:0",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "16659:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16708:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16700:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16700:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16700:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "16680:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16680:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "16673:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "16731:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "16743:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16731:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "16750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16731:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "16761:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16731:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "16731:35:0"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "16780:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "16776:76:0",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "16791:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "16819:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "16826:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "16835:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "16810:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16810:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "16805:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "15547:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16397:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16423:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "16415:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "16438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "16463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16491:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "16486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16405:101:0"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16524:0:0"
									},
									"scope": 676,
									"src": "16388:470:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "17259:465:0",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "17277:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "17269:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "17306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "17313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "17296:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17296:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17269:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "17335:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17359:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17354:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17354:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "17368:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "17354:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17335:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "17331:387:0",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "17373:345:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17391:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "17410:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17391:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "17387:208:0",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "17417:178:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "17490:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "17519:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17557:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "17442:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17442:138:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "17435:145:0"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "17608:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "17645:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "17652:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "17661:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17680:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17661:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17687:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "17636:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17636:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "17636:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "16864:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "17149:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17205:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17230:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17164:77:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17259:0:0"
									},
									"scope": 676,
									"src": "17140:584:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2023,
							"src": "7644:10082:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 677,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "17749:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "ERC20",
										"nameLocations": [
											"17793:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "17793:5:0"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "17793:5:0"
								}
							],
							"canonicalName": "CYBCC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2022,
							"linearizedBaseContracts": [
								2022,
								676,
								170,
								100,
								77,
								129
							],
							"name": "CYBCC",
							"nameLocation": "17784:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 683,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "17841:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "17805:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 682,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 680,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17813:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17805:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 681,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17824:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 687,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "17891:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "17855:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 686,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 684,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17863:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17855:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 685,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17874:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 691,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "17938:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "17905:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 690,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 688,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17913:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17905:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 689,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "17924:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 695,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "17996:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "17963:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 694,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 692,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17971:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17963:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 693,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "17982:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "18032:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18014:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 696,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "18014:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 697,
										"nodeType": "ArrayTypeName",
										"src": "18014:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 700,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "18062:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18048:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 699,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "18048:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 704,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "18094:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18078:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 701,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18078:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 702,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "18103:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 703,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "18107:6:0",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "18103:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 711,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "18145:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18120:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18120:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "18151:11:0",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18160:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 707,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "18152:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18152:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 709,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "18152:10:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 713,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "18185:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18169:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18169:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 715,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "18215:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18199:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 714,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18199:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 718,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "18245:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18229:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18229:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18258:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 720,
									"mutability": "mutable",
									"name": "_reflectionFee",
									"nameLocation": "18282:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18266:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18266:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 722,
									"mutability": "mutable",
									"name": "_previousReflectionFee",
									"nameLocation": "18319:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18303:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18303:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 724,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "18364:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18348:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18348:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "18394:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18378:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 725,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18378:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 728,
									"mutability": "mutable",
									"name": "_marketingAndDevelopmentAccount",
									"nameLocation": "18432:31:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18416:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 727,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18416:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a8b08982",
									"id": 730,
									"mutability": "mutable",
									"name": "pairAddress",
									"nameLocation": "18485:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18470:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 729,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18470:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 732,
									"mutability": "mutable",
									"name": "maxWalletAmount",
									"nameLocation": "18519:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18503:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 731,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18503:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "antiWhale",
									"nameLocation": "18545:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2022,
									"src": "18540:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 733,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "18540:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18557:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "18610:634:0",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "18620:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18632:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "18620:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "18620:14:0"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "18645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18655:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18668:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 751,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "18680:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18672:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 749,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "18672:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18672:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18668:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18655:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18645:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "18645:45:0"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 757,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "18701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "18712:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 759,
																				"name": "MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "18719:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 760,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "18725:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18719:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18718:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18712:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 764,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18701:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "18701:33:0"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "18745:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "18745:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "18745:18:0"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 771,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "18774:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 772,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "18799:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18774:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "18774:39:0"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 775,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "18824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18824:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "18824:11:0"
											},
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 779,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "18846:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 780,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "18864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18846:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "18846:25:0"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "_marketingAndDevelopmentAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "18882:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 784,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "18916:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18882:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "18882:40:0"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 787,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "18962:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 789,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "18985:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18995:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "18985:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18984:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18980:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18962:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "18962:37:0"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 796,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "19010:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 799,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 797,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "19029:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19029:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19010:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19040:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19010:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "19010:34:0"
											},
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 803,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "19055:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 805,
														"indexExpression": {
															"id": 804,
															"name": "_marketingAndDevelopmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "19074:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19055:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19109:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19055:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "19055:58:0"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 809,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "19124:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 814,
														"indexExpression": {
															"arguments": [
																{
																	"id": 812,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19151:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CYBCC_$2022",
																		"typeString": "contract CYBCC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CYBCC_$2022",
																		"typeString": "contract CYBCC"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19143:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19143:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19143:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19124:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19160:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19124:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "19124:40:0"
											},
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 818,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "19175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 820,
														"indexExpression": {
															"id": 819,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "19183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19175:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 821,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "19193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19175:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "19175:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 825,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19217:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19221:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19217:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 827,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "19229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 824,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "19211:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19211:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "19211:26:0"
											}
										]
									},
									"id": 831,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "61626320636f696e",
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18589:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c60c804c1de0c52d0c84d11aab001859983f8e5b7b8c81fc3e9f21ffba584591",
														"typeString": "literal_string \"abc coin\""
													},
													"value": "abc coin"
												},
												{
													"hexValue": "4359424343",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a1e4d5bdd8a279313ac099637956bc9607cc279a897c73c77f26a34d39ed3031",
														"typeString": "literal_string \"CYBCC\""
													},
													"value": "CYBCC"
												}
											],
											"id": 740,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 737,
												"name": "ERC20",
												"nameLocations": [
													"18583:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "18583:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18583:26:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18580:2:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18610:0:0"
									},
									"scope": 2022,
									"src": "18569:675:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "19277:2:0",
										"statements": []
									},
									"id": 835,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19257:2:0"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19277:0:0"
									},
									"scope": 2022,
									"src": "19250:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "19340:30:0",
										"statements": [
											{
												"expression": {
													"id": 840,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 704,
													"src": "19357:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 841,
												"nodeType": "Return",
												"src": "19350:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "19294:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19299:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "19331:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19330:9:0"
									},
									"scope": 2022,
									"src": "19285:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "19397:45:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 845,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "19411:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19411:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 847,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "19422:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19426:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "19422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19411:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "19407:28:0",
												"trueBody": {
													"id": 850,
													"nodeType": "PlaceholderStatement",
													"src": "19434:1:0"
												}
											}
										]
									},
									"id": 853,
									"name": "onlyOwner",
									"nameLocation": "19385:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19394:2:0"
									},
									"src": "19376:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										240
									],
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "19513:33:0",
										"statements": [
											{
												"expression": {
													"id": 859,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 700,
													"src": "19530:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 858,
												"id": 860,
												"nodeType": "Return",
												"src": "19523:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "19457:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19488:8:0"
									},
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19465:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "19506:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 856,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19506:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19505:7:0"
									},
									"scope": 2022,
									"src": "19448:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										249
									],
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "19622:31:0",
										"statements": [
											{
												"expression": {
													"id": 868,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "19639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 867,
												"id": 869,
												"nodeType": "Return",
												"src": "19632:14:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "19561:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19595:8:0"
									},
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19572:2:0"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "19613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19612:9:0"
									},
									"scope": 2022,
									"src": "19552:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "19714:38:0",
										"statements": [
											{
												"expression": {
													"id": 876,
													"name": "_reflectionFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "19731:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 877,
												"nodeType": "Return",
												"src": "19724:21:0"
											}
										]
									},
									"functionSelector": "83ad7994",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFee",
									"nameLocation": "19668:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19681:2:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "19705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19704:9:0"
									},
									"scope": 2022,
									"src": "19659:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "19809:31:0",
										"statements": [
											{
												"expression": {
													"id": 884,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 724,
													"src": "19826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 883,
												"id": 885,
												"nodeType": "Return",
												"src": "19819:14:0"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "19767:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19776:2:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "19800:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19799:9:0"
									},
									"scope": 2022,
									"src": "19758:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "19921:55:0",
										"statements": [
											{
												"expression": {
													"id": 892,
													"name": "_marketingAndDevelopmentAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "19938:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "19931:38:0"
											}
										]
									},
									"functionSelector": "d12dc1c1",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketingAndDevelopmentAccount",
									"nameLocation": "19855:33:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19888:2:0"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "19912:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19911:9:0"
									},
									"scope": 2022,
									"src": "19846:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "20053:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 902,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "20070:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 904,
													"indexExpression": {
														"id": 903,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "20089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20070:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 901,
												"id": 905,
												"nodeType": "Return",
												"src": "20063:34:0"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "19991:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20017:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "20009:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20008:17:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "20047:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20046:6:0"
									},
									"scope": 2022,
									"src": "19982:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										262
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "20236:142:0",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 915,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "20250:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 917,
													"indexExpression": {
														"id": 916,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "20262:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20250:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "20246:72:0",
												"trueBody": {
													"id": 922,
													"nodeType": "Block",
													"src": "20271:47:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 918,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "20292:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 920,
																"indexExpression": {
																	"id": 919,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "20300:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20292:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 914,
															"id": 921,
															"nodeType": "Return",
															"src": "20285:22:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 925,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "20355:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 927,
															"indexExpression": {
																"id": 926,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "20363:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20355:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "20335:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20335:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 914,
												"id": 929,
												"nodeType": "Return",
												"src": "20328:43:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "20119:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 911,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20197:8:0"
									},
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "20137:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "20129:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20128:16:0"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "20223:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20222:9:0"
									},
									"scope": 2022,
									"src": "20110:268:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "20448:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 938,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "20465:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 940,
													"indexExpression": {
														"id": 939,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "20477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20465:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 937,
												"id": 941,
												"nodeType": "Return",
												"src": "20458:27:0"
											}
										]
									},
									"functionSelector": "cba0e996",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "20393:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "20404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20403:17:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "20442:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20441:6:0"
									},
									"scope": 2022,
									"src": "20384:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "20562:34:0",
										"statements": [
											{
												"expression": {
													"id": 948,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 718,
													"src": "20579:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 949,
												"nodeType": "Return",
												"src": "20572:17:0"
											}
										]
									},
									"functionSelector": "32035504",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFeesRedistributed",
									"nameLocation": "20507:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20529:2:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "20553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20552:9:0"
									},
									"scope": 2022,
									"src": "20498:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "20660:51:0",
										"statements": [
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 958,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "20670:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 960,
														"indexExpression": {
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "20689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20670:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20700:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "20670:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "20670:34:0"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 956,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 955,
												"name": "onlyOwner",
												"nameLocations": [
													"20650:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "20650:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20650:9:0"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "20611:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "20626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20625:17:0"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20660:0:0"
									},
									"scope": 2022,
									"src": "20602:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "20783:43:0",
										"statements": [
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "20793:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "20807:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20793:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "20793:26:0"
											}
										]
									},
									"functionSelector": "8873b15f",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 970,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 969,
												"name": "onlyOwner",
												"nameLocations": [
													"20773:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "20773:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20773:9:0"
										}
									],
									"name": "changePairAddress",
									"nameLocation": "20726:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_pairAddress",
												"nameLocation": "20752:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "20744:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20743:22:0"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20783:0:0"
									},
									"scope": 2022,
									"src": "20717:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "20873:368:0",
										"statements": [
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "20891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "20883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 982,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20883:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 984,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "20900:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20900:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20883:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "20944:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 988,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "20945:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 990,
																"indexExpression": {
																	"id": 989,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "20957:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20945:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20978:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20923:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "20923:111:0"
											},
											{
												"assignments": [
													996,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "21054:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "21046:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1000,
												"initialValue": {
													"arguments": [
														{
															"id": 998,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "21090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "21071:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21071:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21045:53:0"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1001,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "21109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1002,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "21117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21109:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1004,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "21127:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1006,
															"indexExpression": {
																"id": 1005,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "21135:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21127:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1007,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "21145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21127:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21109:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "21109:43:0"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "21163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1012,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "21173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1013,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "21183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21173:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21163:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "21163:27:0"
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "21201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1018,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "21214:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1019,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "21227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21214:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21201:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "21201:33:0"
											}
										]
									},
									"functionSelector": "053ab182",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflect",
									"nameLocation": "20841:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "20857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "20849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20848:17:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20873:0:0"
									},
									"scope": 2022,
									"src": "20832:409:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "21375:349:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "21393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1035,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "21404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21393:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21413:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21385:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "21385:62:0"
											},
											{
												"condition": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21462:18:0",
													"subExpression": {
														"id": 1040,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "21463:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1059,
													"nodeType": "Block",
													"src": "21595:123:0",
													"statements": [
														{
															"assignments": [
																null,
																1052,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1052,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "21620:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1059,
																	"src": "21612:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1051,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21612:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null
															],
															"id": 1056,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1054,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "21662:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1053,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "21643:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21643:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21609:61:0"
														},
														{
															"expression": {
																"id": 1057,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "21692:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1032,
															"id": 1058,
															"nodeType": "Return",
															"src": "21685:22:0"
														}
													]
												},
												"id": 1060,
												"nodeType": "IfStatement",
												"src": "21458:260:0",
												"trueBody": {
													"id": 1050,
													"nodeType": "Block",
													"src": "21482:107:0",
													"statements": [
														{
															"assignments": [
																1043,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1043,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "21505:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1050,
																	"src": "21497:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21497:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1047,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1045,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "21541:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1044,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "21522:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21522:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21496:53:0"
														},
														{
															"expression": {
																"id": 1048,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "21571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1032,
															"id": 1049,
															"nodeType": "Return",
															"src": "21564:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "21256:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "21284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "21276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "21298:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "21293:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21275:41:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "21362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21361:9:0"
									},
									"scope": 2022,
									"src": "21247:477:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "21835:206:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "21866:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1071,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "21877:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21866:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21898:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21845:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "21845:107:0"
											},
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "21971:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1085,
														"src": "21963:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1078,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "21985:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21985:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21963:32:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "rAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "22013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1082,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "22023:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22013:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1084,
												"nodeType": "Return",
												"src": "22006:28:0"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "21739:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "21767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "21759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21758:17:0"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "21822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21821:9:0"
									},
									"scope": 2022,
									"src": "21730:311:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "22115:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "22133:21:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1094,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "22134:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1096,
																"indexExpression": {
																	"id": 1095,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "22146:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22134:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22156:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22125:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "22125:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1101,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "22201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1103,
														"indexExpression": {
															"id": 1102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "22209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22201:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22201:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "22197:107:0",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "22223:81:0",
													"statements": [
														{
															"expression": {
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "22237:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1108,
																	"indexExpression": {
																		"id": 1107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "22245:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22237:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1110,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 683,
																				"src": "22276:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1112,
																			"indexExpression": {
																				"id": 1111,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "22284:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22276:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1109,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "22256:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22256:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22237:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1115,
															"nodeType": "ExpressionStatement",
															"src": "22237:56:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1118,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "22314:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1120,
														"indexExpression": {
															"id": 1119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "22326:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22314:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22337:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22314:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "22314:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "22367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1124,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "22352:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22362:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "22352:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22352:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "22352:23:0"
											}
										]
									},
									"functionSelector": "6049876e",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1091,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1090,
												"name": "onlyOwner",
												"nameLocations": [
													"22105:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "22105:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22105:9:0"
										}
									],
									"name": "excludeAccountFromReward",
									"nameLocation": "22056:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "22081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:17:0"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22115:0:0"
									},
									"scope": 2022,
									"src": "22047:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "22454:410:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1139,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "22472:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1141,
															"indexExpression": {
																"id": 1140,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "22484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22472:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22494:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															},
															"value": "Account is already included"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22464:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "22464:60:0"
											},
											{
												"body": {
													"id": 1192,
													"nodeType": "Block",
													"src": "22582:276:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1156,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "22600:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1158,
																	"indexExpression": {
																		"id": 1157,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "22610:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22600:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1159,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "22616:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22600:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1191,
															"nodeType": "IfStatement",
															"src": "22596:252:0",
															"trueBody": {
																"id": 1190,
																"nodeType": "Block",
																"src": "22625:223:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1161,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 698,
																					"src": "22643:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1163,
																				"indexExpression": {
																					"id": 1162,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "22653:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "22643:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1164,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 698,
																					"src": "22658:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1169,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1165,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 698,
																							"src": "22668:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "22678:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "22668:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1167,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22687:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "22668:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "22658:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "22643:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1171,
																		"nodeType": "ExpressionStatement",
																		"src": "22643:46:0"
																	},
																	{
																		"expression": {
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1172,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "22708:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1174,
																				"indexExpression": {
																					"id": 1173,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "22716:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "22708:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22727:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "22708:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1177,
																		"nodeType": "ExpressionStatement",
																		"src": "22708:20:0"
																	},
																	{
																		"expression": {
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1178,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 695,
																					"src": "22747:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1180,
																				"indexExpression": {
																					"id": 1179,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "22759:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "22747:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22770:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "22747:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1183,
																		"nodeType": "ExpressionStatement",
																		"src": "22747:28:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1184,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 698,
																					"src": "22794:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "22804:3:0",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "22794:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22794:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1188,
																		"nodeType": "ExpressionStatement",
																		"src": "22794:15:0"
																	},
																	{
																		"id": 1189,
																		"nodeType": "Break",
																		"src": "22828:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "22555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1150,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "22559:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22569:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "22559:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22555:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1193,
												"initializationExpression": {
													"assignments": [
														1146
													],
													"declarations": [
														{
															"constant": false,
															"id": 1146,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "22548:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1193,
															"src": "22540:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "22540:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1148,
													"initialValue": {
														"hexValue": "30",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "22540:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "22577:3:0",
														"subExpression": {
															"id": 1153,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "22577:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1155,
													"nodeType": "ExpressionStatement",
													"src": "22577:3:0"
												},
												"nodeType": "ForStatement",
												"src": "22535:323:0"
											}
										]
									},
									"functionSelector": "fdeb889f",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1135,
												"name": "onlyOwner",
												"nameLocations": [
													"22444:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "22444:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22444:9:0"
										}
									],
									"name": "includeAccountinReward",
									"nameLocation": "22397:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "22420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22419:17:0"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22454:0:0"
									},
									"scope": 2022,
									"src": "22388:476:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "22914:33:0",
										"statements": [
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "22924:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22936:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22924:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "22924:16:0"
											}
										]
									},
									"functionSelector": "5c7ffc88",
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1197,
												"name": "onlyOwner",
												"nameLocations": [
													"22904:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "22904:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22904:9:0"
										}
									],
									"name": "enableAntiWhale",
									"nameLocation": "22879:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22894:2:0"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22914:0:0"
									},
									"scope": 2022,
									"src": "22870:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "22997:34:0",
										"statements": [
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "23007:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23019:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "23007:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "23007:17:0"
											}
										]
									},
									"functionSelector": "60c3ae84",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1207,
												"name": "onlyOwner",
												"nameLocations": [
													"22987:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "22987:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22987:9:0"
										}
									],
									"name": "disbleAntiWhale",
									"nameLocation": "22962:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22977:2:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22997:0:0"
									},
									"scope": 2022,
									"src": "22953:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										406
									],
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "23163:854:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1226,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "23181:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23199:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23191:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1227,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23191:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23191:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23203:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23173:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "23173:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "23262:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23275:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23275:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23275:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23262:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23287:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23254:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "23254:71:0"
											},
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "23344:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1314,
														"src": "23336:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "23370:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1247,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															931
														],
														"referencedDeclaration": 931,
														"src": "23360:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23360:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23336:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "23409:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1253,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "23426:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23409:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23446:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23388:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "23388:108:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "23511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1259,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "23521:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23521:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23511:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "23532:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1263,
																	"name": "getMarketingAndDevelopmentAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "23542:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23542:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23532:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "23511:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1267,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "23581:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23511:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "23507:235:0",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "23592:150:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1271,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1219,
																						"src": "23642:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1270,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						931
																					],
																					"referencedDeclaration": 931,
																					"src": "23632:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23632:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1273,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "23655:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23632:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1275,
																			"name": "maxWalletAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "23665:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23632:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23698:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		},
																		"value": "Whale detected!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		}
																	],
																	"id": 1269,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "23607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23607:123:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "23607:123:0"
														}
													]
												}
											},
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "23757:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1314,
														"src": "23752:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1282,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23752:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"nodeType": "VariableDeclarationStatement",
												"src": "23752:12:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1285,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "23779:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1286,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "23789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23779:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1288,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "23804:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1289,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "23817:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23804:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23779:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "23775:94:0",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "23830:39:0",
													"statements": [
														{
															"expression": {
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1292,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "23844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23854:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "23844:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1295,
															"nodeType": "ExpressionStatement",
															"src": "23844:14:0"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1299,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "23901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1298,
														"name": "isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "23883:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"nodeType": "IfStatement",
												"src": "23879:71:0",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "23910:40:0",
													"statements": [
														{
															"expression": {
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1301,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "23924:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23934:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "23924:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "23924:15:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "23975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "23983:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "23994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1311,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "24002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1307,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "23960:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23960:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "23960:50:0"
											}
										]
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "23046:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23154:8:0"
									},
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "23065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23097:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "23089:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "23116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23055:81:0"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23163:0:0"
									},
									"scope": 2022,
									"src": "23037:980:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "24148:644:0",
										"statements": [
											{
												"condition": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "24162:8:0",
													"subExpression": {
														"id": 1326,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "24163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "24158:53:0",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "24172:39:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1328,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "24186:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24186:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "24186:14:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1333,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "24225:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "24237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24225:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24246:16:0",
														"subExpression": {
															"baseExpression": {
																"id": 1336,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "24247:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1338,
															"indexExpression": {
																"id": 1337,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "24259:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24247:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24225:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "24337:18:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1348,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "24338:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1350,
																"indexExpression": {
																	"id": 1349,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "24350:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24338:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1352,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "24359:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1354,
															"indexExpression": {
																"id": 1353,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "24371:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24359:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "24337:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "24447:18:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1363,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "24448:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1365,
																	"indexExpression": {
																		"id": 1364,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "24460:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24448:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "24469:16:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1367,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "24470:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1369,
																	"indexExpression": {
																		"id": 1368,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "24482:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24470:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24447:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1379,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "24556:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1381,
																	"indexExpression": {
																		"id": 1380,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "24568:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24556:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1382,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "24577:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1384,
																	"indexExpression": {
																		"id": 1383,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "24589:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24577:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "24556:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1399,
																"nodeType": "Block",
																"src": "24663:59:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1394,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1317,
																					"src": "24695:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1395,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "24701:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1396,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1321,
																					"src": "24705:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1393,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "24677:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24677:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1398,
																		"nodeType": "ExpressionStatement",
																		"src": "24677:34:0"
																	}
																]
															},
															"id": 1400,
															"nodeType": "IfStatement",
															"src": "24552:170:0",
															"trueBody": {
																"id": 1392,
																"nodeType": "Block",
																"src": "24594:63:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1387,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1317,
																					"src": "24630:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1388,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "24636:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1389,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1321,
																					"src": "24640:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1386,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "24608:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24608:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1391,
																		"nodeType": "ExpressionStatement",
																		"src": "24608:38:0"
																	}
																]
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "24443:279:0",
														"trueBody": {
															"id": 1378,
															"nodeType": "Block",
															"src": "24487:59:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1373,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1317,
																				"src": "24519:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1374,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1319,
																				"src": "24525:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1375,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "24529:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1372,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "24501:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24501:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "24501:34:0"
																}
															]
														}
													},
													"id": 1402,
													"nodeType": "IfStatement",
													"src": "24333:389:0",
													"trueBody": {
														"id": 1362,
														"nodeType": "Block",
														"src": "24376:61:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1357,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1317,
																			"src": "24410:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1358,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "24416:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1359,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "24420:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1356,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "24390:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24390:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1361,
																"nodeType": "ExpressionStatement",
																"src": "24390:36:0"
															}
														]
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "24221:501:0",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "24264:63:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1342,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "24300:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1343,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "24306:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1344,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "24310:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1341,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "24278:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24278:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "24278:38:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "24736:8:0",
													"subExpression": {
														"id": 1404,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "24737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1410,
												"nodeType": "IfStatement",
												"src": "24732:54:0",
												"trueBody": {
													"id": 1409,
													"nodeType": "Block",
													"src": "24746:40:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1406,
																	"name": "restoreAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "24760:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24760:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1408,
															"nodeType": "ExpressionStatement",
															"src": "24760:15:0"
														}
													]
												}
											}
										]
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "24032:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "24056:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "24078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24106:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "24098:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "24126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "24121:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24046:93:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24148:0:0"
									},
									"scope": 2022,
									"src": "24023:769:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "24830:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1415,
															"name": "_reflectionFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "24844:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24862:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24844:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1418,
															"name": "_taxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "24867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24878:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24844:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "24840:48:0",
												"trueBody": {
													"functionReturnParameters": 1414,
													"id": 1422,
													"nodeType": "Return",
													"src": "24881:7:0"
												}
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "24898:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1425,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "24923:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24898:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "24898:39:0"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "24948:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "24966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24948:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "24948:25:0"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1432,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "24984:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24984:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "24984:18:0"
											},
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1436,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "25013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25013:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "25013:11:0"
											}
										]
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "24807:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24819:2:0"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24830:0:0"
									},
									"scope": 2022,
									"src": "24798:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "25070:92:0",
										"statements": [
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "25080:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1445,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "25097:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25080:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "25080:39:0"
											},
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1448,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "25130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1449,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "25140:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25130:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "25130:25:0"
											}
										]
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "25046:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25059:2:0"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25070:0:0"
									},
									"scope": 2022,
									"src": "25037:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "25285:474:0",
										"statements": [
											{
												"assignments": [
													1463,
													1465,
													1467,
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "25317:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "25309:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "25346:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "25338:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "25383:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "25375:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "25420:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "25412:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"arguments": [
														{
															"id": 1471,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "25463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1470,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "25444:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25444:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25295:176:0"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1474,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "25482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1476,
														"indexExpression": {
															"id": 1475,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "25490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25482:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1477,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "25500:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1479,
															"indexExpression": {
																"id": 1478,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "25508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25500:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1480,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "25518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25500:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25482:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "25482:43:0"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1484,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "25536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1486,
														"indexExpression": {
															"id": 1485,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "25544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25536:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1487,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "25557:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1489,
															"indexExpression": {
																"id": 1488,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "25565:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25557:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1490,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "25578:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25557:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25536:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "25536:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1495,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "25619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "25627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1497,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "25636:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "25604:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25604:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "25604:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1501,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "25671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1502,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "25680:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1500,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "25659:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25659:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "25659:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1506,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "25717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "25725:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "25736:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1505,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "25708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25708:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "EmitStatement",
												"src": "25703:49:0"
											}
										]
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "25177:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "25212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "25204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "25236:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "25228:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "25263:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "25255:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25194:82:0"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25285:0:0"
									},
									"scope": 2022,
									"src": "25168:591:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "25884:542:0",
										"statements": [
											{
												"assignments": [
													1522,
													1524,
													1526,
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "25916:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "25908:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "25945:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "25937:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "25982:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "25974:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "26019:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "26011:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [
														{
															"id": 1530,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "26062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1529,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "26043:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26043:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25894:176:0"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1533,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "26081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1535,
														"indexExpression": {
															"id": 1534,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "26089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26081:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1536,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "26099:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1538,
															"indexExpression": {
																"id": 1537,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "26107:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26099:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1539,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "26117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26099:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26081:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "26081:43:0"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1543,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "26135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1545,
														"indexExpression": {
															"id": 1544,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "26143:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1546,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "26156:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1548,
															"indexExpression": {
																"id": 1547,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "26164:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26156:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1549,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "26177:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26156:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26135:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "26135:57:0"
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1553,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "26203:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1555,
														"indexExpression": {
															"id": 1554,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "26211:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26203:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1556,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "26224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1558,
															"indexExpression": {
																"id": 1557,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "26232:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26224:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1559,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "26245:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26224:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26203:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "26203:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1564,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "26286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1565,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "26294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1566,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "26303:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1563,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "26271:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26271:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "26271:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "26338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1571,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "26347:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "26326:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26326:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "26326:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1575,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "26384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1576,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "26392:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "26403:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1574,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "26375:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26375:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "EmitStatement",
												"src": "26370:49:0"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "25774:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "25811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "25803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "25835:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "25827:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "25862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "25854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25793:82:0"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25884:0:0"
									},
									"scope": 2022,
									"src": "25765:661:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "26553:528:0",
										"statements": [
											{
												"assignments": [
													1591,
													1593,
													1595,
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "26585:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "26577:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1593,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "26614:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "26606:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "26651:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "26643:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "26688:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "26680:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"arguments": [
														{
															"id": 1599,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "26731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1598,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "26712:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26712:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26563:176:0"
											},
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1602,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "26750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1604,
														"indexExpression": {
															"id": 1603,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "26758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26750:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1605,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "26768:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1607,
															"indexExpression": {
																"id": 1606,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "26776:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26768:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1608,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "26786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26768:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26750:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "26750:43:0"
											},
											{
												"expression": {
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1612,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "26804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1614,
														"indexExpression": {
															"id": 1613,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "26812:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26804:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1615,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "26822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1617,
															"indexExpression": {
																"id": 1616,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "26830:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26822:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1618,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "26840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26822:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26804:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "26804:43:0"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1622,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "26858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1624,
														"indexExpression": {
															"id": 1623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "26866:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26858:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1625,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "26879:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1627,
															"indexExpression": {
																"id": 1626,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "26887:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26879:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1628,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "26900:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26879:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26858:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "26858:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1633,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "26941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "26949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1635,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "26958:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1632,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "26926:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26926:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "26926:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "26993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1640,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "27002:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1638,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "26981:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26981:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "26981:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1644,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "27039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "27047:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "27058:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "27030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27030:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "EmitStatement",
												"src": "27025:49:0"
											}
										]
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "26441:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "26480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "26472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "26504:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "26496:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "26531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "26523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26462:82:0"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26553:0:0"
									},
									"scope": 2022,
									"src": "26432:649:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "27208:596:0",
										"statements": [
											{
												"assignments": [
													1660,
													1662,
													1664,
													1666
												],
												"declarations": [
													{
														"constant": false,
														"id": 1660,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "27240:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "27232:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1662,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "27269:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "27261:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "27306:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "27298:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "27343:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "27335:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"arguments": [
														{
															"id": 1668,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "27386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1667,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "27367:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27367:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27218:176:0"
											},
											{
												"expression": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1671,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "27405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1673,
														"indexExpression": {
															"id": 1672,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "27413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27405:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1674,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "27423:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1676,
															"indexExpression": {
																"id": 1675,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "27431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27423:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1677,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "27441:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27423:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27405:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "27405:43:0"
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1681,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "27459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1683,
														"indexExpression": {
															"id": 1682,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "27467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27459:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1684,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "27477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1686,
															"indexExpression": {
																"id": 1685,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "27485:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27477:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1687,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "27495:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27477:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27459:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "27459:43:0"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1691,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "27513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"id": 1692,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "27521:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27513:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1694,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "27534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1696,
															"indexExpression": {
																"id": 1695,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "27542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27534:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1697,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "27555:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27534:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27513:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "27513:57:0"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1701,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "27581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1703,
														"indexExpression": {
															"id": 1702,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "27589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27581:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1704,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "27602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1706,
															"indexExpression": {
																"id": 1705,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "27610:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27602:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1707,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "27623:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27602:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27581:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "27581:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "27664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "27672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1714,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "27681:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "27649:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27649:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "27649:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1718,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "27716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1719,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "27725:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1717,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "27704:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27704:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "27704:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1723,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "27762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1724,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "27770:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1725,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "27781:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1722,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "27753:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27753:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "EmitStatement",
												"src": "27748:49:0"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "27096:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "27135:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "27127:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "27159:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "27151:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "27186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "27178:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27117:82:0"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27208:0:0"
									},
									"scope": 2022,
									"src": "27087:717:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "27916:142:0",
										"statements": [
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "allTaxes",
														"nameLocation": "27934:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "27926:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1738,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "27945:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1739,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "27962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27945:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27926:43:0"
											},
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "27988:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "27980:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1744,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "28000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1745,
																	"name": "allTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "28010:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28000:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1747,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "27999:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28022:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "27999:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27980:45:0"
											},
											{
												"expression": {
													"id": 1751,
													"name": "taxValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1743,
													"src": "28043:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1752,
												"nodeType": "Return",
												"src": "28036:15:0"
											}
										]
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCompleteTaxValue",
									"nameLocation": "27819:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "27848:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "27840:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27839:17:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "27903:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27902:9:0"
									},
									"scope": 2022,
									"src": "27810:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "28253:353:0",
										"statements": [
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "28271:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "28263:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"arguments": [
														{
															"id": 1770,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "28303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "_getCompleteTaxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "28282:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28282:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28263:48:0"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "28330:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "28322:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1775,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "28348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1776,
														"name": "taxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "28358:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28348:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28322:44:0"
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "28385:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "28377:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1781,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "28399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28399:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28377:32:0"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "28428:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "28420:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1786,
														"name": "tTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "28446:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1787,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "28464:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28446:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28420:55:0"
											},
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "28494:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "28486:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "28504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1793,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "28514:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28504:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28486:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1796,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "28544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1797,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "28553:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1798,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "28570:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1799,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "28587:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1800,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "28543:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1801,
												"nodeType": "Return",
												"src": "28536:63:0"
											}
										]
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTransferValues",
									"nameLocation": "28073:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "28100:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "28092:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:17:0"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "28168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "28189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "28210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "28231:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28154:94:0"
									},
									"scope": 2022,
									"src": "28064:542:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "28679:184:0",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "28697:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "28689:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1812,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "28705:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1813,
																	"name": "_reflectionFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "28715:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28705:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1815,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28704:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28733:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "28704:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28689:47:0"
											},
											{
												"assignments": [
													1820
												],
												"declarations": [
													{
														"constant": false,
														"id": 1820,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "28755:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "28747:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1824,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1821,
														"name": "tFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "28762:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1822,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "28769:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28762:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28747:33:0"
											},
											{
												"expression": {
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1825,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "28791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1826,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "28801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1827,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "28811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "28801:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28791:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "28791:24:0"
											},
											{
												"expression": {
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1831,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "28826:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1832,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "28839:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1833,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "28852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "28839:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28826:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "28826:30:0"
											}
										]
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "28621:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "28641:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "28633:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "28658:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "28650:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28632:38:0"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28679:0:0"
									},
									"scope": 2022,
									"src": "28612:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "28920:108:0",
										"statements": [
											{
												"assignments": [
													1844,
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "28939:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "28931:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "28956:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "28948:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1847,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "28967:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28967:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28930:56:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1850,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "29004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1851,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "29014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29004:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1842,
												"id": 1853,
												"nodeType": "Return",
												"src": "28997:24:0"
											}
										]
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "28878:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28886:2:0"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "28911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28910:9:0"
									},
									"scope": 2022,
									"src": "28869:159:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "29103:576:0",
										"statements": [
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "29121:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "29113:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1865,
												"initialValue": {
													"id": 1864,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 715,
													"src": "29131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29113:25:0"
											},
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "29157:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "29149:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1866,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1869,
												"initialValue": {
													"id": 1868,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "29167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29149:25:0"
											},
											{
												"body": {
													"id": 1922,
													"nodeType": "Block",
													"src": "29232:312:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1881,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "29267:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1885,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1882,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "29275:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1884,
																			"indexExpression": {
																				"id": 1883,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "29285:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29275:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29267:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1886,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "29291:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29267:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1888,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "29318:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1892,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1889,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "29326:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1891,
																			"indexExpression": {
																				"id": 1890,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "29336:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29326:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29318:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1893,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "29342:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29318:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "29267:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1901,
															"nodeType": "IfStatement",
															"src": "29246:176:0",
															"trueBody": {
																"id": 1900,
																"nodeType": "Block",
																"src": "29364:58:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 1896,
																					"name": "_rTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 715,
																					"src": "29390:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1897,
																					"name": "_tTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "29399:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1898,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "29389:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 1861,
																		"id": 1899,
																		"nodeType": "Return",
																		"src": "29382:25:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1902,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "29436:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1903,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "29446:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1904,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "29456:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1908,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1905,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "29464:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1907,
																			"indexExpression": {
																				"id": 1906,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "29474:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29464:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29456:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29446:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29436:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1911,
															"nodeType": "ExpressionStatement",
															"src": "29436:41:0"
														},
														{
															"expression": {
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1912,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "29492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1913,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "29502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1914,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "29512:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1918,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1915,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "29520:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1917,
																			"indexExpression": {
																				"id": 1916,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "29530:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29520:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29512:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29502:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29492:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1921,
															"nodeType": "ExpressionStatement",
															"src": "29492:41:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1874,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "29205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1875,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "29209:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29219:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "29209:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29205:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1923,
												"initializationExpression": {
													"assignments": [
														1871
													],
													"declarations": [
														{
															"constant": false,
															"id": 1871,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "29198:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1923,
															"src": "29190:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1870,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1873,
													"initialValue": {
														"hexValue": "30",
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29202:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29190:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "29227:3:0",
														"subExpression": {
															"id": 1878,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "29227:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1880,
													"nodeType": "ExpressionStatement",
													"src": "29227:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29185:359:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1924,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "29558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1925,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "29568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1926,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "29578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29568:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29558:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1934,
												"nodeType": "IfStatement",
												"src": "29554:83:0",
												"trueBody": {
													"id": 1933,
													"nodeType": "Block",
													"src": "29587:50:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 1929,
																		"name": "_rTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "29609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1930,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "29618:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29608:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 1861,
															"id": 1932,
															"nodeType": "Return",
															"src": "29601:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1935,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "29655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1936,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "29664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1937,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29654:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1861,
												"id": 1938,
												"nodeType": "Return",
												"src": "29647:25:0"
											}
										]
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "29043:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29060:2:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "29085:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "29094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29084:18:0"
									},
									"scope": 2022,
									"src": "29034:645:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "29731:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "29749:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29759:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29759:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29749:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c72656164792072656e6f756e636564",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29771:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b53bdb152a23f76fad642d2f477f012cffcad63f25bb0bd964f66c744b5e63c5",
																"typeString": "literal_string \"already renounced\""
															},
															"value": "already renounced"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b53bdb152a23f76fad642d2f477f012cffcad63f25bb0bd964f66c744b5e63c5",
																"typeString": "literal_string \"already renounced\""
															}
														],
														"id": 1945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29741:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "29741:50:0"
											},
											{
												"expression": {
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "29801:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1956,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29810:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29810:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29801:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "29801:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1943,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1942,
												"name": "onlyOwner",
												"nameLocations": [
													"29721:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "29721:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29721:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "29694:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29711:2:0"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29731:0:0"
									},
									"scope": 2022,
									"src": "29685:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "29895:34:0",
										"statements": [
											{
												"expression": {
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1970,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "29905:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1971,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "29914:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29905:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "29905:17:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1968,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1967,
												"name": "onlyOwner",
												"nameLocations": [
													"29885:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "29885:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29885:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29842:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "29860:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29859:18:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29895:0:0"
									},
									"scope": 2022,
									"src": "29833:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "30051:369:0",
										"statements": [
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "tTaxFee",
														"nameLocation": "30069:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "30061:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1986,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "30080:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1987,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "30090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30080:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1989,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30079:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30101:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "30079:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30061:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1993,
														"name": "tTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "30119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30119:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2019,
												"nodeType": "IfStatement",
												"src": "30115:299:0",
												"trueBody": {
													"id": 2018,
													"nodeType": "Block",
													"src": "30132:282:0",
													"statements": [
														{
															"assignments": [
																1997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1997,
																	"mutability": "mutable",
																	"name": "rTaxFee",
																	"nameLocation": "30154:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2018,
																	"src": "30146:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1996,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30146:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2001,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1998,
																	"name": "tTaxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "30164:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1999,
																	"name": "currentRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "30174:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30164:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30146:39:0"
														},
														{
															"expression": {
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2002,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "30200:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2004,
																	"indexExpression": {
																		"id": 2003,
																		"name": "_marketingAndDevelopmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "30208:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "30200:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2005,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "30259:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2007,
																		"indexExpression": {
																			"id": 2006,
																			"name": "_marketingAndDevelopmentAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 728,
																			"src": "30267:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30259:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2008,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "30318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30259:66:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30200:125:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2011,
															"nodeType": "ExpressionStatement",
															"src": "30200:125:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2013,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "30354:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2014,
																		"name": "_marketingAndDevelopmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "30362:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2015,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "30395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2012,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "30345:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30345:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2017,
															"nodeType": "EmitStatement",
															"src": "30340:63:0"
														}
													]
												}
											}
										]
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxFeeTransfer",
									"nameLocation": "29944:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "29968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "30000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "29992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "30025:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "30017:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29958:84:0"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30051:0:0"
									},
									"scope": 2022,
									"src": "29935:485:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2023,
							"src": "17775:12647:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "163:30260:0"
				},
				"id": 0
			}
		}
	}
}