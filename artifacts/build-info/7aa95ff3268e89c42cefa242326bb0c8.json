{
	"id": "7aa95ff3268e89c42cefa242326bb0c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"CYBCC.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract CYBCC is ERC20 {\r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n\r\n    mapping(address => bool) private _isExcluded;\r\n    address[] private _excluded;\r\n\r\n    uint8 private _decimals;\r\n    address private _owner = msg.sender;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private _tTotal;\r\n    uint256 private _rTotal;\r\n    uint256 private _tFeeTotal = 0;\r\n\r\n    uint256 private _reflectionFee;\r\n    uint256 private _previousReflectionFee;\r\n\r\n    uint256 private _taxFee;\r\n    uint256 private _previousTaxFee;\r\n\r\n    address private _marketingAccount;\r\n    address private _developmentAccount;\r\n\r\n    uint private maxWalletAmount = 10000000 * 10**uint256(_decimals);\r\n\r\n    constructor() ERC20(\"CYBERCATSCOIN\", \"CYBCC\") {\r\n        _decimals = 18;\r\n        _tTotal = 1000000000 * 10**uint256(_decimals);\r\n        _rTotal = (MAX - (MAX % _tTotal));\r\n\r\n        _reflectionFee = 2;\r\n        _previousReflectionFee = _reflectionFee;\r\n\r\n        _taxFee = 2;\r\n        _previousTaxFee = _taxFee;\r\n\r\n        _marketingAccount = _owner;\r\n\r\n        //exclude owner, feeaccount and this contract from fee\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[_marketingAccount] = true;\r\n        _isExcludedFromFee[_developmentAccount] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _rOwned[_owner] = _rTotal;\r\n        _mint(msg.sender, _rTotal);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        if (owner() == msg.sender) _;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function reflectionFee() public view returns (uint256) {\r\n        return _reflectionFee;\r\n    }\r\n\r\n    function getTaxFee() public view returns (uint256) {\r\n        return _taxFee;\r\n    }\r\n\r\n    function getMarketingAccount() public view returns (address) {\r\n        return _marketingAccount;\r\n    }\r\n\r\n    function getDevelopmentAccount() public view returns (address) {\r\n        return _developmentAccount;\r\n    }\r\n\r\n    function isExcludedFromFee(address account) public view returns (bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function balanceOf(address sender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        if (_isExcluded[sender]) {\r\n            return _tOwned[sender];\r\n        }\r\n        return tokenFromReflection(_rOwned[sender]);\r\n    }\r\n\r\n    function isExcluded(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function totalFeesRedistributed() public view returns (uint256) {\r\n        return _tFeeTotal;\r\n    }\r\n\r\n    function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n\r\n    function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n\r\n    function changeMarketingAccount(address newFeeAccount) public onlyOwner {\r\n        require(\r\n            newFeeAccount != address(0),\r\n            \"zero address can not be the FeeAccount\"\r\n        );\r\n        _marketingAccount = newFeeAccount;\r\n    }\r\n\r\n    function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {\r\n        require(\r\n            newFeeAccount != address(0),\r\n            \"zero address can not be the FeeAccount\"\r\n        );\r\n        _developmentAccount = newFeeAccount;\r\n    }\r\n\r\n    function reflect(uint256 tAmount) public {\r\n        address sender = _msgSender();\r\n        require(\r\n            !_isExcluded[sender],\r\n            \"Excluded addresses cannot call this function\"\r\n        );\r\n        (uint256 rAmount, , , ) = _getTransferValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _rTotal = _rTotal - rAmount;\r\n        _tFeeTotal = _tFeeTotal + tAmount;\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferFee) {\r\n            (uint256 rAmount, , , ) = _getTransferValues(tAmount);\r\n            return rAmount;\r\n        } else {\r\n            (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount);\r\n            return rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            rAmount <= _rTotal,\r\n            \"Amount must be less than total reflections\"\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        return rAmount / currentRate;\r\n    }\r\n\r\n    function excludeAccountFromReward(address account) public onlyOwner {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if (_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeAccountinReward(address account) public onlyOwner {\r\n        require(_isExcluded[account], \"Account is already included\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual override {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        uint256 senderBalance = balanceOf(sender);\r\n        require(\r\n            senderBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n\r\n        if(!isExcludedFromFee(recipient))\r\n        {\r\n\r\n        require(balanceOf(recipient)+amount <= maxWalletAmount, \"Whale detected!!\");\r\n        }\r\n        bool takeFee = true;\r\n\r\n        if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\r\n            takeFee = false;\r\n        }\r\n\r\n        _tokenTransfer(sender, recipient, amount, takeFee);\r\n    }\r\n\r\n    function _tokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 value,\r\n        bool takeFee\r\n    ) private {\r\n        if (!takeFee) {\r\n            removeAllFee();\r\n        }\r\n\r\n        if (_isExcluded[from] && !_isExcluded[to]) {\r\n            _transferFromExcluded(from, to, value);\r\n        } else if (!_isExcluded[from] && _isExcluded[to]) {\r\n            _transferToExcluded(from, to, value);\r\n        } else if (!_isExcluded[from] && !_isExcluded[to]) {\r\n            _transferStandard(from, to, value);\r\n        } else if (_isExcluded[from] && _isExcluded[to]) {\r\n            _transferBothExcluded(from, to, value);\r\n        } else {\r\n            _transferStandard(from, to, value);\r\n        }\r\n\r\n        if (!takeFee) {\r\n            restoreAllFee();\r\n        }\r\n    }\r\n\r\n    function removeAllFee() private {\r\n        if (_reflectionFee == 0 && _taxFee == 0) return;\r\n\r\n        _previousReflectionFee = _reflectionFee;\r\n        _previousTaxFee = _taxFee;\r\n\r\n        _reflectionFee = 0;\r\n        _taxFee = 0;\r\n    }\r\n\r\n    function restoreAllFee() private {\r\n        _reflectionFee = _previousReflectionFee;\r\n        _taxFee = _previousTaxFee;\r\n    }\r\n\r\n    function _transferStandard(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 tTransferAmount,\r\n            uint256 currentRate\r\n        ) = _getTransferValues(tAmount);\r\n\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferToExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 tTransferAmount,\r\n            uint256 currentRate\r\n        ) = _getTransferValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferFromExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 tTransferAmount,\r\n            uint256 currentRate\r\n        ) = _getTransferValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferBothExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 tTransferAmount,\r\n            uint256 currentRate\r\n        ) = _getTransferValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n\r\n        taxFeeTransfer(sender, tAmount, currentRate);\r\n        _reflectFee(tAmount, currentRate);\r\n\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _getCompleteTaxValue(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint256 allTaxes = _reflectionFee + _taxFee;\r\n        uint256 taxValue = (tAmount * allTaxes) / 100;\r\n        return taxValue;\r\n    }\r\n\r\n    function _getTransferValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 taxValue = _getCompleteTaxValue(tAmount);\r\n        uint256 tTransferAmount = tAmount - taxValue;\r\n        uint256 currentRate = _getRate();\r\n        uint256 rTransferAmount = tTransferAmount * currentRate;\r\n        uint256 rAmount = tAmount * currentRate;\r\n        return (rAmount, rTransferAmount, tTransferAmount, currentRate);\r\n    }\r\n\r\n    function _reflectFee(uint256 tAmount, uint256 currentRate) private {\r\n        uint256 tFee = (tAmount * _reflectionFee) / 100;\r\n        uint256 rFee = tFee * currentRate;\r\n\r\n        _rTotal = _rTotal - rFee;\r\n        _tFeeTotal = _tFeeTotal + tFee;\r\n    }\r\n\r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply / tSupply;\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (\r\n                _rOwned[_excluded[i]] > rSupply ||\r\n                _tOwned[_excluded[i]] > tSupply\r\n            ) {\r\n                return (_rTotal, _tTotal);\r\n            }\r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n        }\r\n\r\n        if (rSupply < _rTotal / _tTotal) {\r\n            return (_rTotal, _tTotal);\r\n        }\r\n\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    function taxFeeTransfer(\r\n        address sender,\r\n        uint256 tAmount,\r\n        uint256 currentRate\r\n    ) private {\r\n        uint256 tTaxFee = (tAmount * _taxFee) / 100;\r\n        if (tTaxFee > 0) {\r\n            uint256 rTaxFee = (tTaxFee * currentRate) / 2;\r\n            _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee;\r\n            _rOwned[_developmentAccount] =\r\n                _rOwned[_developmentAccount] +\r\n                rTaxFee;\r\n            emit Transfer(sender, _marketingAccount, tTaxFee);\r\n            emit Transfer(sender, _developmentAccount, tTaxFee);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CYBCC.sol": {
				"CYBCC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeDevelopmentAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeMarketingAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeAccountFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDevelopmentAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketingAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeAccountinReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "reflect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reflectionFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFeesRedistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CYBCC.sol\":133:13272  contract CYBCC is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"CYBCC.sol\":441:476  address private _owner = msg.sender */\n  0x0a\n  dup1\n  sload\n  0x0100\n    /* \"CYBCC.sol\":466:476  msg.sender */\n  caller\n    /* \"CYBCC.sol\":441:476  address private _owner = msg.sender */\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n  0x00\n    /* \"CYBCC.sol\":592:622  uint256 private _tFeeTotal = 0 */\n  0x0d\n  sstore\n    /* \"CYBCC.sol\":911:933  10**uint256(_decimals) */\n  tag_1\n  swap3\n    /* \"CYBCC.sol\":923:932  _decimals */\n  0xff\n  swap2\n  dup3\n  and\n  swap2\n  swap1\n  swap3\n  and\n  or\n  swap1\n    /* \"CYBCC.sol\":911:933  10**uint256(_decimals) */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"CYBCC.sol\":900:933  10000000 * 10**uint256(_decimals) */\n  tag_3\n  swap1\n    /* \"CYBCC.sol\":900:908  10000000 */\n  0x989680\n    /* \"CYBCC.sol\":900:933  10000000 * 10**uint256(_decimals) */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"CYBCC.sol\":869:933  uint private maxWalletAmount = 10000000 * 10**uint256(_decimals) */\n  0x14\n  sstore\n    /* \"CYBCC.sol\":942:1648  constructor() ERC20(\"CYBERCATSCOIN\", \"CYBCC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  revert(0x00, 0x00)\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x21aca122a921a0aa29a1a7a4a7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4359424343)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"CYBCC.sol\":999:1008  _decimals */\n  0x0a\n    /* \"CYBCC.sol\":999:1013  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"CYBCC.sol\":1011:1013  18 */\n  0x12\n    /* \"CYBCC.sol\":999:1013  _decimals = 18 */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"CYBCC.sol\":1047:1069  10**uint256(_decimals) */\n  tag_13\n  swap3\n  pop\n    /* \"CYBCC.sol\":1011:1013  18 */\n  swap1\n    /* \"CYBCC.sol\":1047:1069  10**uint256(_decimals) */\n  tag_2\n  jump\t// in\ntag_13:\n    /* \"CYBCC.sol\":1034:1069  1000000000 * 10**uint256(_decimals) */\n  tag_14\n  swap1\n    /* \"CYBCC.sol\":1034:1044  1000000000 */\n  0x3b9aca00\n    /* \"CYBCC.sol\":1034:1069  1000000000 * 10**uint256(_decimals) */\n  tag_4\n  jump\t// in\ntag_14:\n    /* \"CYBCC.sol\":1024:1031  _tTotal */\n  0x0b\n    /* \"CYBCC.sol\":1024:1069  _tTotal = 1000000000 * 10**uint256(_decimals) */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1098:1111  MAX % _tTotal */\n  tag_15\n  swap1\n  not(0x00)\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"CYBCC.sol\":1091:1112  MAX - (MAX % _tTotal) */\n  tag_17\n  swap1\n  not(0x00)\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"CYBCC.sol\":1080:1087  _rTotal */\n  0x0c\n    /* \"CYBCC.sol\":1080:1113  _rTotal = (MAX - (MAX % _tTotal)) */\n  swap1\n  dup2\n  sstore\n    /* \"CYBCC.sol\":1143:1144  2 */\n  0x02\n    /* \"CYBCC.sol\":1126:1140  _reflectionFee */\n  0x0e\n    /* \"CYBCC.sol\":1126:1144  _reflectionFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1155:1177  _previousReflectionFee */\n  0x0f\n    /* \"CYBCC.sol\":1155:1194  _previousReflectionFee = _reflectionFee */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1207:1214  _taxFee */\n  0x10\n    /* \"CYBCC.sol\":1207:1218  _taxFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1229:1244  _previousTaxFee */\n  0x11\n    /* \"CYBCC.sol\":1229:1254  _previousTaxFee = _taxFee */\n  sstore\n    /* \"CYBCC.sol\":1287:1293  _owner */\n  0x0a\n  dup1\n  sload\n    /* \"CYBCC.sol\":1267:1284  _marketingAccount */\n  0x12\n    /* \"CYBCC.sol\":1267:1293  _marketingAccount = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":1287:1293  _owner */\n  0x0100\n  swap4\n  dup5\n  swap1\n  div\n  dup2\n  and\n    /* \"CYBCC.sol\":1267:1293  _marketingAccount = _owner */\n  swap2\n  dup3\n  or\n  dup4\n  sstore\n  0x00\n    /* \"CYBCC.sol\":1370:1397  _isExcludedFromFee[owner()] */\n  swap2\n  dup3\n  mstore\n    /* \"CYBCC.sol\":1370:1388  _isExcludedFromFee */\n  0x07\n    /* \"CYBCC.sol\":1370:1397  _isExcludedFromFee[owner()] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n    /* \"CYBCC.sol\":1370:1404  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  0x01\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"CYBCC.sol\":1434:1451  _marketingAccount */\n  swap6\n  sload\n  dup5\n  and\n    /* \"CYBCC.sol\":1415:1452  _isExcludedFromFee[_marketingAccount] */\n  dup6\n  mstore\n  dup2\n  dup6\n  keccak256\n    /* \"CYBCC.sol\":1415:1459  _isExcludedFromFee[_marketingAccount] = true */\n  dup1\n  sload\n  dup8\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1489:1508  _developmentAccount */\n  sload(0x13)\n  dup5\n  and\n    /* \"CYBCC.sol\":1470:1509  _isExcludedFromFee[_developmentAccount] */\n  dup6\n  mstore\n  dup2\n  dup6\n  keccak256\n    /* \"CYBCC.sol\":1470:1516  _isExcludedFromFee[_developmentAccount] = true */\n  dup1\n  sload\n  dup8\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1554:1558  this */\n  address\n    /* \"CYBCC.sol\":1527:1560  _isExcludedFromFee[address(this)] */\n  dup6\n  mstore\n  dup2\n  dup6\n  keccak256\n    /* \"CYBCC.sol\":1527:1567  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap7\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"CYBCC.sol\":1596:1603  _rTotal */\n  swap6\n  sload\n    /* \"CYBCC.sol\":1586:1592  _owner */\n  swap5\n  sload\n  swap4\n  swap1\n  swap4\n  div\n  swap1\n  swap3\n  and\n    /* \"CYBCC.sol\":1578:1593  _rOwned[_owner] */\n  dup3\n  mstore\n    /* \"CYBCC.sol\":1578:1585  _rOwned */\n  0x05\n    /* \"CYBCC.sol\":1578:1593  _rOwned[_owner] */\n  swap1\n  swap4\n  mstore\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"CYBCC.sol\":1578:1603  _rOwned[_owner] = _rTotal */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1614:1640  _mint(msg.sender, _rTotal) */\n  tag_21\n  swap1\n    /* \"CYBCC.sol\":1620:1630  msg.sender */\n  caller\n  swap1\n    /* \"CYBCC.sol\":1614:1619  _mint */\n  tag_22\n    /* \"CYBCC.sol\":1614:1640  _mint(msg.sender, _rTotal) */\n  jump\t// in\ntag_21:\n    /* \"CYBCC.sol\":133:13272  contract CYBCC is ERC20 {... */\n  jump(tag_51)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7517:7538  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7590:7591  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4876:4927   */\n  mstore\n    /* \"#utility.yul\":4849:4867   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7629:7630  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7633:7640  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7642:7647  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7620  _update */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6104  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6238:6243  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6234  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6243  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_35\n  swap1\n  pop\n  jump\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6274:6293  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6329:6348  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5288:5320   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5270:5321   */\n  mstore\n    /* \"#utility.yul\":5337:5355   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5330:5364   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5380:5398   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5373:5407   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5243:5261   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_27\n    /* \"#utility.yul\":5068:5413   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6569  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6578:6597  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6597  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6636:6652  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6811  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6820  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7019  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7032  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7087:7089  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7081:7085  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7096  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n    /* \"#utility.yul\":5564:5589   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5552:5554   */\n  0x20\n    /* \"#utility.yul\":5537:5555   */\n  add\n  swap1\n    /* \"#utility.yul\":5418:5595   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_43:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:521   */\ntag_44:\n    /* \"#utility.yul\":234:235   */\n  0x01\n    /* \"#utility.yul\":252:257   */\n  dup2\n    /* \"#utility.yul\":266:515   */\ntag_54:\n    /* \"#utility.yul\":287:288   */\n  0x01\n    /* \"#utility.yul\":277:285   */\n  dup5\n    /* \"#utility.yul\":274:289   */\n  gt\n    /* \"#utility.yul\":266:515   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":337:341   */\n  dup1\n    /* \"#utility.yul\":332:335   */\n  dup6\n    /* \"#utility.yul\":328:342   */\n  div\n    /* \"#utility.yul\":322:326   */\n  dup2\n    /* \"#utility.yul\":319:343   */\n  gt\n    /* \"#utility.yul\":316:366   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":346:364   */\n  tag_58\n  tag_43\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":396:397   */\n  0x01\n    /* \"#utility.yul\":386:394   */\n  dup5\n    /* \"#utility.yul\":382:398   */\n  and\n    /* \"#utility.yul\":379:428   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":410:426   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":379:428   */\ntag_59:\n    /* \"#utility.yul\":493:494   */\n  0x01\n    /* \"#utility.yul\":489:505   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":449:464   */\n  dup1\n  mul\n    /* \"#utility.yul\":266:515   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":146:521   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":526:1428   */\ntag_45:\n    /* \"#utility.yul\":575:580   */\n  0x00\n    /* \"#utility.yul\":605:613   */\n  dup3\n    /* \"#utility.yul\":595:675   */\n  tag_61\n  jumpi\n  pop\n    /* \"#utility.yul\":646:647   */\n  0x01\n    /* \"#utility.yul\":660:665   */\n  jump(tag_60)\n    /* \"#utility.yul\":595:675   */\ntag_61:\n    /* \"#utility.yul\":694:698   */\n  dup2\n    /* \"#utility.yul\":684:760   */\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":745:750   */\n  jump(tag_60)\n    /* \"#utility.yul\":684:760   */\ntag_62:\n    /* \"#utility.yul\":776:780   */\n  dup2\n    /* \"#utility.yul\":794:795   */\n  0x01\n    /* \"#utility.yul\":789:848   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":862:863   */\n  0x02\n    /* \"#utility.yul\":857:1031   */\n  dup2\n  eq\n  tag_65\n  jumpi\n    /* \"#utility.yul\":769:1031   */\n  jump(tag_63)\n    /* \"#utility.yul\":789:848   */\ntag_64:\n    /* \"#utility.yul\":819:820   */\n  0x01\n    /* \"#utility.yul\":810:820   */\n  swap2\n  pop\n    /* \"#utility.yul\":833:838   */\n  pop\n  jump(tag_60)\n    /* \"#utility.yul\":857:1031   */\ntag_65:\n    /* \"#utility.yul\":894:897   */\n  0xff\n    /* \"#utility.yul\":884:892   */\n  dup5\n    /* \"#utility.yul\":881:898   */\n  gt\n    /* \"#utility.yul\":878:921   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":901:919   */\n  tag_67\n  tag_43\n  jump\t// in\ntag_67:\n  pop\n  pop\n    /* \"#utility.yul\":957:958   */\n  0x01\n    /* \"#utility.yul\":943:959   */\n  dup3\n  shl\n    /* \"#utility.yul\":1016:1021   */\n  jump(tag_60)\n    /* \"#utility.yul\":769:1031   */\ntag_63:\n  pop\n    /* \"#utility.yul\":1115:1117   */\n  0x20\n    /* \"#utility.yul\":1105:1113   */\n  dup4\n    /* \"#utility.yul\":1102:1118   */\n  lt\n    /* \"#utility.yul\":1096:1099   */\n  0x0133\n    /* \"#utility.yul\":1090:1094   */\n  dup4\n    /* \"#utility.yul\":1087:1100   */\n  lt\n    /* \"#utility.yul\":1083:1119   */\n  and\n    /* \"#utility.yul\":1077:1079   */\n  0x4e\n    /* \"#utility.yul\":1067:1075   */\n  dup5\n    /* \"#utility.yul\":1064:1080   */\n  lt\n    /* \"#utility.yul\":1059:1061   */\n  0x0b\n    /* \"#utility.yul\":1053:1057   */\n  dup5\n    /* \"#utility.yul\":1050:1062   */\n  lt\n    /* \"#utility.yul\":1046:1081   */\n  and\n    /* \"#utility.yul\":1043:1120   */\n  or\n    /* \"#utility.yul\":1040:1243   */\n  iszero\n  tag_68\n  jumpi\n  pop\n    /* \"#utility.yul\":1152:1171   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1228:1233   */\n  jump(tag_60)\n    /* \"#utility.yul\":1040:1243   */\ntag_68:\n    /* \"#utility.yul\":1275:1317   */\n  tag_69\n  not(0x00)\n    /* \"#utility.yul\":1300:1308   */\n  dup5\n    /* \"#utility.yul\":1294:1298   */\n  dup5\n    /* \"#utility.yul\":1275:1317   */\n  tag_44\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1353:1359   */\n  dup1\n    /* \"#utility.yul\":1349:1350   */\n  0x00\n    /* \"#utility.yul\":1345:1351   */\n  not\n    /* \"#utility.yul\":1341:1360   */\n  div\n    /* \"#utility.yul\":1332:1339   */\n  dup3\n    /* \"#utility.yul\":1329:1361   */\n  gt\n    /* \"#utility.yul\":1326:1384   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1364:1382   */\n  tag_71\n  tag_43\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1402:1422   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":526:1428   */\ntag_60:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1433:1564   */\ntag_2:\n    /* \"#utility.yul\":1493:1498   */\n  0x00\n    /* \"#utility.yul\":1522:1558   */\n  tag_73\n    /* \"#utility.yul\":1549:1557   */\n  dup4\n    /* \"#utility.yul\":1543:1547   */\n  dup4\n    /* \"#utility.yul\":1522:1558   */\n  tag_45\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1513:1558   */\n  swap4\n    /* \"#utility.yul\":1433:1564   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1569:1737   */\ntag_4:\n    /* \"#utility.yul\":1642:1651   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":1673:1682   */\n  dup2\n  iszero\n    /* \"#utility.yul\":1690:1705   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":1684:1706   */\n  dup5\n  eq\n    /* \"#utility.yul\":1670:1707   */\n  or\n    /* \"#utility.yul\":1660:1731   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1711:1729   */\n  tag_60\n  tag_43\n  jump\t// in\n    /* \"#utility.yul\":1742:1869   */\ntag_46:\n    /* \"#utility.yul\":1803:1813   */\n  0x4e487b71\n    /* \"#utility.yul\":1798:1801   */\n  0xe0\n    /* \"#utility.yul\":1794:1814   */\n  shl\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1784:1815   */\n  mstore\n    /* \"#utility.yul\":1834:1838   */\n  0x41\n    /* \"#utility.yul\":1831:1832   */\n  0x04\n    /* \"#utility.yul\":1824:1839   */\n  mstore\n    /* \"#utility.yul\":1858:1862   */\n  0x24\n    /* \"#utility.yul\":1855:1856   */\n  0x00\n    /* \"#utility.yul\":1848:1863   */\n  revert\n    /* \"#utility.yul\":1874:2254   */\ntag_47:\n    /* \"#utility.yul\":1953:1954   */\n  0x01\n    /* \"#utility.yul\":1949:1961   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1996:2008   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2017:2078   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2071:2075   */\n  0x7f\n    /* \"#utility.yul\":2063:2069   */\n  dup3\n    /* \"#utility.yul\":2059:2076   */\n  and\n    /* \"#utility.yul\":2049:2076   */\n  swap2\n  pop\n    /* \"#utility.yul\":2017:2078   */\ntag_79:\n    /* \"#utility.yul\":2124:2126   */\n  0x20\n    /* \"#utility.yul\":2116:2122   */\n  dup3\n    /* \"#utility.yul\":2113:2127   */\n  lt\n    /* \"#utility.yul\":2093:2111   */\n  dup2\n    /* \"#utility.yul\":2090:2128   */\n  sub\n    /* \"#utility.yul\":2087:2248   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2170:2180   */\n  0x4e487b71\n    /* \"#utility.yul\":2165:2168   */\n  0xe0\n    /* \"#utility.yul\":2161:2181   */\n  shl\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2151:2182   */\n  mstore\n    /* \"#utility.yul\":2205:2209   */\n  0x22\n    /* \"#utility.yul\":2202:2203   */\n  0x04\n    /* \"#utility.yul\":2195:2210   */\n  mstore\n    /* \"#utility.yul\":2233:2237   */\n  0x24\n    /* \"#utility.yul\":2230:2231   */\n  0x00\n    /* \"#utility.yul\":2223:2238   */\n  revert\n    /* \"#utility.yul\":2087:2248   */\ntag_80:\n  pop\n    /* \"#utility.yul\":1874:2254   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2385:2903   */\ntag_49:\n    /* \"#utility.yul\":2487:2489   */\n  0x1f\n    /* \"#utility.yul\":2482:2485   */\n  dup3\n    /* \"#utility.yul\":2479:2490   */\n  gt\n    /* \"#utility.yul\":2476:2897   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2523:2528   */\n  dup1\n    /* \"#utility.yul\":2520:2521   */\n  0x00\n    /* \"#utility.yul\":2513:2529   */\n  mstore\n    /* \"#utility.yul\":2567:2571   */\n  0x20\n    /* \"#utility.yul\":2564:2565   */\n  0x00\n    /* \"#utility.yul\":2554:2572   */\n  keccak256\n    /* \"#utility.yul\":2637:2639   */\n  0x1f\n    /* \"#utility.yul\":2625:2635   */\n  dup5\n    /* \"#utility.yul\":2621:2640   */\n  add\n    /* \"#utility.yul\":2618:2619   */\n  0x05\n    /* \"#utility.yul\":2614:2641   */\n  shr\n    /* \"#utility.yul\":2608:2612   */\n  dup2\n    /* \"#utility.yul\":2604:2642   */\n  add\n    /* \"#utility.yul\":2673:2677   */\n  0x20\n    /* \"#utility.yul\":2661:2671   */\n  dup6\n    /* \"#utility.yul\":2658:2678   */\n  lt\n    /* \"#utility.yul\":2655:2702   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2655:2702   */\ntag_84:\n    /* \"#utility.yul\":2751:2753   */\n  0x1f\n    /* \"#utility.yul\":2746:2749   */\n  dup5\n    /* \"#utility.yul\":2742:2754   */\n  add\n    /* \"#utility.yul\":2739:2740   */\n  0x05\n    /* \"#utility.yul\":2735:2755   */\n  shr\n    /* \"#utility.yul\":2729:2733   */\n  dup3\n    /* \"#utility.yul\":2725:2756   */\n  add\n    /* \"#utility.yul\":2715:2756   */\n  swap2\n  pop\n    /* \"#utility.yul\":2806:2887   */\ntag_85:\n    /* \"#utility.yul\":2824:2826   */\n  dup2\n    /* \"#utility.yul\":2817:2822   */\n  dup2\n    /* \"#utility.yul\":2814:2827   */\n  lt\n    /* \"#utility.yul\":2806:2887   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2883:2884   */\n  0x00\n    /* \"#utility.yul\":2869:2885   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2850:2851   */\n  0x01\n    /* \"#utility.yul\":2839:2852   */\n  add\n    /* \"#utility.yul\":2806:2887   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":2810:2813   */\n  pop\n  pop\n    /* \"#utility.yul\":2476:2897   */\ntag_83:\n    /* \"#utility.yul\":2385:2903   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3079:4378   */\ntag_10:\n    /* \"#utility.yul\":3199:3209   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3221:3251   */\n  dup2\n  gt\n    /* \"#utility.yul\":3218:3274   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3254:3272   */\n  tag_91\n  tag_46\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3283:3380   */\n  tag_92\n    /* \"#utility.yul\":3373:3379   */\n  dup2\n    /* \"#utility.yul\":3333:3371   */\n  tag_93\n    /* \"#utility.yul\":3365:3369   */\n  dup5\n    /* \"#utility.yul\":3359:3370   */\n  sload\n    /* \"#utility.yul\":3333:3371   */\n  tag_47\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3327:3331   */\n  dup5\n    /* \"#utility.yul\":3283:3380   */\n  tag_49\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3429:3433   */\n  0x20\n    /* \"#utility.yul\":3460:3462   */\n  0x1f\n    /* \"#utility.yul\":3449:3463   */\n  dup3\n  gt\n    /* \"#utility.yul\":3477:3478   */\n  0x01\n    /* \"#utility.yul\":3472:4121   */\n  dup2\n  eq\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4165:4166   */\n  0x00\n    /* \"#utility.yul\":4182:4188   */\n  dup4\n    /* \"#utility.yul\":4179:4268   */\n  iszero\n  tag_96\n  jumpi\n  pop\n    /* \"#utility.yul\":4234:4253   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4228:4254   */\n  mload\n    /* \"#utility.yul\":4179:4268   */\ntag_96:\n  not(0x00)\n    /* \"#utility.yul\":3036:3037   */\n  0x03\n    /* \"#utility.yul\":3032:3043   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3028:3052   */\n  shr\n    /* \"#utility.yul\":3024:3053   */\n  not\n    /* \"#utility.yul\":3014:3054   */\n  and\n    /* \"#utility.yul\":3060:3061   */\n  0x01\n    /* \"#utility.yul\":3056:3067   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3011:3068   */\n  or\n    /* \"#utility.yul\":4281:4362   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3442:4372   */\n  jump(tag_87)\n    /* \"#utility.yul\":3472:4121   */\ntag_95:\n    /* \"#utility.yul\":2332:2333   */\n  0x00\n    /* \"#utility.yul\":2325:2339   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2369:2373   */\n  0x20\n    /* \"#utility.yul\":2356:2374   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3508:3528   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3626:3848   */\ntag_99:\n    /* \"#utility.yul\":3640:3647   */\n  dup3\n    /* \"#utility.yul\":3637:3638   */\n  dup2\n    /* \"#utility.yul\":3634:3648   */\n  lt\n    /* \"#utility.yul\":3626:3848   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3722:3741   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3716:3742   */\n  mload\n    /* \"#utility.yul\":3701:3743   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3829:3833   */\n  0x20\n    /* \"#utility.yul\":3814:3834   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3782:3783   */\n  0x01\n    /* \"#utility.yul\":3770:3784   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3656:3668   */\n  add\n    /* \"#utility.yul\":3626:3848   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":3630:3633   */\n  pop\n    /* \"#utility.yul\":3876:3882   */\n  dup5\n    /* \"#utility.yul\":3867:3874   */\n  dup3\n    /* \"#utility.yul\":3864:3883   */\n  lt\n    /* \"#utility.yul\":3861:4062   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3937:3956   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3931:3957   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4020:4021   */\n  0x03\n    /* \"#utility.yul\":4016:4030   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4032:4035   */\n  0xf8\n    /* \"#utility.yul\":4012:4036   */\n  and\n    /* \"#utility.yul\":4008:4045   */\n  shr\n    /* \"#utility.yul\":4004:4046   */\n  not\n    /* \"#utility.yul\":3989:4047   */\n  and\n    /* \"#utility.yul\":3974:4048   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3861:4062   */\ntag_102:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4108:4109   */\n  0x01\n    /* \"#utility.yul\":4092:4106   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4088:4110   */\n  add\n    /* \"#utility.yul\":4075:4111   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3079:4378   */\n  jump\t// out\n    /* \"#utility.yul\":4383:4592   */\ntag_16:\n    /* \"#utility.yul\":4415:4416   */\n  0x00\n    /* \"#utility.yul\":4441:4442   */\n  dup3\n    /* \"#utility.yul\":4431:4563   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4485:4495   */\n  0x4e487b71\n    /* \"#utility.yul\":4480:4483   */\n  0xe0\n    /* \"#utility.yul\":4476:4496   */\n  shl\n    /* \"#utility.yul\":4473:4474   */\n  0x00\n    /* \"#utility.yul\":4466:4497   */\n  mstore\n    /* \"#utility.yul\":4520:4524   */\n  0x12\n    /* \"#utility.yul\":4517:4518   */\n  0x04\n    /* \"#utility.yul\":4510:4525   */\n  mstore\n    /* \"#utility.yul\":4548:4552   */\n  0x24\n    /* \"#utility.yul\":4545:4546   */\n  0x00\n    /* \"#utility.yul\":4538:4553   */\n  revert\n    /* \"#utility.yul\":4431:4563   */\ntag_104:\n  pop\n    /* \"#utility.yul\":4577:4586   */\n  mod\n  swap1\n    /* \"#utility.yul\":4383:4592   */\n  jump\t// out\n    /* \"#utility.yul\":4597:4725   */\ntag_18:\n    /* \"#utility.yul\":4664:4673   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":4685:4696   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":4682:4719   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":4699:4717   */\n  tag_60\n  tag_43\n  jump\t// in\n    /* \"#utility.yul\":4938:5063   */\ntag_34:\n    /* \"#utility.yul\":5003:5012   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5024:5034   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5021:5057   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":5037:5055   */\n  tag_60\n  tag_43\n  jump\t// in\n    /* \"#utility.yul\":5418:5595   */\ntag_51:\n    /* \"CYBCC.sol\":133:13272  contract CYBCC is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CYBCC.sol\":133:13272  contract CYBCC is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x706407fd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfdeb889f\n      eq\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc4863770\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0x706407fd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x838fcc90\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x83ad7994\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x313ce567\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32035504\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6049876e\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x053ab182\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1cf8fef5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"CYBCC.sol\":3907:4321  function reflect(uint256 tAmount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":1316:1330   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1309:1331   */\n      iszero\n        /* \"#utility.yul\":1291:1332   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_42\n        /* \"#utility.yul\":1151:1338   */\n      jump\n        /* \"CYBCC.sol\":1972:2075  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n        /* \"CYBCC.sol\":2060:2067  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":1972:2075  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":1972:2075  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"CYBCC.sol\":2390:2498  function getDevelopmentAccount() public view returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n        /* \"CYBCC.sol\":2471:2490  _developmentAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"CYBCC.sol\":2390:2498  function getDevelopmentAccount() public view returns (address) {... */\n    tag_57:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1689:1721   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1671:1722   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"CYBCC.sol\":2390:2498  function getDevelopmentAccount() public view returns (address) {... */\n      tag_42\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_45\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"CYBCC.sol\":1864:1964  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      revert(0x00, 0x00)\n    tag_67:\n      pop\n        /* \"CYBCC.sol\":1947:1956  _decimals */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1864:1964  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"CYBCC.sol\":1947:1956  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2254:2290   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"CYBCC.sol\":1864:1964  function decimals() public view virtual override returns (uint8) {... */\n      tag_42\n        /* \"#utility.yul\":2112:2296   */\n      jump\n        /* \"CYBCC.sol\":3042:3142  function totalFeesRedistributed() public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n        /* \"CYBCC.sol\":3124:3134  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":3042:3142  function totalFeesRedistributed() public view returns (uint256) {... */\n      jump(tag_52)\n        /* \"CYBCC.sol\":3150:3261  function excludeFromFee(address account) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_35\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"CYBCC.sol\":4329:4816  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_52\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"CYBCC.sol\":2506:2630  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      revert(0x00, 0x00)\n    tag_87:\n      pop\n      tag_45\n      tag_89\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      and\n        /* \"CYBCC.sol\":2571:2575  bool */\n      0x00\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2595:2613  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":2506:2630  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":5152:5491  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_35\n      tag_94\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"CYBCC.sol\":3645:3899  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_35\n      tag_98\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"CYBCC.sol\":2638:2916  function balanceOf(address sender)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_52\n      tag_102\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"CYBCC.sol\":2278:2382  function getMarketingAccount() public view returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      revert(0x00, 0x00)\n    tag_105:\n      pop\n        /* \"CYBCC.sol\":2357:2374  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"CYBCC.sol\":2278:2382  function getMarketingAccount() public view returns (address) {... */\n      jump(tag_57)\n        /* \"CYBCC.sol\":2083:2178  function reflectionFee() public view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n        /* \"CYBCC.sol\":2156:2170  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":2083:2178  function reflectionFee() public view returns (uint256) {... */\n      jump(tag_52)\n        /* \"CYBCC.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      revert(0x00, 0x00)\n    tag_113:\n      pop\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      jump(tag_57)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_40\n      tag_119\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      revert(0x00, 0x00)\n    tag_121:\n      pop\n      tag_45\n      tag_123\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"CYBCC.sol\":3387:3637  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      revert(0x00, 0x00)\n    tag_126:\n      pop\n      tag_35\n      tag_128\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"CYBCC.sol\":2924:3034  function isExcluded(address account) public view returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_45\n      tag_132\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3006:3026  _isExcluded[account] */\n      and\n        /* \"CYBCC.sol\":2982:2986  bool */\n      0x00\n        /* \"CYBCC.sol\":3006:3026  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3006:3017  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":3006:3026  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":2924:3034  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      revert(0x00, 0x00)\n    tag_135:\n      pop\n      tag_52\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"CYBCC.sol\":3269:3379  function includeInFee(address account) public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_35\n      tag_143\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"CYBCC.sol\":2186:2270  function getTaxFee() public view returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      revert(0x00, 0x00)\n    tag_145:\n      pop\n        /* \"CYBCC.sol\":2255:2262  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":2186:2270  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_52)\n        /* \"CYBCC.sol\":5499:5981  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      revert(0x00, 0x00)\n    tag_149:\n      pop\n      tag_35\n      tag_151\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"CYBCC.sol\":3907:4321  function reflect(uint256 tAmount) public {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CYBCC.sol\":3959:3973  address sender */\n      0x00\n        /* \"CYBCC.sol\":4022:4041  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4022:4033  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":4022:4041  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":4021:4041  !_isExcluded[sender] */\n      iszero\n        /* \"CYBCC.sol\":3999:4113  require(... */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"CYBCC.sol\":3999:4113  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3341:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3400   */\n      0x2c\n        /* \"#utility.yul\":3378:3396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3371:3401   */\n      mstore\n        /* \"#utility.yul\":3437:3471   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":3417:3435   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3410:3472   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3488:3506   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3481:3523   */\n      mstore\n        /* \"#utility.yul\":3540:3559   */\n      0x84\n      add\n        /* \"CYBCC.sol\":3999:4113  require(... */\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"CYBCC.sol\":4125:4140  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":4150:4177  _getTransferValues(tAmount) */\n      tag_159\n        /* \"CYBCC.sol\":4169:4176  tAmount */\n      dup4\n        /* \"CYBCC.sol\":4150:4168  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":4150:4177  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_159:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":4206:4221  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4206:4213  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":4206:4221  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":4124:4177  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":4206:4231  _rOwned[sender] - rAmount */\n      tag_161\n      swap1\n        /* \"CYBCC.sol\":4124:4177  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":4206:4231  _rOwned[sender] - rAmount */\n      tag_162\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":4188:4203  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4188:4195  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":4188:4203  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":4188:4231  _rOwned[sender] = _rOwned[sender] - rAmount */\n      sstore\n        /* \"CYBCC.sol\":4252:4259  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":4252:4269  _rTotal - rAmount */\n      tag_163\n      swap1\n        /* \"CYBCC.sol\":4262:4269  rAmount */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":4252:4269  _rTotal - rAmount */\n      tag_162\n      jump\t// in\n    tag_163:\n        /* \"CYBCC.sol\":4242:4249  _rTotal */\n      0x0c\n        /* \"CYBCC.sol\":4242:4269  _rTotal = _rTotal - rAmount */\n      sstore\n        /* \"CYBCC.sol\":4293:4303  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":4293:4313  _tFeeTotal + tAmount */\n      tag_164\n      swap1\n        /* \"CYBCC.sol\":4306:4313  tAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":4293:4313  _tFeeTotal + tAmount */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"CYBCC.sol\":4280:4290  _tFeeTotal */\n      0x0d\n        /* \"CYBCC.sol\":4280:4313  _tFeeTotal = _tFeeTotal + tAmount */\n      sstore\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":3907:4321  function reflect(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_168\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_173:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_183:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":3150:3261  function excludeFromFee(address account) public onlyOwner {... */\n    tag_80:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3219:3246  _isExcludedFromFee[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3219:3237  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":3219:3246  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":3219:3253  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":3249:3253  true */\n      0x01\n        /* \"CYBCC.sol\":3219:3253  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n    tag_189:\n        /* \"CYBCC.sol\":3150:3261  function excludeFromFee(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":4329:4816  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_85:\n        /* \"CYBCC.sol\":4447:4454  uint256 */\n      0x00\n        /* \"CYBCC.sol\":4491:4498  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":4480:4487  tAmount */\n      dup4\n        /* \"CYBCC.sol\":4480:4498  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":4472:4534  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"CYBCC.sol\":4472:4534  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4534:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4593   */\n      0x1f\n        /* \"#utility.yul\":4571:4589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4564:4594   */\n      mstore\n        /* \"#utility.yul\":4630:4663   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":4610:4628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4603:4664   */\n      mstore\n        /* \"#utility.yul\":4681:4699   */\n      0x64\n      add\n        /* \"CYBCC.sol\":4472:4534  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_157\n        /* \"#utility.yul\":4350:4705   */\n      jump\n        /* \"CYBCC.sol\":4472:4534  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n    tag_192:\n        /* \"CYBCC.sol\":4550:4567  deductTransferFee */\n      dup2\n        /* \"CYBCC.sol\":4545:4809  if (!deductTransferFee) {... */\n      tag_195\n      jumpi\n        /* \"CYBCC.sol\":4585:4600  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":4610:4637  _getTransferValues(tAmount) */\n      tag_196\n        /* \"CYBCC.sol\":4629:4636  tAmount */\n      dup5\n        /* \"CYBCC.sol\":4610:4628  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":4610:4637  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_196:\n      pop\n        /* \"CYBCC.sol\":4584:4637  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap2\n      swap4\n      pop\n        /* \"CYBCC.sol\":4652:4666  return rAmount */\n      tag_173\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":4545:4809  if (!deductTransferFee) {... */\n    tag_195:\n        /* \"CYBCC.sol\":4702:4725  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":4733:4760  _getTransferValues(tAmount) */\n      tag_198\n        /* \"CYBCC.sol\":4752:4759  tAmount */\n      dup5\n        /* \"CYBCC.sol\":4733:4751  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":4733:4760  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_198:\n      pop\n        /* \"CYBCC.sol\":4699:4760  (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount) */\n      swap1\n      swap4\n      pop\n        /* \"CYBCC.sol\":4775:4797  return rTransferAmount */\n      tag_173\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":5152:5491  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_95:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5240:5260  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5240:5251  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":5240:5260  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":5239:5260  !_isExcluded[account] */\n      iszero\n        /* \"CYBCC.sol\":5231:5292  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"CYBCC.sol\":5231:5292  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4894:4915   */\n      mstore\n        /* \"#utility.yul\":4951:4953   */\n      0x1b\n        /* \"#utility.yul\":4931:4949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4924:4954   */\n      mstore\n        /* \"#utility.yul\":4990:5019   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":4970:4988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4963:5020   */\n      mstore\n        /* \"#utility.yul\":5037:5055   */\n      0x64\n      add\n        /* \"CYBCC.sol\":5231:5292  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_157\n        /* \"#utility.yul\":4710:5061   */\n      jump\n        /* \"CYBCC.sol\":5231:5292  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5307:5323  _rOwned[account] */\n      dup2\n      and\n        /* \"CYBCC.sol\":5326:5327  0 */\n      0x00\n        /* \"CYBCC.sol\":5307:5323  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5307:5314  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":5307:5323  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":5307:5327  _rOwned[account] > 0 */\n      iszero\n        /* \"CYBCC.sol\":5303:5412  if (_rOwned[account] > 0) {... */\n      tag_207\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5383:5399  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5383:5390  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":5383:5399  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":5363:5400  tokenFromReflection(_rOwned[account]) */\n      tag_208\n      swap1\n        /* \"CYBCC.sol\":5363:5382  tokenFromReflection */\n      tag_209\n        /* \"CYBCC.sol\":5363:5400  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5344:5360  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5344:5351  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":5344:5360  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":5344:5400  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"CYBCC.sol\":5303:5412  if (_rOwned[account] > 0) {... */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5422:5442  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5422:5433  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":5422:5442  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CYBCC.sol\":5422:5449  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":5445:5449  true */\n      0x01\n        /* \"CYBCC.sol\":5422:5449  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CYBCC.sol\":5460:5469  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5460:5483  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5152:5491  function excludeAccountFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":3645:3899  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_99:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3752:3779  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"CYBCC.sol\":3730:3845  require(... */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_217\n      jump\t// in\n    tag_215:\n        /* \"CYBCC.sol\":3856:3875  _developmentAccount */\n      0x13\n        /* \"CYBCC.sol\":3856:3891  _developmentAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3645:3899  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":2638:2916  function balanceOf(address sender)... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2785:2804  _isExcluded[sender] */\n      dup2\n      and\n        /* \"CYBCC.sol\":2756:2763  uint256 */\n      0x00\n        /* \"CYBCC.sol\":2785:2804  _isExcluded[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2785:2796  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":2785:2804  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":2781:2855  if (_isExcluded[sender]) {... */\n      iszero\n      tag_219\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2828:2843  _tOwned[sender] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2828:2835  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":2828:2843  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"CYBCC.sol\":2638:2916  function balanceOf(address sender)... */\n      jump\t// out\n        /* \"CYBCC.sol\":2781:2855  if (_isExcluded[sender]) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2892:2907  _rOwned[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2892:2899  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":2892:2907  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":2872:2908  tokenFromReflection(_rOwned[sender]) */\n      tag_173\n      swap1\n        /* \"CYBCC.sol\":2872:2891  tokenFromReflection */\n      tag_209\n        /* \"CYBCC.sol\":2872:2908  tokenFromReflection(_rOwned[sender]) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":3387:3637  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_129:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3492:3519  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"CYBCC.sol\":3470:3585  require(... */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_217\n      jump\t// in\n    tag_237:\n        /* \"CYBCC.sol\":3596:3613  _marketingAccount */\n      0x12\n        /* \"CYBCC.sol\":3596:3629  _marketingAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3387:3637  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":3269:3379  function includeInFee(address account) public onlyOwner {... */\n    tag_144:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3336:3363  _isExcludedFromFee[account] */\n      and\n        /* \"CYBCC.sol\":3366:3371  false */\n      0x00\n        /* \"CYBCC.sol\":3336:3363  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3336:3354  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":3336:3363  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":3336:3371  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3269:3379  function includeInFee(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":5499:5981  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_152:\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      sload(0x0a)\n        /* \"CYBCC.sol\":1835:1845  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":1766:1772  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":1824:1845  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":1820:1848  if (owner() == msg.sender) _ */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5584:5604  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5584:5595  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":5584:5604  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":5576:5636  require(_isExcluded[account], \"Account is already included\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"CYBCC.sol\":5576:5636  require(_isExcluded[account], \"Account is already included\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5657:5678   */\n      mstore\n        /* \"#utility.yul\":5714:5716   */\n      0x1b\n        /* \"#utility.yul\":5694:5712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5687:5717   */\n      mstore\n        /* \"#utility.yul\":5753:5782   */\n      0x4163636f756e7420697320616c726561647920696e636c756465640000000000\n        /* \"#utility.yul\":5733:5751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5726:5783   */\n      mstore\n        /* \"#utility.yul\":5800:5818   */\n      0x64\n      add\n        /* \"CYBCC.sol\":5576:5636  require(_isExcluded[account], \"Account is already included\") */\n      tag_157\n        /* \"#utility.yul\":5473:5824   */\n      jump\n        /* \"CYBCC.sol\":5576:5636  require(_isExcluded[account], \"Account is already included\") */\n    tag_250:\n        /* \"CYBCC.sol\":5652:5661  uint256 i */\n      0x00\n        /* \"CYBCC.sol\":5647:5974  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_253:\n        /* \"CYBCC.sol\":5671:5680  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5671:5687  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":5667:5687  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":5647:5974  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"CYBCC.sol\":5729:5736  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5713:5736  _excluded[i] == account */\n      and\n        /* \"CYBCC.sol\":5713:5722  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5723:5724  i */\n      dup3\n        /* \"CYBCC.sol\":5713:5725  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":5713:5736  _excluded[i] == account */\n      sub\n        /* \"CYBCC.sol\":5709:5963  if (_excluded[i] == account) {... */\n      tag_260\n      jumpi\n        /* \"CYBCC.sol\":5772:5781  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5782:5798  _excluded.length */\n      dup1\n      sload\n        /* \"CYBCC.sol\":5782:5802  _excluded.length - 1 */\n      tag_261\n      swap1\n        /* \"CYBCC.sol\":5801:5802  1 */\n      0x01\n      swap1\n        /* \"CYBCC.sol\":5782:5802  _excluded.length - 1 */\n      tag_162\n      jump\t// in\n    tag_261:\n        /* \"CYBCC.sol\":5772:5803  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_258\n      jump\t// in\n    tag_263:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"CYBCC.sol\":5757:5766  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5757:5769  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5772:5803  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"CYBCC.sol\":5767:5768  i */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":5757:5769  _excluded[i] */\n      dup2\n      lt\n      tag_266\n      jumpi\n      tag_266\n      tag_258\n      jump\t// in\n    tag_266:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"CYBCC.sol\":5757:5803  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5822:5838  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5822:5829  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":5822:5838  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":5822:5842  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5861:5872  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":5861:5881  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"CYBCC.sol\":5861:5889  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5908:5917  _excluded */\n      0x09\n        /* \"CYBCC.sol\":5908:5923  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_269\n      jumpi\n      tag_269\n      tag_270\n      jump\t// in\n    tag_269:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5647:5974  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"CYBCC.sol\":5499:5981  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":5709:5963  if (_excluded[i] == account) {... */\n    tag_260:\n        /* \"CYBCC.sol\":5689:5692  i++ */\n      0x01\n      add\n        /* \"CYBCC.sol\":5647:5974  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_253)\n    tag_254:\n      pop\n        /* \"CYBCC.sol\":5499:5981  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":10997:11550  function _getTransferValues(uint256 tAmount)... */\n    tag_160:\n        /* \"CYBCC.sol\":11105:11112  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11127:11134  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11149:11156  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11171:11178  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11206:11222  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":11225:11254  _getCompleteTaxValue(tAmount) */\n      tag_274\n        /* \"CYBCC.sol\":11246:11253  tAmount */\n      dup7\n        /* \"CYBCC.sol\":11225:11245  _getCompleteTaxValue */\n      tag_275\n        /* \"CYBCC.sol\":11225:11254  _getCompleteTaxValue(tAmount) */\n      jump\t// in\n    tag_274:\n        /* \"CYBCC.sol\":11206:11254  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11265:11288  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":11291:11309  tAmount - taxValue */\n      tag_276\n        /* \"CYBCC.sol\":11206:11254  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      dup3\n        /* \"CYBCC.sol\":11291:11298  tAmount */\n      dup9\n        /* \"CYBCC.sol\":11291:11309  tAmount - taxValue */\n      tag_162\n      jump\t// in\n    tag_276:\n        /* \"CYBCC.sol\":11265:11309  uint256 tTransferAmount = tAmount - taxValue */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11320:11339  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":11342:11352  _getRate() */\n      tag_277\n        /* \"CYBCC.sol\":11342:11350  _getRate */\n      tag_278\n        /* \"CYBCC.sol\":11342:11352  _getRate() */\n      jump\t// in\n    tag_277:\n        /* \"CYBCC.sol\":11320:11352  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11363:11386  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":11389:11418  tTransferAmount * currentRate */\n      tag_279\n        /* \"CYBCC.sol\":11320:11352  uint256 currentRate = _getRate() */\n      dup3\n        /* \"CYBCC.sol\":11389:11404  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":11389:11418  tTransferAmount * currentRate */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"CYBCC.sol\":11363:11418  uint256 rTransferAmount = tTransferAmount * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11429:11444  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":11447:11468  tAmount * currentRate */\n      tag_281\n        /* \"CYBCC.sol\":11457:11468  currentRate */\n      dup4\n        /* \"CYBCC.sol\":11447:11454  tAmount */\n      dup12\n        /* \"CYBCC.sol\":11447:11468  tAmount * currentRate */\n      tag_280\n      jump\t// in\n    tag_281:\n        /* \"CYBCC.sol\":11429:11468  uint256 rAmount = tAmount * currentRate */\n      swap11\n        /* \"CYBCC.sol\":11496:11511  rTransferAmount */\n      swap2\n      swap10\n      pop\n        /* \"CYBCC.sol\":11513:11528  tTransferAmount */\n      swap3\n      swap8\n      pop\n        /* \"CYBCC.sol\":11530:11541  currentRate */\n      swap1\n      swap6\n      pop\n        /* \"CYBCC.sol\":10997:11550  function _getTransferValues(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8808:8813  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8815:8822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8824:8829  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8831:8835  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8807  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10527  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10569:10605  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10565:10874  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10644:10649  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10641  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10649  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6486:6518   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6468:6519   */\n      mstore\n        /* \"#utility.yul\":6535:6553   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6528:6562   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6578:6596   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6571:6605   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6441:6459   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_157\n        /* \"#utility.yul\":6266:6611   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10801:10806  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10808:10815  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10836:10841  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10833  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10841  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10843:10848  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10800  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10493:10880  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":5989:6831  function _transfer(... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6138:6158  sender != address(0) */\n      dup4\n      and\n        /* \"CYBCC.sol\":6130:6200  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"CYBCC.sol\":6130:6200  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6800:6821   */\n      mstore\n        /* \"#utility.yul\":6857:6859   */\n      0x25\n        /* \"#utility.yul\":6837:6855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6830:6860   */\n      mstore\n        /* \"#utility.yul\":6896:6930   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6876:6894   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6869:6931   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6947:6965   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6940:6975   */\n      mstore\n        /* \"#utility.yul\":6992:7011   */\n      0x84\n      add\n        /* \"CYBCC.sol\":6130:6200  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_157\n        /* \"#utility.yul\":6616:7017   */\n      jump\n        /* \"CYBCC.sol\":6130:6200  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6219:6242  recipient != address(0) */\n      dup3\n      and\n        /* \"CYBCC.sol\":6211:6282  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7224:7226   */\n      0x20\n        /* \"CYBCC.sol\":6211:6282  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7206:7227   */\n      mstore\n        /* \"#utility.yul\":7263:7265   */\n      0x23\n        /* \"#utility.yul\":7243:7261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7236:7266   */\n      mstore\n        /* \"#utility.yul\":7302:7336   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7282:7300   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7275:7337   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7353:7371   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7346:7379   */\n      mstore\n        /* \"#utility.yul\":7396:7415   */\n      0x84\n      add\n        /* \"CYBCC.sol\":6211:6282  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n        /* \"#utility.yul\":7022:7421   */\n      jump\n        /* \"CYBCC.sol\":6211:6282  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_296:\n        /* \"CYBCC.sol\":6293:6314  uint256 senderBalance */\n      0x00\n        /* \"CYBCC.sol\":6317:6334  balanceOf(sender) */\n      tag_299\n        /* \"CYBCC.sol\":6327:6333  sender */\n      dup5\n        /* \"CYBCC.sol\":6317:6326  balanceOf */\n      tag_103\n        /* \"CYBCC.sol\":6317:6334  balanceOf(sender) */\n      jump\t// in\n    tag_299:\n        /* \"CYBCC.sol\":6293:6334  uint256 senderBalance = balanceOf(sender) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":6384:6390  amount */\n      dup2\n        /* \"CYBCC.sol\":6367:6380  senderBalance */\n      dup2\n        /* \"CYBCC.sol\":6367:6390  senderBalance >= amount */\n      lt\n      iszero\n        /* \"CYBCC.sol\":6345:6456  require(... */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7628:7630   */\n      0x20\n        /* \"CYBCC.sol\":6345:6456  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7610:7631   */\n      mstore\n        /* \"#utility.yul\":7667:7669   */\n      0x26\n        /* \"#utility.yul\":7647:7665   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7640:7670   */\n      mstore\n        /* \"#utility.yul\":7706:7740   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7686:7704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7679:7741   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7757:7775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7750:7786   */\n      mstore\n        /* \"#utility.yul\":7803:7822   */\n      0x84\n      add\n        /* \"CYBCC.sol\":6345:6456  require(... */\n      tag_157\n        /* \"#utility.yul\":7426:7828   */\n      jump\n        /* \"CYBCC.sol\":6345:6456  require(... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      dup4\n      and\n        /* \"CYBCC.sol\":2571:2575  bool */\n      0x00\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2595:2613  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":2595:2622  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":6469:6612  if(!isExcludedFromFee(recipient))... */\n      tag_307\n      jumpi\n        /* \"CYBCC.sol\":6564:6579  maxWalletAmount */\n      sload(0x14)\n        /* \"CYBCC.sol\":6554:6560  amount */\n      dup3\n        /* \"CYBCC.sol\":6533:6553  balanceOf(recipient) */\n      tag_305\n        /* \"CYBCC.sol\":6543:6552  recipient */\n      dup6\n        /* \"CYBCC.sol\":6533:6542  balanceOf */\n      tag_103\n        /* \"CYBCC.sol\":6533:6553  balanceOf(recipient) */\n      jump\t// in\n    tag_305:\n        /* \"CYBCC.sol\":6533:6560  balanceOf(recipient)+amount */\n      tag_306\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_306:\n        /* \"CYBCC.sol\":6533:6579  balanceOf(recipient)+amount <= maxWalletAmount */\n      gt\n      iszero\n        /* \"CYBCC.sol\":6525:6600  require(balanceOf(recipient)+amount <= maxWalletAmount, \"Whale detected!!\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8035:8037   */\n      0x20\n        /* \"CYBCC.sol\":6525:6600  require(balanceOf(recipient)+amount <= maxWalletAmount, \"Whale detected!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8017:8038   */\n      mstore\n        /* \"#utility.yul\":8074:8076   */\n      0x10\n        /* \"#utility.yul\":8054:8072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8047:8077   */\n      mstore\n      shl(0x80, 0x5768616c652064657465637465642121)\n        /* \"#utility.yul\":8093:8111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8086:8132   */\n      mstore\n        /* \"#utility.yul\":8149:8167   */\n      0x64\n      add\n        /* \"CYBCC.sol\":6525:6600  require(balanceOf(recipient)+amount <= maxWalletAmount, \"Whale detected!!\") */\n      tag_157\n        /* \"#utility.yul\":7833:8173   */\n      jump\n        /* \"CYBCC.sol\":6525:6600  require(balanceOf(recipient)+amount <= maxWalletAmount, \"Whale detected!!\") */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6658:6684  _isExcludedFromFee[sender] */\n      dup5\n      and\n        /* \"CYBCC.sol\":6622:6634  bool takeFee */\n      0x00\n        /* \"CYBCC.sol\":6658:6684  _isExcludedFromFee[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6658:6676  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":6658:6684  _isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":6637:6641  true */\n      0x01\n      swap1\n        /* \"CYBCC.sol\":6658:6684  _isExcludedFromFee[sender] */\n      0xff\n      and\n      dup1\n        /* \"CYBCC.sol\":6658:6717  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n      tag_310\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6688:6717  _isExcludedFromFee[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6688:6706  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":6688:6717  _isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":6658:6717  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n    tag_310:\n        /* \"CYBCC.sol\":6654:6761  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {... */\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"CYBCC.sol\":6744:6749  false */\n      0x00\n        /* \"CYBCC.sol\":6654:6761  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {... */\n    tag_311:\n        /* \"CYBCC.sol\":6773:6823  _tokenTransfer(sender, recipient, amount, takeFee) */\n      tag_312\n        /* \"CYBCC.sol\":6788:6794  sender */\n      dup6\n        /* \"CYBCC.sol\":6796:6805  recipient */\n      dup6\n        /* \"CYBCC.sol\":6807:6813  amount */\n      dup6\n        /* \"CYBCC.sol\":6815:6822  takeFee */\n      dup5\n        /* \"CYBCC.sol\":6773:6787  _tokenTransfer */\n      tag_313\n        /* \"CYBCC.sol\":6773:6823  _tokenTransfer(sender, recipient, amount, takeFee) */\n      jump\t// in\n    tag_312:\n        /* \"CYBCC.sol\":6119:6831  {... */\n      pop\n      pop\n        /* \"CYBCC.sol\":5989:6831  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":4824:5144  function tokenFromReflection(uint256 rAmount)... */\n    tag_209:\n        /* \"CYBCC.sol\":4919:4926  uint256 */\n      0x00\n        /* \"CYBCC.sol\":4977:4984  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":4966:4973  rAmount */\n      dup3\n        /* \"CYBCC.sol\":4966:4984  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":4944:5054  require(... */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8380:8382   */\n      0x20\n        /* \"CYBCC.sol\":4944:5054  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8362:8383   */\n      mstore\n        /* \"#utility.yul\":8419:8421   */\n      0x2a\n        /* \"#utility.yul\":8399:8417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8392:8422   */\n      mstore\n        /* \"#utility.yul\":8458:8492   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":8438:8456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8431:8493   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":8509:8527   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8502:8542   */\n      mstore\n        /* \"#utility.yul\":8559:8578   */\n      0x84\n      add\n        /* \"CYBCC.sol\":4944:5054  require(... */\n      tag_157\n        /* \"#utility.yul\":8178:8584   */\n      jump\n        /* \"CYBCC.sol\":4944:5054  require(... */\n    tag_315:\n        /* \"CYBCC.sol\":5065:5084  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":5087:5097  _getRate() */\n      tag_318\n        /* \"CYBCC.sol\":5087:5095  _getRate */\n      tag_278\n        /* \"CYBCC.sol\":5087:5097  _getRate() */\n      jump\t// in\n    tag_318:\n        /* \"CYBCC.sol\":5065:5097  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":5115:5136  rAmount / currentRate */\n      tag_319\n        /* \"CYBCC.sol\":5065:5097  uint256 currentRate = _getRate() */\n      dup2\n        /* \"CYBCC.sol\":5115:5122  rAmount */\n      dup5\n        /* \"CYBCC.sol\":5115:5136  rAmount / currentRate */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"CYBCC.sol\":5108:5136  return rAmount / currentRate */\n      swap4\n        /* \"CYBCC.sol\":4824:5144  function tokenFromReflection(uint256 rAmount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":10735:10989  function _getCompleteTaxValue(uint256 tAmount)... */\n    tag_275:\n        /* \"CYBCC.sol\":10831:10838  uint256 */\n      0x00\n        /* \"CYBCC.sol\":10856:10872  uint256 allTaxes */\n      0x00\n        /* \"CYBCC.sol\":10892:10899  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":10875:10889  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":10875:10899  _reflectionFee + _taxFee */\n      tag_322\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_322:\n        /* \"CYBCC.sol\":10856:10899  uint256 allTaxes = _reflectionFee + _taxFee */\n      swap1\n      pop\n        /* \"CYBCC.sol\":10910:10926  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":10952:10955  100 */\n      0x64\n        /* \"CYBCC.sol\":10930:10948  tAmount * allTaxes */\n      tag_323\n        /* \"CYBCC.sol\":10856:10899  uint256 allTaxes = _reflectionFee + _taxFee */\n      dup4\n        /* \"CYBCC.sol\":10930:10937  tAmount */\n      dup7\n        /* \"CYBCC.sol\":10930:10948  tAmount * allTaxes */\n      tag_280\n      jump\t// in\n    tag_323:\n        /* \"CYBCC.sol\":10929:10955  (tAmount * allTaxes) / 100 */\n      tag_324\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_324:\n        /* \"CYBCC.sol\":10910:10955  uint256 taxValue = (tAmount * allTaxes) / 100 */\n      swap5\n        /* \"CYBCC.sol\":10735:10989  function _getCompleteTaxValue(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":11821:11982  function _getRate() private view returns (uint256) {... */\n    tag_278:\n        /* \"CYBCC.sol\":11863:11870  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11884:11899  uint256 rSupply */\n      0x00\n        /* \"CYBCC.sol\":11901:11916  uint256 tSupply */\n      0x00\n        /* \"CYBCC.sol\":11920:11939  _getCurrentSupply() */\n      tag_326\n        /* \"CYBCC.sol\":11920:11937  _getCurrentSupply */\n      tag_327\n        /* \"CYBCC.sol\":11920:11939  _getCurrentSupply() */\n      jump\t// in\n    tag_326:\n        /* \"CYBCC.sol\":11883:11939  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CYBCC.sol\":11957:11974  rSupply / tSupply */\n      tag_328\n        /* \"CYBCC.sol\":11883:11939  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"CYBCC.sol\":11957:11974  rSupply / tSupply */\n      tag_320\n      jump\t// in\n    tag_328:\n        /* \"CYBCC.sol\":11950:11974  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":11821:11982  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9802:9821  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9873:9874  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      tag_157\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9900:9921  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9972:9973  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      tag_157\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10006  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10022  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10030  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10040:10116  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10090:10097  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10088  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10099:10104  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_335\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":6839:7633  function _tokenTransfer(... */\n    tag_313:\n        /* \"CYBCC.sol\":6985:6992  takeFee */\n      dup1\n        /* \"CYBCC.sol\":6980:7035  if (!takeFee) {... */\n      tag_338\n      jumpi\n        /* \"CYBCC.sol\":7009:7023  removeAllFee() */\n      tag_338\n        /* \"CYBCC.sol\":7009:7021  removeAllFee */\n      tag_339\n        /* \"CYBCC.sol\":7009:7023  removeAllFee() */\n      jump\t// in\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7051:7068  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7051:7062  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7051:7068  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7051:7088  _isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_340\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7073:7088  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7073:7084  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7073:7088  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7072:7088  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":7051:7088  _isExcluded[from] && !_isExcluded[to] */\n    tag_340:\n        /* \"CYBCC.sol\":7047:7558  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"CYBCC.sol\":7105:7143  _transferFromExcluded(from, to, value) */\n      tag_342\n        /* \"CYBCC.sol\":7127:7131  from */\n      dup5\n        /* \"CYBCC.sol\":7133:7135  to */\n      dup5\n        /* \"CYBCC.sol\":7137:7142  value */\n      dup5\n        /* \"CYBCC.sol\":7105:7126  _transferFromExcluded */\n      tag_343\n        /* \"CYBCC.sol\":7105:7143  _transferFromExcluded(from, to, value) */\n      jump\t// in\n    tag_342:\n        /* \"CYBCC.sol\":7047:7558  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      jump(tag_360)\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7166:7183  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7166:7177  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7166:7183  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7165:7183  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":7165:7202  !_isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7187:7202  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7187:7198  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7187:7202  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7165:7202  !_isExcluded[from] && _isExcluded[to] */\n    tag_345:\n        /* \"CYBCC.sol\":7161:7558  if (!_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"CYBCC.sol\":7219:7255  _transferToExcluded(from, to, value) */\n      tag_342\n        /* \"CYBCC.sol\":7239:7243  from */\n      dup5\n        /* \"CYBCC.sol\":7245:7247  to */\n      dup5\n        /* \"CYBCC.sol\":7249:7254  value */\n      dup5\n        /* \"CYBCC.sol\":7219:7238  _transferToExcluded */\n      tag_348\n        /* \"CYBCC.sol\":7219:7255  _transferToExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":7161:7558  if (!_isExcluded[from] && _isExcluded[to]) {... */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7278:7295  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7278:7289  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7278:7295  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7277:7295  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":7277:7315  !_isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7300:7315  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7300:7311  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7300:7315  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7299:7315  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":7277:7315  !_isExcluded[from] && !_isExcluded[to] */\n    tag_350:\n        /* \"CYBCC.sol\":7273:7558  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"CYBCC.sol\":7332:7366  _transferStandard(from, to, value) */\n      tag_342\n        /* \"CYBCC.sol\":7350:7354  from */\n      dup5\n        /* \"CYBCC.sol\":7356:7358  to */\n      dup5\n        /* \"CYBCC.sol\":7360:7365  value */\n      dup5\n        /* \"CYBCC.sol\":7332:7349  _transferStandard */\n      tag_353\n        /* \"CYBCC.sol\":7332:7366  _transferStandard(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":7273:7558  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7388:7405  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7388:7399  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7388:7405  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7388:7424  _isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7409:7424  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7409:7420  _isExcluded */\n      0x08\n        /* \"CYBCC.sol\":7409:7424  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7388:7424  _isExcluded[from] && _isExcluded[to] */\n    tag_355:\n        /* \"CYBCC.sol\":7384:7558  if (_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"CYBCC.sol\":7441:7479  _transferBothExcluded(from, to, value) */\n      tag_342\n        /* \"CYBCC.sol\":7463:7467  from */\n      dup5\n        /* \"CYBCC.sol\":7469:7471  to */\n      dup5\n        /* \"CYBCC.sol\":7473:7478  value */\n      dup5\n        /* \"CYBCC.sol\":7441:7462  _transferBothExcluded */\n      tag_358\n        /* \"CYBCC.sol\":7441:7479  _transferBothExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":7384:7558  if (_isExcluded[from] && _isExcluded[to]) {... */\n    tag_356:\n        /* \"CYBCC.sol\":7512:7546  _transferStandard(from, to, value) */\n      tag_360\n        /* \"CYBCC.sol\":7530:7534  from */\n      dup5\n        /* \"CYBCC.sol\":7536:7538  to */\n      dup5\n        /* \"CYBCC.sol\":7540:7545  value */\n      dup5\n        /* \"CYBCC.sol\":7512:7529  _transferStandard */\n      tag_353\n        /* \"CYBCC.sol\":7512:7546  _transferStandard(from, to, value) */\n      jump\t// in\n    tag_360:\n        /* \"CYBCC.sol\":7575:7582  takeFee */\n      dup1\n        /* \"CYBCC.sol\":7570:7626  if (!takeFee) {... */\n      tag_291\n      jumpi\n        /* \"CYBCC.sol\":7599:7614  restoreAllFee() */\n      tag_291\n        /* \"CYBCC.sol\":7949:7971  _previousReflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":7932:7946  _reflectionFee */\n      0x0e\n        /* \"CYBCC.sol\":7932:7971  _reflectionFee = _previousReflectionFee */\n      sstore\n        /* \"CYBCC.sol\":7992:8007  _previousTaxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":7982:7989  _taxFee */\n      0x10\n        /* \"CYBCC.sol\":7982:8007  _taxFee = _previousTaxFee */\n      sstore\n        /* \"CYBCC.sol\":7888:8015  function restoreAllFee() private {... */\n      jump\n        /* \"CYBCC.sol\":11990:12652  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_327:\n        /* \"CYBCC.sol\":12088:12095  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":12124:12131  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":12041:12048  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"CYBCC.sol\":12144:12510  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_365:\n        /* \"CYBCC.sol\":12168:12177  _excluded */\n      0x09\n        /* \"CYBCC.sol\":12168:12184  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":12164:12184  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":12144:12510  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_366\n      jumpi\n        /* \"CYBCC.sol\":12252:12259  rSupply */\n      dup3\n        /* \"CYBCC.sol\":12228:12235  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":12228:12249  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":12236:12245  _excluded */\n      0x09\n        /* \"CYBCC.sol\":12246:12247  i */\n      dup5\n        /* \"CYBCC.sol\":12236:12248  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_369\n      jumpi\n      tag_369\n      tag_258\n      jump\t// in\n    tag_369:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":12228:12249  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12228:12259  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"CYBCC.sol\":12228:12311  _rOwned[_excluded[i]] > rSupply ||... */\n      tag_371\n      jumpi\n      pop\n        /* \"CYBCC.sol\":12304:12311  tSupply */\n      dup2\n        /* \"CYBCC.sol\":12280:12287  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":12280:12301  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":12288:12297  _excluded */\n      0x09\n        /* \"CYBCC.sol\":12298:12299  i */\n      dup5\n        /* \"CYBCC.sol\":12288:12300  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_373\n      tag_258\n      jump\t// in\n    tag_373:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":12280:12301  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12280:12311  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"CYBCC.sol\":12228:12311  _rOwned[_excluded[i]] > rSupply ||... */\n    tag_371:\n        /* \"CYBCC.sol\":12206:12387  if (... */\n      iszero\n      tag_375\n      jumpi\n        /* \"CYBCC.sol\":12354:12361  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":12363:12370  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":12346:12371  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":11990:12652  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":12206:12387  if (... */\n    tag_375:\n        /* \"CYBCC.sol\":12421:12428  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":12421:12442  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":12429:12438  _excluded */\n      0x09\n        /* \"CYBCC.sol\":12439:12440  i */\n      dup4\n        /* \"CYBCC.sol\":12429:12441  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_377\n      jumpi\n      tag_377\n      tag_258\n      jump\t// in\n    tag_377:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":12421:12442  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12411:12442  rSupply - _rOwned[_excluded[i]] */\n      tag_379\n      swap1\n        /* \"CYBCC.sol\":12411:12418  rSupply */\n      dup5\n        /* \"CYBCC.sol\":12411:12442  rSupply - _rOwned[_excluded[i]] */\n      tag_162\n      jump\t// in\n    tag_379:\n        /* \"CYBCC.sol\":12401:12442  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"CYBCC.sol\":12477:12484  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":12477:12498  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":12485:12494  _excluded */\n      0x09\n        /* \"CYBCC.sol\":12495:12496  i */\n      dup4\n        /* \"CYBCC.sol\":12485:12497  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_381\n      jumpi\n      tag_381\n      tag_258\n      jump\t// in\n    tag_381:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":12477:12498  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12467:12498  tSupply - _tOwned[_excluded[i]] */\n      tag_383\n      swap1\n        /* \"CYBCC.sol\":12467:12474  tSupply */\n      dup4\n        /* \"CYBCC.sol\":12467:12498  tSupply - _tOwned[_excluded[i]] */\n      tag_162\n      jump\t// in\n    tag_383:\n        /* \"CYBCC.sol\":12457:12498  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"CYBCC.sol\":12186:12189  i++ */\n      0x01\n      add\n        /* \"CYBCC.sol\":12144:12510  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_365)\n    tag_366:\n      pop\n        /* \"CYBCC.sol\":12546:12553  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":12536:12543  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":12536:12553  _rTotal / _tTotal */\n      tag_384\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_384:\n        /* \"CYBCC.sol\":12526:12533  rSupply */\n      dup3\n        /* \"CYBCC.sol\":12526:12553  rSupply < _rTotal / _tTotal */\n      lt\n        /* \"CYBCC.sol\":12522:12607  if (rSupply < _rTotal / _tTotal) {... */\n      iszero\n      tag_385\n      jumpi\n        /* \"CYBCC.sol\":12578:12585  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":12587:12594  _tTotal */\n      sload(0x0b)\n        /* \"CYBCC.sol\":12570:12595  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":11990:12652  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":12522:12607  if (rSupply < _rTotal / _tTotal) {... */\n    tag_385:\n        /* \"CYBCC.sol\":12627:12634  rSupply */\n      swap1\n      swap4\n        /* \"CYBCC.sol\":12636:12643  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"CYBCC.sol\":11990:12652  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":7641:7880  function removeAllFee() private {... */\n    tag_339:\n        /* \"CYBCC.sol\":7688:7702  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":7688:7707  _reflectionFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":7688:7723  _reflectionFee == 0 && _taxFee == 0 */\n      dup1\n      iszero\n      tag_387\n      jumpi\n      pop\n        /* \"CYBCC.sol\":7711:7718  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":7711:7723  _taxFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":7688:7723  _reflectionFee == 0 && _taxFee == 0 */\n    tag_387:\n        /* \"CYBCC.sol\":7684:7732  if (_reflectionFee == 0 && _taxFee == 0) return; */\n      iszero\n      tag_388\n      jumpi\n        /* \"CYBCC.sol\":7641:7880  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":7684:7732  if (_reflectionFee == 0 && _taxFee == 0) return; */\n    tag_388:\n        /* \"CYBCC.sol\":7769:7783  _reflectionFee */\n      0x0e\n      dup1\n      sload\n        /* \"CYBCC.sol\":7744:7766  _previousReflectionFee */\n      0x0f\n        /* \"CYBCC.sol\":7744:7783  _previousReflectionFee = _reflectionFee */\n      sstore\n        /* \"CYBCC.sol\":7812:7819  _taxFee */\n      0x10\n      dup1\n      sload\n        /* \"CYBCC.sol\":7794:7809  _previousTaxFee */\n      0x11\n        /* \"CYBCC.sol\":7794:7819  _previousTaxFee = _taxFee */\n      sstore\n      0x00\n        /* \"CYBCC.sol\":7832:7850  _reflectionFee = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":7861:7872  _taxFee = 0 */\n      sstore\n        /* \"CYBCC.sol\":7641:7880  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":9323:9987  function _transferFromExcluded(... */\n    tag_343:\n        /* \"CYBCC.sol\":9474:9489  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":9504:9527  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9542:9565  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9580:9599  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":9613:9640  _getTransferValues(tAmount) */\n      tag_390\n        /* \"CYBCC.sol\":9632:9639  tAmount */\n      dup6\n        /* \"CYBCC.sol\":9613:9631  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":9613:9640  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9669:9684  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9669:9676  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9669:9684  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9459:9640  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":9669:9694  _tOwned[sender] - tAmount */\n      tag_391\n      swap1\n        /* \"CYBCC.sol\":9687:9694  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":9669:9694  _tOwned[sender] - tAmount */\n      tag_162\n      jump\t// in\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9651:9666  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9651:9658  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9651:9666  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":9651:9694  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":9723:9730  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9723:9738  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9723:9748  _rOwned[sender] - rAmount */\n      tag_392\n      swap1\n        /* \"CYBCC.sol\":9741:9748  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":9723:9748  _rOwned[sender] - rAmount */\n      tag_162\n      jump\t// in\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9705:9720  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9705:9712  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9705:9720  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":9705:9748  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":9780:9798  _rOwned[recipient] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9780:9816  _rOwned[recipient] + rTransferAmount */\n      tag_393\n      swap1\n        /* \"CYBCC.sol\":9801:9816  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":9780:9816  _rOwned[recipient] + rTransferAmount */\n      tag_165\n      jump\t// in\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9759:9777  _rOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9759:9766  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9759:9777  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":9759:9816  _rOwned[recipient] = _rOwned[recipient] + rTransferAmount */\n      sstore\n        /* \"CYBCC.sol\":9829:9873  taxFeeTransfer(sender, tAmount, currentRate) */\n      tag_394\n        /* \"CYBCC.sol\":9844:9850  sender */\n      dup8\n        /* \"CYBCC.sol\":9852:9859  tAmount */\n      dup7\n        /* \"CYBCC.sol\":9861:9872  currentRate */\n      dup4\n        /* \"CYBCC.sol\":9829:9843  taxFeeTransfer */\n      tag_395\n        /* \"CYBCC.sol\":9829:9873  taxFeeTransfer(sender, tAmount, currentRate) */\n      jump\t// in\n    tag_394:\n        /* \"CYBCC.sol\":9884:9917  _reflectFee(tAmount, currentRate) */\n      tag_396\n        /* \"CYBCC.sol\":9896:9903  tAmount */\n      dup6\n        /* \"CYBCC.sol\":9905:9916  currentRate */\n      dup3\n        /* \"CYBCC.sol\":9884:9895  _reflectFee */\n      tag_397\n        /* \"CYBCC.sol\":9884:9917  _reflectFee(tAmount, currentRate) */\n      jump\t// in\n    tag_396:\n        /* \"CYBCC.sol\":9952:9961  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9935:9979  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"CYBCC.sol\":9944:9950  sender */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9935:9979  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"CYBCC.sol\":9963:9978  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":9935:9979  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_398\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"CYBCC.sol\":9935:9979  Transfer(sender, recipient, tTransferAmount) */\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":9448:9987  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":9323:9987  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":8639:9315  function _transferToExcluded(... */\n    tag_348:\n        /* \"CYBCC.sol\":8788:8803  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":8818:8841  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":8856:8879  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":8894:8913  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":8927:8954  _getTransferValues(tAmount) */\n      tag_400\n        /* \"CYBCC.sol\":8946:8953  tAmount */\n      dup6\n        /* \"CYBCC.sol\":8927:8945  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":8927:8954  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_400:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8983:8998  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8983:8990  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":8983:8998  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":8773:8954  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":8983:9008  _rOwned[sender] - rAmount */\n      tag_401\n      swap1\n        /* \"CYBCC.sol\":8773:8954  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":8983:9008  _rOwned[sender] - rAmount */\n      tag_162\n      jump\t// in\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8965:8980  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8965:8972  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":8965:8980  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":8965:9008  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"CYBCC.sol\":9040:9058  _tOwned[recipient] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9040:9047  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9040:9058  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9040:9076  _tOwned[recipient] + tTransferAmount */\n      tag_402\n      swap1\n        /* \"CYBCC.sol\":9061:9076  tTransferAmount */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":9040:9076  _tOwned[recipient] + tTransferAmount */\n      tag_165\n      jump\t// in\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9019:9037  _tOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9019:9026  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9019:9037  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":9019:9076  _tOwned[recipient] = _tOwned[recipient] + tTransferAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":9108:9115  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9108:9126  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9108:9144  _rOwned[recipient] + rTransferAmount */\n      tag_393\n      swap1\n        /* \"CYBCC.sol\":9129:9144  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":9108:9144  _rOwned[recipient] + rTransferAmount */\n      tag_165\n      jump\t// in\n        /* \"CYBCC.sol\":8023:8631  function _transferStandard(... */\n    tag_353:\n        /* \"CYBCC.sol\":8170:8185  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":8200:8223  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":8238:8261  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":8276:8295  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":8309:8336  _getTransferValues(tAmount) */\n      tag_408\n        /* \"CYBCC.sol\":8328:8335  tAmount */\n      dup6\n        /* \"CYBCC.sol\":8309:8327  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":8309:8336  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_408:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8367:8382  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8367:8374  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":8367:8382  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":8155:8336  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":8367:8392  _rOwned[sender] - rAmount */\n      tag_392\n      swap1\n        /* \"CYBCC.sol\":8155:8336  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":8367:8392  _rOwned[sender] - rAmount */\n      tag_162\n      jump\t// in\n        /* \"CYBCC.sol\":9995:10727  function _transferBothExcluded(... */\n    tag_358:\n        /* \"CYBCC.sol\":10146:10161  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":10176:10199  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":10214:10237  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":10252:10271  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":10285:10312  _getTransferValues(tAmount) */\n      tag_415\n        /* \"CYBCC.sol\":10304:10311  tAmount */\n      dup6\n        /* \"CYBCC.sol\":10285:10303  _getTransferValues */\n      tag_160\n        /* \"CYBCC.sol\":10285:10312  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10341:10356  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10341:10348  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":10341:10356  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10131:10312  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":10341:10366  _tOwned[sender] - tAmount */\n      tag_416\n      swap1\n        /* \"CYBCC.sol\":10359:10366  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":10341:10366  _tOwned[sender] - tAmount */\n      tag_162\n      jump\t// in\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10323:10338  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10323:10330  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":10323:10338  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":10323:10366  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":10395:10402  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":10395:10410  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10395:10420  _rOwned[sender] - rAmount */\n      tag_401\n      swap1\n        /* \"CYBCC.sol\":10413:10420  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":10395:10420  _rOwned[sender] - rAmount */\n      tag_162\n      jump\t// in\n        /* \"CYBCC.sol\":12660:13269  function taxFeeTransfer(... */\n    tag_395:\n        /* \"CYBCC.sol\":12791:12806  uint256 tTaxFee */\n      0x00\n        /* \"CYBCC.sol\":12831:12834  100 */\n      0x64\n        /* \"CYBCC.sol\":12820:12827  _taxFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":12810:12817  tAmount */\n      dup5\n        /* \"CYBCC.sol\":12810:12827  tAmount * _taxFee */\n      tag_425\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_425:\n        /* \"CYBCC.sol\":12809:12834  (tAmount * _taxFee) / 100 */\n      tag_426\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_426:\n        /* \"CYBCC.sol\":12791:12834  uint256 tTaxFee = (tAmount * _taxFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12849:12860  tTaxFee > 0 */\n      dup1\n      iszero\n        /* \"CYBCC.sol\":12845:13262  if (tTaxFee > 0) {... */\n      tag_291\n      jumpi\n        /* \"CYBCC.sol\":12877:12892  uint256 rTaxFee */\n      0x00\n        /* \"CYBCC.sol\":12921:12922  2 */\n      0x02\n        /* \"CYBCC.sol\":12896:12917  tTaxFee * currentRate */\n      tag_428\n        /* \"CYBCC.sol\":12906:12917  currentRate */\n      dup5\n        /* \"CYBCC.sol\":12896:12903  tTaxFee */\n      dup5\n        /* \"CYBCC.sol\":12896:12917  tTaxFee * currentRate */\n      tag_280\n      jump\t// in\n    tag_428:\n        /* \"CYBCC.sol\":12895:12922  (tTaxFee * currentRate) / 2 */\n      tag_429\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_429:\n        /* \"CYBCC.sol\":12974:12991  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"CYBCC.sol\":12966:12992  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":12966:12973  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":12966:12992  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12877:12922  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":12966:13002  _rOwned[_marketingAccount] + rTaxFee */\n      tag_430\n      swap1\n        /* \"CYBCC.sol\":12877:12922  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":12966:13002  _rOwned[_marketingAccount] + rTaxFee */\n      tag_165\n      jump\t// in\n    tag_430:\n        /* \"CYBCC.sol\":12945:12962  _marketingAccount */\n      sload(0x12)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CYBCC.sol\":12937:12963  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":12937:12944  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":12937:12963  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":12937:13002  _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":13073:13092  _developmentAccount */\n      sload(0x13)\n      swap1\n      swap2\n      and\n        /* \"CYBCC.sol\":13065:13093  _rOwned[_developmentAccount] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13065:13120  _rOwned[_developmentAccount] +... */\n      tag_431\n      swap1\n        /* \"CYBCC.sol\":13113:13120  rTaxFee */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":13065:13120  _rOwned[_developmentAccount] +... */\n      tag_165\n      jump\t// in\n    tag_431:\n        /* \"CYBCC.sol\":13025:13044  _developmentAccount */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CYBCC.sol\":13017:13045  _rOwned[_developmentAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13017:13024  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":13017:13045  _rOwned[_developmentAccount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":13017:13120  _rOwned[_developmentAccount] =... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":13157:13174  _marketingAccount */\n      sload(0x12)\n        /* \"CYBCC.sol\":13140:13184  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap1\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup6\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13157:13174  _marketingAccount */\n      swap1\n      dup3\n      and\n      swap3\n        /* \"CYBCC.sol\":13140:13184  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap2\n      dup9\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":13140:13184  Transfer(sender, _marketingAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":13221:13240  _developmentAccount */\n      sload(0x13)\n        /* \"CYBCC.sol\":13204:13250  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":13221:13240  _developmentAccount */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"CYBCC.sol\":13204:13250  Transfer(sender, _developmentAccount, tTaxFee) */\n      dup8\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":13204:13250  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":12862:13262  {... */\n      pop\n        /* \"CYBCC.sol\":12780:13269  {... */\n      pop\n        /* \"CYBCC.sol\":12660:13269  function taxFeeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":11558:11813  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n    tag_397:\n        /* \"CYBCC.sol\":11636:11648  uint256 tFee */\n      0x00\n        /* \"CYBCC.sol\":11680:11683  100 */\n      0x64\n        /* \"CYBCC.sol\":11662:11676  _reflectionFee */\n      sload(0x0e)\n        /* \"CYBCC.sol\":11652:11659  tAmount */\n      dup5\n        /* \"CYBCC.sol\":11652:11676  tAmount * _reflectionFee */\n      tag_435\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_435:\n        /* \"CYBCC.sol\":11651:11683  (tAmount * _reflectionFee) / 100 */\n      tag_436\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_436:\n        /* \"CYBCC.sol\":11636:11683  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11694:11706  uint256 rFee */\n      0x00\n        /* \"CYBCC.sol\":11709:11727  tFee * currentRate */\n      tag_437\n        /* \"CYBCC.sol\":11716:11727  currentRate */\n      dup4\n        /* \"CYBCC.sol\":11636:11683  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      dup4\n        /* \"CYBCC.sol\":11709:11727  tFee * currentRate */\n      tag_280\n      jump\t// in\n    tag_437:\n        /* \"CYBCC.sol\":11694:11727  uint256 rFee = tFee * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11760:11764  rFee */\n      dup1\n        /* \"CYBCC.sol\":11750:11757  _rTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":11750:11764  _rTotal - rFee */\n      tag_438\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_438:\n        /* \"CYBCC.sol\":11740:11747  _rTotal */\n      0x0c\n        /* \"CYBCC.sol\":11740:11764  _rTotal = _rTotal - rFee */\n      sstore\n        /* \"CYBCC.sol\":11788:11798  _tFeeTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":11788:11805  _tFeeTotal + tFee */\n      tag_439\n      swap1\n        /* \"CYBCC.sol\":11801:11805  tFee */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":11788:11805  _tFeeTotal + tFee */\n      tag_165\n      jump\t// in\n    tag_439:\n        /* \"CYBCC.sol\":11775:11785  _tFeeTotal */\n      0x0d\n        /* \"CYBCC.sol\":11775:11805  _tFeeTotal = _tFeeTotal + tFee */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":11558:11813  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_37:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:663   */\n    tag_43:\n        /* \"#utility.yul\":394:396   */\n      0x20\n        /* \"#utility.yul\":383:392   */\n      dup2\n        /* \"#utility.yul\":376:397   */\n      mstore\n        /* \"#utility.yul\":357:361   */\n      0x00\n        /* \"#utility.yul\":426:432   */\n      dup3\n        /* \"#utility.yul\":420:433   */\n      mload\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":464:466   */\n      0x20\n        /* \"#utility.yul\":453:462   */\n      dup5\n        /* \"#utility.yul\":449:467   */\n      add\n        /* \"#utility.yul\":442:476   */\n      mstore\n        /* \"#utility.yul\":528:534   */\n      dup1\n        /* \"#utility.yul\":523:525   */\n      0x20\n        /* \"#utility.yul\":515:521   */\n      dup6\n        /* \"#utility.yul\":511:526   */\n      add\n        /* \"#utility.yul\":506:508   */\n      0x40\n        /* \"#utility.yul\":495:504   */\n      dup6\n        /* \"#utility.yul\":491:509   */\n      add\n        /* \"#utility.yul\":485:535   */\n      mcopy\n        /* \"#utility.yul\":584:585   */\n      0x00\n        /* \"#utility.yul\":579:581   */\n      0x40\n        /* \"#utility.yul\":570:576   */\n      dup3\n        /* \"#utility.yul\":559:568   */\n      dup6\n        /* \"#utility.yul\":555:577   */\n      add\n        /* \"#utility.yul\":551:582   */\n      add\n        /* \"#utility.yul\":544:586   */\n      mstore\n        /* \"#utility.yul\":654:656   */\n      0x40\n        /* \"#utility.yul\":647:649   */\n      0x1f\n        /* \"#utility.yul\":643:650   */\n      not\n        /* \"#utility.yul\":638:640   */\n      0x1f\n        /* \"#utility.yul\":630:636   */\n      dup4\n        /* \"#utility.yul\":626:641   */\n      add\n        /* \"#utility.yul\":622:651   */\n      and\n        /* \"#utility.yul\":611:620   */\n      dup5\n        /* \"#utility.yul\":607:652   */\n      add\n        /* \"#utility.yul\":603:657   */\n      add\n        /* \"#utility.yul\":595:657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":245:663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:841   */\n    tag_440:\n        /* \"#utility.yul\":736:756   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":785:816   */\n      dup2\n      and\n        /* \"#utility.yul\":775:817   */\n      dup2\n      eq\n        /* \"#utility.yul\":765:835   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":831:832   */\n      0x00\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":821:833   */\n      revert\n        /* \"#utility.yul\":765:835   */\n    tag_447:\n        /* \"#utility.yul\":668:841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":846:1146   */\n    tag_47:\n        /* \"#utility.yul\":914:920   */\n      0x00\n        /* \"#utility.yul\":922:928   */\n      0x00\n        /* \"#utility.yul\":975:977   */\n      0x40\n        /* \"#utility.yul\":963:972   */\n      dup4\n        /* \"#utility.yul\":954:961   */\n      dup6\n        /* \"#utility.yul\":950:973   */\n      sub\n        /* \"#utility.yul\":946:978   */\n      slt\n        /* \"#utility.yul\":943:995   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":981:993   */\n      revert\n        /* \"#utility.yul\":943:995   */\n    tag_449:\n        /* \"#utility.yul\":1014:1043   */\n      tag_450\n        /* \"#utility.yul\":1033:1042   */\n      dup4\n        /* \"#utility.yul\":1014:1043   */\n      tag_440\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1004:1043   */\n      swap5\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1097:1115   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1084:1116   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":846:1146   */\n      jump\t// out\n        /* \"#utility.yul\":1733:2107   */\n    tag_64:\n        /* \"#utility.yul\":1810:1816   */\n      0x00\n        /* \"#utility.yul\":1818:1824   */\n      0x00\n        /* \"#utility.yul\":1826:1832   */\n      0x00\n        /* \"#utility.yul\":1879:1881   */\n      0x60\n        /* \"#utility.yul\":1867:1876   */\n      dup5\n        /* \"#utility.yul\":1858:1865   */\n      dup7\n        /* \"#utility.yul\":1854:1877   */\n      sub\n        /* \"#utility.yul\":1850:1882   */\n      slt\n        /* \"#utility.yul\":1847:1899   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":1895:1896   */\n      0x00\n        /* \"#utility.yul\":1892:1893   */\n      0x00\n        /* \"#utility.yul\":1885:1897   */\n      revert\n        /* \"#utility.yul\":1847:1899   */\n    tag_455:\n        /* \"#utility.yul\":1918:1947   */\n      tag_456\n        /* \"#utility.yul\":1937:1946   */\n      dup5\n        /* \"#utility.yul\":1918:1947   */\n      tag_440\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":1908:1947   */\n      swap3\n      pop\n        /* \"#utility.yul\":1966:2004   */\n      tag_457\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"#utility.yul\":1989:1998   */\n      dup6\n        /* \"#utility.yul\":1985:2003   */\n      add\n        /* \"#utility.yul\":1966:2004   */\n      tag_440\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1733:2107   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1956:2004   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x40\n        /* \"#utility.yul\":2058:2076   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2045:2077   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1733:2107   */\n      jump\t// out\n        /* \"#utility.yul\":2301:2487   */\n    tag_79:\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2392:2399   */\n      dup5\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_460:\n        /* \"#utility.yul\":2452:2481   */\n      tag_319\n        /* \"#utility.yul\":2471:2480   */\n      dup3\n        /* \"#utility.yul\":2452:2481   */\n      tag_440\n      jump\t// in\n        /* \"#utility.yul\":2492:2887   */\n    tag_84:\n        /* \"#utility.yul\":2557:2563   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x40\n        /* \"#utility.yul\":2606:2615   */\n      dup4\n        /* \"#utility.yul\":2597:2604   */\n      dup6\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      0x00\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_463:\n        /* \"#utility.yul\":2679:2702   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2763:2781   */\n      dup4\n      add\n        /* \"#utility.yul\":2750:2782   */\n      calldataload\n        /* \"#utility.yul\":2820:2835   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2813:2836   */\n      iszero\n        /* \"#utility.yul\":2801:2837   */\n      dup2\n      eq\n        /* \"#utility.yul\":2791:2855   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2853   */\n      revert\n        /* \"#utility.yul\":2791:2855   */\n    tag_464:\n        /* \"#utility.yul\":2874:2881   */\n      dup1\n        /* \"#utility.yul\":2864:2881   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2492:2887   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3152   */\n    tag_138:\n        /* \"#utility.yul\":2960:2966   */\n      0x00\n        /* \"#utility.yul\":2968:2974   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x40\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3000:3007   */\n      dup6\n        /* \"#utility.yul\":2996:3019   */\n      sub\n        /* \"#utility.yul\":2992:3024   */\n      slt\n        /* \"#utility.yul\":2989:3041   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":3037:3038   */\n      0x00\n        /* \"#utility.yul\":3034:3035   */\n      0x00\n        /* \"#utility.yul\":3027:3039   */\n      revert\n        /* \"#utility.yul\":2989:3041   */\n    tag_466:\n        /* \"#utility.yul\":3060:3089   */\n      tag_467\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3060:3089   */\n      tag_440\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3050:3089   */\n      swap2\n      pop\n        /* \"#utility.yul\":3108:3146   */\n      tag_468\n        /* \"#utility.yul\":3142:3144   */\n      0x20\n        /* \"#utility.yul\":3131:3140   */\n      dup5\n        /* \"#utility.yul\":3127:3145   */\n      add\n        /* \"#utility.yul\":3108:3146   */\n      tag_440\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":3098:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:3152   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3697   */\n    tag_441:\n        /* \"#utility.yul\":3631:3641   */\n      0x4e487b71\n        /* \"#utility.yul\":3626:3629   */\n      0xe0\n        /* \"#utility.yul\":3622:3642   */\n      shl\n        /* \"#utility.yul\":3619:3620   */\n      0x00\n        /* \"#utility.yul\":3612:3643   */\n      mstore\n        /* \"#utility.yul\":3662:3666   */\n      0x11\n        /* \"#utility.yul\":3659:3660   */\n      0x04\n        /* \"#utility.yul\":3652:3667   */\n      mstore\n        /* \"#utility.yul\":3686:3690   */\n      0x24\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3676:3691   */\n      revert\n        /* \"#utility.yul\":3702:3830   */\n    tag_162:\n        /* \"#utility.yul\":3769:3778   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3790:3801   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3787:3824   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":3804:3822   */\n      tag_173\n      tag_441\n      jump\t// in\n        /* \"#utility.yul\":3835:3960   */\n    tag_165:\n        /* \"#utility.yul\":3900:3909   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3921:3931   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3918:3954   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":3934:3952   */\n      tag_173\n      tag_441\n      jump\t// in\n        /* \"#utility.yul\":3965:4345   */\n    tag_168:\n        /* \"#utility.yul\":4044:4045   */\n      0x01\n        /* \"#utility.yul\":4040:4052   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4087:4099   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4108:4169   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4162:4166   */\n      0x7f\n        /* \"#utility.yul\":4154:4160   */\n      dup3\n        /* \"#utility.yul\":4150:4167   */\n      and\n        /* \"#utility.yul\":4140:4167   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4169   */\n    tag_478:\n        /* \"#utility.yul\":4215:4217   */\n      0x20\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4204:4218   */\n      lt\n        /* \"#utility.yul\":4184:4202   */\n      dup2\n        /* \"#utility.yul\":4181:4219   */\n      sub\n        /* \"#utility.yul\":4178:4339   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":4261:4271   */\n      0x4e487b71\n        /* \"#utility.yul\":4256:4259   */\n      0xe0\n        /* \"#utility.yul\":4252:4272   */\n      shl\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4242:4273   */\n      mstore\n        /* \"#utility.yul\":4296:4300   */\n      0x22\n        /* \"#utility.yul\":4293:4294   */\n      0x04\n        /* \"#utility.yul\":4286:4301   */\n      mstore\n        /* \"#utility.yul\":4324:4328   */\n      0x24\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4329   */\n      revert\n        /* \"#utility.yul\":4178:4339   */\n    tag_479:\n      pop\n        /* \"#utility.yul\":3965:4345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5468   */\n    tag_217:\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5250:5271   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5307:5309   */\n      0x26\n        /* \"#utility.yul\":5287:5305   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5280:5310   */\n      mstore\n        /* \"#utility.yul\":5346:5380   */\n      0x7a65726f20616464726573732063616e206e6f74206265207468652046656541\n        /* \"#utility.yul\":5341:5343   */\n      0x40\n        /* \"#utility.yul\":5326:5344   */\n      dup3\n      add\n        /* \"#utility.yul\":5319:5381   */\n      mstore\n      shl(0xd2, 0x18d8dbdd5b9d)\n        /* \"#utility.yul\":5412:5414   */\n      0x60\n        /* \"#utility.yul\":5397:5415   */\n      dup3\n      add\n        /* \"#utility.yul\":5390:5426   */\n      mstore\n        /* \"#utility.yul\":5458:5461   */\n      0x80\n        /* \"#utility.yul\":5443:5462   */\n      add\n      swap1\n        /* \"#utility.yul\":5066:5468   */\n      jump\t// out\n        /* \"#utility.yul\":5829:5956   */\n    tag_258:\n        /* \"#utility.yul\":5890:5900   */\n      0x4e487b71\n        /* \"#utility.yul\":5885:5888   */\n      0xe0\n        /* \"#utility.yul\":5881:5901   */\n      shl\n        /* \"#utility.yul\":5878:5879   */\n      0x00\n        /* \"#utility.yul\":5871:5902   */\n      mstore\n        /* \"#utility.yul\":5921:5925   */\n      0x32\n        /* \"#utility.yul\":5918:5919   */\n      0x04\n        /* \"#utility.yul\":5911:5926   */\n      mstore\n        /* \"#utility.yul\":5945:5949   */\n      0x24\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5935:5950   */\n      revert\n        /* \"#utility.yul\":5961:6088   */\n    tag_270:\n        /* \"#utility.yul\":6022:6032   */\n      0x4e487b71\n        /* \"#utility.yul\":6017:6020   */\n      0xe0\n        /* \"#utility.yul\":6013:6033   */\n      shl\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":6003:6034   */\n      mstore\n        /* \"#utility.yul\":6053:6057   */\n      0x31\n        /* \"#utility.yul\":6050:6051   */\n      0x04\n        /* \"#utility.yul\":6043:6058   */\n      mstore\n        /* \"#utility.yul\":6077:6081   */\n      0x24\n        /* \"#utility.yul\":6074:6075   */\n      0x00\n        /* \"#utility.yul\":6067:6082   */\n      revert\n        /* \"#utility.yul\":6093:6261   */\n    tag_280:\n        /* \"#utility.yul\":6166:6175   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6197:6206   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6214:6229   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6208:6230   */\n      dup5\n      eq\n        /* \"#utility.yul\":6194:6231   */\n      or\n        /* \"#utility.yul\":6184:6255   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":6235:6253   */\n      tag_173\n      tag_441\n      jump\t// in\n        /* \"#utility.yul\":8589:8806   */\n    tag_320:\n        /* \"#utility.yul\":8629:8630   */\n      0x00\n        /* \"#utility.yul\":8655:8656   */\n      dup3\n        /* \"#utility.yul\":8645:8777   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":8699:8709   */\n      0x4e487b71\n        /* \"#utility.yul\":8694:8697   */\n      0xe0\n        /* \"#utility.yul\":8690:8710   */\n      shl\n        /* \"#utility.yul\":8687:8688   */\n      0x00\n        /* \"#utility.yul\":8680:8711   */\n      mstore\n        /* \"#utility.yul\":8734:8738   */\n      0x12\n        /* \"#utility.yul\":8731:8732   */\n      0x04\n        /* \"#utility.yul\":8724:8739   */\n      mstore\n        /* \"#utility.yul\":8762:8766   */\n      0x24\n        /* \"#utility.yul\":8759:8760   */\n      0x00\n        /* \"#utility.yul\":8752:8767   */\n      revert\n        /* \"#utility.yul\":8645:8777   */\n    tag_496:\n      pop\n        /* \"#utility.yul\":8791:8800   */\n      div\n      swap1\n        /* \"#utility.yul\":8589:8806   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ea3c0acdb4beafad64dbd09074803c9e14ee40681b0fee36229882af80cb582764736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_945": {
									"entryPoint": null,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 434,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 495,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5597:6",
										"nodeType": "YulBlock",
										"src": "0:5597:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "215:306:6",
													"nodeType": "YulBlock",
													"src": "215:306:6",
													"statements": [
														{
															"nativeSrc": "225:10:6",
															"nodeType": "YulAssignment",
															"src": "225:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "234:1:6",
																"nodeType": "YulLiteral",
																"src": "234:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "225:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:6"
																}
															]
														},
														{
															"nativeSrc": "244:13:6",
															"nodeType": "YulAssignment",
															"src": "244:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "252:5:6",
																"nodeType": "YulIdentifier",
																"src": "252:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "244:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "244:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "302:213:6",
																"nodeType": "YulBlock",
																"src": "302:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "344:22:6",
																			"nodeType": "YulBlock",
																			"src": "344:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "346:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "346:16:6"
																						},
																						"nativeSrc": "346:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "346:18:6"
																					},
																					"nativeSrc": "346:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "346:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "322:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "322:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "332:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "332:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "337:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "337:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "328:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:3:6"
																					},
																					"nativeSrc": "328:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "328:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "319:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "319:2:6"
																			},
																			"nativeSrc": "319:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "319:24:6"
																		},
																		"nativeSrc": "316:50:6",
																		"nodeType": "YulIf",
																		"src": "316:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "399:29:6",
																			"nodeType": "YulBlock",
																			"src": "399:29:6",
																			"statements": [
																				{
																					"nativeSrc": "401:25:6",
																					"nodeType": "YulAssignment",
																					"src": "401:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "414:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "414:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "421:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "421:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "410:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "410:3:6"
																						},
																						"nativeSrc": "410:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "410:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "401:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "401:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "386:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "386:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "396:1:6",
																					"nodeType": "YulLiteral",
																					"src": "396:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "382:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "382:3:6"
																			},
																			"nativeSrc": "382:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "382:16:6"
																		},
																		"nativeSrc": "379:49:6",
																		"nodeType": "YulIf",
																		"src": "379:49:6"
																	},
																	{
																		"nativeSrc": "441:23:6",
																		"nodeType": "YulAssignment",
																		"src": "441:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "453:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "453:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "459:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "459:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "449:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "449:3:6"
																			},
																			"nativeSrc": "449:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "449:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "441:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "441:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "477:28:6",
																		"nodeType": "YulAssignment",
																		"src": "477:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "493:1:6",
																					"nodeType": "YulLiteral",
																					"src": "493:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "496:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "496:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "489:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "489:3:6"
																			},
																			"nativeSrc": "489:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "489:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "477:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "477:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "277:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "277:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "287:1:6",
																		"nodeType": "YulLiteral",
																		"src": "287:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "274:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "274:2:6"
																},
																"nativeSrc": "274:15:6",
																"nodeType": "YulFunctionCall",
																"src": "274:15:6"
															},
															"nativeSrc": "266:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "290:3:6",
																"nodeType": "YulBlock",
																"src": "290:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "270:3:6",
																"nodeType": "YulBlock",
																"src": "270:3:6",
																"statements": []
															},
															"src": "266:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "146:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "174:5:6",
														"nodeType": "YulTypedName",
														"src": "174:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "181:8:6",
														"nodeType": "YulTypedName",
														"src": "181:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "191:3:6",
														"nodeType": "YulTypedName",
														"src": "191:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "199:5:6",
														"nodeType": "YulTypedName",
														"src": "199:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "206:4:6",
														"nodeType": "YulTypedName",
														"src": "206:4:6",
														"type": ""
													}
												],
												"src": "146:375:6"
											},
											{
												"body": {
													"nativeSrc": "585:843:6",
													"nodeType": "YulBlock",
													"src": "585:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "623:52:6",
																"nodeType": "YulBlock",
																"src": "623:52:6",
																"statements": [
																	{
																		"nativeSrc": "637:10:6",
																		"nodeType": "YulAssignment",
																		"src": "637:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "646:1:6",
																			"nodeType": "YulLiteral",
																			"src": "646:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "637:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "637:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "660:5:6",
																		"nodeType": "YulLeave",
																		"src": "660:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "605:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "605:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:6"
																},
																"nativeSrc": "598:16:6",
																"nodeType": "YulFunctionCall",
																"src": "598:16:6"
															},
															"nativeSrc": "595:80:6",
															"nodeType": "YulIf",
															"src": "595:80:6"
														},
														{
															"body": {
																"nativeSrc": "708:52:6",
																"nodeType": "YulBlock",
																"src": "708:52:6",
																"statements": [
																	{
																		"nativeSrc": "722:10:6",
																		"nodeType": "YulAssignment",
																		"src": "722:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "731:1:6",
																			"nodeType": "YulLiteral",
																			"src": "731:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "722:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "722:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "745:5:6",
																		"nodeType": "YulLeave",
																		"src": "745:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "694:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "694:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:6"
																},
																"nativeSrc": "687:12:6",
																"nodeType": "YulFunctionCall",
																"src": "687:12:6"
															},
															"nativeSrc": "684:76:6",
															"nodeType": "YulIf",
															"src": "684:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "796:52:6",
																		"nodeType": "YulBlock",
																		"src": "796:52:6",
																		"statements": [
																			{
																				"nativeSrc": "810:10:6",
																				"nodeType": "YulAssignment",
																				"src": "810:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "819:1:6",
																					"nodeType": "YulLiteral",
																					"src": "819:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "810:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "810:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "833:5:6",
																				"nodeType": "YulLeave",
																				"src": "833:5:6"
																			}
																		]
																	},
																	"nativeSrc": "789:59:6",
																	"nodeType": "YulCase",
																	"src": "789:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "794:1:6",
																		"nodeType": "YulLiteral",
																		"src": "794:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "864:167:6",
																		"nodeType": "YulBlock",
																		"src": "864:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "899:22:6",
																					"nodeType": "YulBlock",
																					"src": "899:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "901:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "901:16:6"
																								},
																								"nativeSrc": "901:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "901:18:6"
																							},
																							"nativeSrc": "901:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "901:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "884:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "884:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "894:3:6",
																							"nodeType": "YulLiteral",
																							"src": "894:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "881:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:6"
																					},
																					"nativeSrc": "881:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "881:17:6"
																				},
																				"nativeSrc": "878:43:6",
																				"nodeType": "YulIf",
																				"src": "878:43:6"
																			},
																			{
																				"nativeSrc": "934:25:6",
																				"nodeType": "YulAssignment",
																				"src": "934:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "947:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "947:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "957:1:6",
																							"nodeType": "YulLiteral",
																							"src": "957:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "943:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "943:3:6"
																					},
																					"nativeSrc": "943:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "943:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "934:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "934:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "972:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "972:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "982:1:6",
																					"nodeType": "YulLiteral",
																					"src": "982:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "976:2:6",
																						"nodeType": "YulTypedName",
																						"src": "976:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "996:7:6",
																				"nodeType": "YulAssignment",
																				"src": "996:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1002:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1002:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "996:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "996:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1016:5:6",
																				"nodeType": "YulLeave",
																				"src": "1016:5:6"
																			}
																		]
																	},
																	"nativeSrc": "857:174:6",
																	"nodeType": "YulCase",
																	"src": "857:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "862:1:6",
																		"nodeType": "YulLiteral",
																		"src": "862:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "776:4:6",
																"nodeType": "YulIdentifier",
																"src": "776:4:6"
															},
															"nativeSrc": "769:262:6",
															"nodeType": "YulSwitch",
															"src": "769:262:6"
														},
														{
															"body": {
																"nativeSrc": "1129:114:6",
																"nodeType": "YulBlock",
																"src": "1129:114:6",
																"statements": [
																	{
																		"nativeSrc": "1143:28:6",
																		"nodeType": "YulAssignment",
																		"src": "1143:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1156:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1156:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1162:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "1162:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1152:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1152:3:6"
																			},
																			"nativeSrc": "1152:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1143:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1143:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1184:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1184:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1194:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1194:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1188:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1188:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1208:7:6",
																		"nodeType": "YulAssignment",
																		"src": "1208:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1214:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1214:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "1208:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1208:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1228:5:6",
																		"nodeType": "YulLeave",
																		"src": "1228:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1053:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1053:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1059:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1059:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1050:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1050:2:6"
																				},
																				"nativeSrc": "1050:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1050:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1067:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1067:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1077:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1077:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1064:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1064:2:6"
																				},
																				"nativeSrc": "1064:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1064:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:6"
																		},
																		"nativeSrc": "1046:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1090:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1090:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1096:3:6",
																						"nodeType": "YulLiteral",
																						"src": "1096:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1087:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:6"
																				},
																				"nativeSrc": "1087:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1087:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1105:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1105:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1115:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1115:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1102:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1102:2:6"
																				},
																				"nativeSrc": "1102:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1102:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1083:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:6"
																		},
																		"nativeSrc": "1083:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1083:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1043:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1043:2:6"
																},
																"nativeSrc": "1043:77:6",
																"nodeType": "YulFunctionCall",
																"src": "1043:77:6"
															},
															"nativeSrc": "1040:203:6",
															"nodeType": "YulIf",
															"src": "1040:203:6"
														},
														{
															"nativeSrc": "1252:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1252:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1294:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1294:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "1300:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1300:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1314:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1314:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:6"
																		},
																		"nativeSrc": "1310:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1310:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "1275:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1275:18:6"
																},
																"nativeSrc": "1275:42:6",
																"nodeType": "YulFunctionCall",
																"src": "1275:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "1256:7:6",
																	"nodeType": "YulTypedName",
																	"src": "1256:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "1265:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1265:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1362:22:6",
																"nodeType": "YulBlock",
																"src": "1362:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1364:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:16:6"
																			},
																			"nativeSrc": "1364:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:18:6"
																		},
																		"nativeSrc": "1364:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "1332:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1332:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1349:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1349:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1345:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1345:3:6"
																				},
																				"nativeSrc": "1345:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1345:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "1353:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "1341:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:6"
																		},
																		"nativeSrc": "1341:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1341:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:6"
																},
																"nativeSrc": "1329:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:6"
															},
															"nativeSrc": "1326:58:6",
															"nodeType": "YulIf",
															"src": "1326:58:6"
														},
														{
															"nativeSrc": "1393:29:6",
															"nodeType": "YulAssignment",
															"src": "1393:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "1406:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1406:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "1415:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1402:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1402:3:6"
																},
																"nativeSrc": "1402:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1402:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1393:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1393:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "526:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "556:4:6",
														"nodeType": "YulTypedName",
														"src": "556:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "562:8:6",
														"nodeType": "YulTypedName",
														"src": "562:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "575:5:6",
														"nodeType": "YulTypedName",
														"src": "575:5:6",
														"type": ""
													}
												],
												"src": "526:902:6"
											},
											{
												"body": {
													"nativeSrc": "1503:61:6",
													"nodeType": "YulBlock",
													"src": "1503:61:6",
													"statements": [
														{
															"nativeSrc": "1513:45:6",
															"nodeType": "YulAssignment",
															"src": "1513:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1543:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1543:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "1549:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1549:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "1522:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "1522:20:6"
																},
																"nativeSrc": "1522:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1522:36:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1513:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1513:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "1433:131:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1474:4:6",
														"nodeType": "YulTypedName",
														"src": "1474:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1480:8:6",
														"nodeType": "YulTypedName",
														"src": "1480:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1493:5:6",
														"nodeType": "YulTypedName",
														"src": "1493:5:6",
														"type": ""
													}
												],
												"src": "1433:131:6"
											},
											{
												"body": {
													"nativeSrc": "1621:116:6",
													"nodeType": "YulBlock",
													"src": "1621:116:6",
													"statements": [
														{
															"nativeSrc": "1631:20:6",
															"nodeType": "YulAssignment",
															"src": "1631:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1646:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1646:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1649:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:6"
																},
																"nativeSrc": "1642:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1642:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1631:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1631:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1709:22:6",
																"nodeType": "YulBlock",
																"src": "1709:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1711:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1711:16:6"
																			},
																			"nativeSrc": "1711:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:18:6"
																		},
																		"nativeSrc": "1711:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1680:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1680:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1673:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1673:6:6"
																				},
																				"nativeSrc": "1673:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1673:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1687:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1687:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1694:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "1694:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1703:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "1703:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1690:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1690:3:6"
																						},
																						"nativeSrc": "1690:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1690:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1684:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:2:6"
																				},
																				"nativeSrc": "1684:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1670:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1670:2:6"
																		},
																		"nativeSrc": "1670:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1670:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1663:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:6"
																},
																"nativeSrc": "1663:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1663:45:6"
															},
															"nativeSrc": "1660:71:6",
															"nodeType": "YulIf",
															"src": "1660:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1569:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1600:1:6",
														"nodeType": "YulTypedName",
														"src": "1600:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1603:1:6",
														"nodeType": "YulTypedName",
														"src": "1603:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1609:7:6",
														"nodeType": "YulTypedName",
														"src": "1609:7:6",
														"type": ""
													}
												],
												"src": "1569:168:6"
											},
											{
												"body": {
													"nativeSrc": "1774:95:6",
													"nodeType": "YulBlock",
													"src": "1774:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1798:3:6",
																				"nodeType": "YulLiteral",
																				"src": "1798:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1803:10:6",
																				"nodeType": "YulLiteral",
																				"src": "1803:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1794:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:6"
																		},
																		"nativeSrc": "1794:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:6"
																},
																"nativeSrc": "1784:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1784:31:6"
															},
															"nativeSrc": "1784:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1784:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1831:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1834:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1834:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:6"
																},
																"nativeSrc": "1824:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1824:15:6"
															},
															"nativeSrc": "1824:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1824:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1855:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1858:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:6"
																},
																"nativeSrc": "1848:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1848:15:6"
															},
															"nativeSrc": "1848:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1848:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1742:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1742:127:6"
											},
											{
												"body": {
													"nativeSrc": "1929:325:6",
													"nodeType": "YulBlock",
													"src": "1929:325:6",
													"statements": [
														{
															"nativeSrc": "1939:22:6",
															"nodeType": "YulAssignment",
															"src": "1939:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1953:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1953:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1956:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1956:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:6"
																},
																"nativeSrc": "1949:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1949:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1939:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:6"
																}
															]
														},
														{
															"nativeSrc": "1970:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1970:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2000:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2000:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2006:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2006:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:6"
																},
																"nativeSrc": "1996:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1996:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1974:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1974:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2047:31:6",
																"nodeType": "YulBlock",
																"src": "2047:31:6",
																"statements": [
																	{
																		"nativeSrc": "2049:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2049:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2063:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2063:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2071:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2071:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2059:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2059:3:6"
																			},
																			"nativeSrc": "2059:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2059:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2049:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2027:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2027:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:6"
																},
																"nativeSrc": "2020:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2020:26:6"
															},
															"nativeSrc": "2017:61:6",
															"nodeType": "YulIf",
															"src": "2017:61:6"
														},
														{
															"body": {
																"nativeSrc": "2137:111:6",
																"nodeType": "YulBlock",
																"src": "2137:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2158:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2165:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2165:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2170:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2170:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2161:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2161:3:6"
																					},
																					"nativeSrc": "2161:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2161:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2151:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:6"
																			},
																			"nativeSrc": "2151:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2151:31:6"
																		},
																		"nativeSrc": "2151:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2205:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2205:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2195:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2195:6:6"
																			},
																			"nativeSrc": "2195:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2195:15:6"
																		},
																		"nativeSrc": "2195:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2195:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2230:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2223:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:6"
																			},
																			"nativeSrc": "2223:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:15:6"
																		},
																		"nativeSrc": "2223:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2093:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2093:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2116:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2116:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2124:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2124:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2113:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2113:2:6"
																		},
																		"nativeSrc": "2113:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2113:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2090:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2090:2:6"
																},
																"nativeSrc": "2090:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2090:38:6"
															},
															"nativeSrc": "2087:161:6",
															"nodeType": "YulIf",
															"src": "2087:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1874:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1909:4:6",
														"nodeType": "YulTypedName",
														"src": "1909:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1918:6:6",
														"nodeType": "YulTypedName",
														"src": "1918:6:6",
														"type": ""
													}
												],
												"src": "1874:380:6"
											},
											{
												"body": {
													"nativeSrc": "2315:65:6",
													"nodeType": "YulBlock",
													"src": "2315:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2335:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2335:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:6"
																},
																"nativeSrc": "2325:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2325:14:6"
															},
															"nativeSrc": "2325:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2325:14:6"
														},
														{
															"nativeSrc": "2348:26:6",
															"nodeType": "YulAssignment",
															"src": "2348:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2366:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2366:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2369:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2356:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2356:9:6"
																},
																"nativeSrc": "2356:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2356:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2348:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2348:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2259:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2298:3:6",
														"nodeType": "YulTypedName",
														"src": "2298:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2306:4:6",
														"nodeType": "YulTypedName",
														"src": "2306:4:6",
														"type": ""
													}
												],
												"src": "2259:121:6"
											},
											{
												"body": {
													"nativeSrc": "2466:437:6",
													"nodeType": "YulBlock",
													"src": "2466:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2499:398:6",
																"nodeType": "YulBlock",
																"src": "2499:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2520:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2520:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2523:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2523:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2513:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2513:6:6"
																			},
																			"nativeSrc": "2513:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2513:16:6"
																		},
																		"nativeSrc": "2513:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2513:16:6"
																	},
																	{
																		"nativeSrc": "2542:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2542:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2564:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2564:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2567:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2567:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2554:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:6"
																			},
																			"nativeSrc": "2554:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2554:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2546:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2546:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2585:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2585:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2608:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2608:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2618:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2618:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2625:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2625:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2637:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2637:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2621:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2621:3:6"
																							},
																							"nativeSrc": "2621:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2621:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2614:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2614:3:6"
																					},
																					"nativeSrc": "2614:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2614:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2604:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2604:3:6"
																			},
																			"nativeSrc": "2604:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2604:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2589:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2589:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2679:23:6",
																			"nodeType": "YulBlock",
																			"src": "2679:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2681:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2681:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2696:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2696:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2681:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2681:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2661:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2661:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2673:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2673:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2658:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2658:2:6"
																			},
																			"nativeSrc": "2658:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2658:20:6"
																		},
																		"nativeSrc": "2655:47:6",
																		"nodeType": "YulIf",
																		"src": "2655:47:6"
																	},
																	{
																		"nativeSrc": "2715:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2715:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2729:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2739:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2739:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2746:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2746:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2751:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2751:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2742:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2742:3:6"
																							},
																							"nativeSrc": "2742:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2742:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2735:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2735:3:6"
																					},
																					"nativeSrc": "2735:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2735:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2725:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2725:3:6"
																			},
																			"nativeSrc": "2725:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2725:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2719:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2719:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2769:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2769:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2782:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2782:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2773:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2773:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2867:20:6",
																			"nodeType": "YulBlock",
																			"src": "2867:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2876:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2876:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2883:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2883:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2869:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2869:6:6"
																						},
																						"nativeSrc": "2869:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2869:16:6"
																					},
																					"nativeSrc": "2869:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2869:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2817:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2817:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2824:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2824:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2814:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2814:2:6"
																			},
																			"nativeSrc": "2814:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:13:6"
																		},
																		"nativeSrc": "2806:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2828:26:6",
																			"nodeType": "YulBlock",
																			"src": "2828:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2830:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2830:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2843:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2843:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2850:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2850:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2839:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2839:3:6"
																						},
																						"nativeSrc": "2839:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2839:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2830:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2830:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2810:3:6",
																			"nodeType": "YulBlock",
																			"src": "2810:3:6",
																			"statements": []
																		},
																		"src": "2806:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2482:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2482:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2479:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2479:2:6"
																},
																"nativeSrc": "2479:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2479:11:6"
															},
															"nativeSrc": "2476:421:6",
															"nodeType": "YulIf",
															"src": "2476:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2385:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2438:5:6",
														"nodeType": "YulTypedName",
														"src": "2438:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2445:3:6",
														"nodeType": "YulTypedName",
														"src": "2445:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2450:10:6",
														"nodeType": "YulTypedName",
														"src": "2450:10:6",
														"type": ""
													}
												],
												"src": "2385:518:6"
											},
											{
												"body": {
													"nativeSrc": "2993:81:6",
													"nodeType": "YulBlock",
													"src": "2993:81:6",
													"statements": [
														{
															"nativeSrc": "3003:65:6",
															"nodeType": "YulAssignment",
															"src": "3003:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3018:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3018:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3036:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3036:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3039:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3039:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3032:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3032:3:6"
																								},
																								"nativeSrc": "3032:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3032:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3049:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3049:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3045:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3045:3:6"
																								},
																								"nativeSrc": "3045:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3045:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3028:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3028:3:6"
																						},
																						"nativeSrc": "3028:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3028:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3024:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3024:3:6"
																				},
																				"nativeSrc": "3024:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3024:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3014:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:6"
																		},
																		"nativeSrc": "3014:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3014:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3060:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3060:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3063:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3063:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3056:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3056:3:6"
																		},
																		"nativeSrc": "3056:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3056:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3011:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:6"
																},
																"nativeSrc": "3011:57:6",
																"nodeType": "YulFunctionCall",
																"src": "3011:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3003:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3003:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2908:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2970:4:6",
														"nodeType": "YulTypedName",
														"src": "2970:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2976:3:6",
														"nodeType": "YulTypedName",
														"src": "2976:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2984:4:6",
														"nodeType": "YulTypedName",
														"src": "2984:4:6",
														"type": ""
													}
												],
												"src": "2908:166:6"
											},
											{
												"body": {
													"nativeSrc": "3175:1203:6",
													"nodeType": "YulBlock",
													"src": "3175:1203:6",
													"statements": [
														{
															"nativeSrc": "3185:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3185:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3205:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3205:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3199:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3199:5:6"
																},
																"nativeSrc": "3199:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3199:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3189:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3189:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3252:22:6",
																"nodeType": "YulBlock",
																"src": "3252:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3254:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3254:16:6"
																			},
																			"nativeSrc": "3254:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3254:18:6"
																		},
																		"nativeSrc": "3254:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3224:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3240:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3240:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3244:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3244:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3236:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3236:3:6"
																				},
																				"nativeSrc": "3236:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3236:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3248:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3248:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:6"
																		},
																		"nativeSrc": "3232:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3221:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3221:2:6"
																},
																"nativeSrc": "3221:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3221:30:6"
															},
															"nativeSrc": "3218:56:6",
															"nodeType": "YulIf",
															"src": "3218:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3327:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3327:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3365:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3365:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3359:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3359:5:6"
																				},
																				"nativeSrc": "3359:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3359:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3333:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3333:25:6"
																		},
																		"nativeSrc": "3333:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3333:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3373:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3283:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3283:43:6"
																},
																"nativeSrc": "3283:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3283:97:6"
															},
															"nativeSrc": "3283:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "3283:97:6"
														},
														{
															"nativeSrc": "3389:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3389:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3406:1:6",
																"nodeType": "YulLiteral",
																"src": "3406:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3393:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3393:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3416:17:6",
															"nodeType": "YulAssignment",
															"src": "3416:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3429:4:6",
																"nodeType": "YulLiteral",
																"src": "3429:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3416:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3416:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3479:642:6",
																		"nodeType": "YulBlock",
																		"src": "3479:642:6",
																		"statements": [
																			{
																				"nativeSrc": "3493:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3493:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3512:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3512:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3524:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3524:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3520:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3520:3:6"
																							},
																							"nativeSrc": "3520:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3520:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3508:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3508:3:6"
																					},
																					"nativeSrc": "3508:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3508:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3497:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3497:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3541:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3541:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3585:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3585:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3555:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3555:29:6"
																					},
																					"nativeSrc": "3555:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3555:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3545:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3545:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3603:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3603:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3612:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3612:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3607:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3607:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3683:165:6",
																					"nodeType": "YulBlock",
																					"src": "3683:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3708:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3708:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3726:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3726:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3731:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3731:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3722:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3722:3:6"
																												},
																												"nativeSrc": "3722:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3722:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3716:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3716:5:6"
																										},
																										"nativeSrc": "3716:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3716:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3701:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3701:6:6"
																								},
																								"nativeSrc": "3701:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3701:42:6"
																							},
																							"nativeSrc": "3701:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3701:42:6"
																						},
																						{
																							"nativeSrc": "3760:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3760:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3774:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3774:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3782:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3782:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3770:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3770:3:6"
																								},
																								"nativeSrc": "3770:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3770:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3760:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3760:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3801:33:6",
																							"nodeType": "YulAssignment",
																							"src": "3801:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3818:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3818:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3829:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3829:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3814:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3814:3:6"
																								},
																								"nativeSrc": "3814:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3814:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3801:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3801:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3637:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3637:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3640:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3640:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3634:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3634:2:6"
																					},
																					"nativeSrc": "3634:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3634:14:6"
																				},
																				"nativeSrc": "3626:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3649:21:6",
																					"nodeType": "YulBlock",
																					"src": "3649:21:6",
																					"statements": [
																						{
																							"nativeSrc": "3651:17:6",
																							"nodeType": "YulAssignment",
																							"src": "3651:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3660:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3660:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3663:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3663:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3656:3:6"
																								},
																								"nativeSrc": "3656:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3656:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3651:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3651:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3630:3:6",
																					"nodeType": "YulBlock",
																					"src": "3630:3:6",
																					"statements": []
																				},
																				"src": "3626:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3896:166:6",
																					"nodeType": "YulBlock",
																					"src": "3896:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3914:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3914:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3941:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3941:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3946:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3946:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3937:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3937:3:6"
																										},
																										"nativeSrc": "3937:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3937:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3931:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3931:5:6"
																								},
																								"nativeSrc": "3931:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3931:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3918:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3918:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3981:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3981:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3993:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3993:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4020:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "4020:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4023:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "4023:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4016:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "4016:3:6"
																																		},
																																		"nativeSrc": "4016:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4016:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4032:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "4032:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4012:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "4012:3:6"
																																},
																																"nativeSrc": "4012:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "4012:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4042:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "4042:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4038:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "4038:3:6"
																																},
																																"nativeSrc": "4038:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "4038:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4008:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "4008:3:6"
																														},
																														"nativeSrc": "4008:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "4008:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4004:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4004:3:6"
																												},
																												"nativeSrc": "4004:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4004:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3989:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3989:3:6"
																										},
																										"nativeSrc": "3989:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3989:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3974:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3974:6:6"
																								},
																								"nativeSrc": "3974:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3974:74:6"
																							},
																							"nativeSrc": "3974:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3974:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3867:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3867:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3876:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3876:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3864:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3864:2:6"
																					},
																					"nativeSrc": "3864:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3864:19:6"
																				},
																				"nativeSrc": "3861:201:6",
																				"nodeType": "YulIf",
																				"src": "3861:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4082:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4082:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4096:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4096:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4099:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4099:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4092:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4092:3:6"
																									},
																									"nativeSrc": "4092:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4092:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4108:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4108:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4088:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4088:3:6"
																							},
																							"nativeSrc": "4088:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4088:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4075:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4075:6:6"
																					},
																					"nativeSrc": "4075:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4075:36:6"
																				},
																				"nativeSrc": "4075:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4075:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3472:649:6",
																	"nodeType": "YulCase",
																	"src": "3472:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3477:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4138:234:6",
																		"nodeType": "YulBlock",
																		"src": "4138:234:6",
																		"statements": [
																			{
																				"nativeSrc": "4152:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4152:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4165:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4156:5:6",
																						"nodeType": "YulTypedName",
																						"src": "4156:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4201:67:6",
																					"nodeType": "YulBlock",
																					"src": "4201:67:6",
																					"statements": [
																						{
																							"nativeSrc": "4219:35:6",
																							"nodeType": "YulAssignment",
																							"src": "4219:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4238:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4238:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4243:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4243:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4234:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4234:3:6"
																										},
																										"nativeSrc": "4234:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4234:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4228:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4228:5:6"
																								},
																								"nativeSrc": "4228:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4228:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4219:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4219:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4182:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4182:6:6"
																				},
																				"nativeSrc": "4179:89:6",
																				"nodeType": "YulIf",
																				"src": "4179:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4288:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4288:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4347:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4347:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4354:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4354:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4294:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4294:52:6"
																							},
																							"nativeSrc": "4294:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4294:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4281:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4281:6:6"
																					},
																					"nativeSrc": "4281:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4281:81:6"
																				},
																				"nativeSrc": "4281:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4281:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4130:242:6",
																	"nodeType": "YulCase",
																	"src": "4130:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3452:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3460:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3449:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3449:2:6"
																},
																"nativeSrc": "3449:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3449:14:6"
															},
															"nativeSrc": "3442:930:6",
															"nodeType": "YulSwitch",
															"src": "3442:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3079:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3160:4:6",
														"nodeType": "YulTypedName",
														"src": "3160:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3166:3:6",
														"nodeType": "YulTypedName",
														"src": "3166:3:6",
														"type": ""
													}
												],
												"src": "3079:1299:6"
											},
											{
												"body": {
													"nativeSrc": "4421:171:6",
													"nodeType": "YulBlock",
													"src": "4421:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4452:111:6",
																"nodeType": "YulBlock",
																"src": "4452:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4473:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4473:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4480:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4480:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4485:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4485:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4476:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4476:3:6"
																					},
																					"nativeSrc": "4476:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4476:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4466:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4466:6:6"
																			},
																			"nativeSrc": "4466:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4466:31:6"
																		},
																		"nativeSrc": "4466:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4517:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4520:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4520:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4510:6:6"
																			},
																			"nativeSrc": "4510:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4510:15:6"
																		},
																		"nativeSrc": "4510:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4545:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4545:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4548:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4538:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4538:6:6"
																			},
																			"nativeSrc": "4538:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4538:15:6"
																		},
																		"nativeSrc": "4538:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4441:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4441:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:6"
																},
																"nativeSrc": "4434:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4434:9:6"
															},
															"nativeSrc": "4431:132:6",
															"nodeType": "YulIf",
															"src": "4431:132:6"
														},
														{
															"nativeSrc": "4572:14:6",
															"nodeType": "YulAssignment",
															"src": "4572:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4584:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "4577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:6"
																},
																"nativeSrc": "4577:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4577:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4572:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4572:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "4383:209:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4406:1:6",
														"nodeType": "YulTypedName",
														"src": "4406:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4409:1:6",
														"nodeType": "YulTypedName",
														"src": "4409:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4415:1:6",
														"nodeType": "YulTypedName",
														"src": "4415:1:6",
														"type": ""
													}
												],
												"src": "4383:209:6"
											},
											{
												"body": {
													"nativeSrc": "4646:79:6",
													"nodeType": "YulBlock",
													"src": "4646:79:6",
													"statements": [
														{
															"nativeSrc": "4656:17:6",
															"nodeType": "YulAssignment",
															"src": "4656:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4668:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4668:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4671:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:6"
																},
																"nativeSrc": "4664:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4664:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4656:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4656:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4697:22:6",
																"nodeType": "YulBlock",
																"src": "4697:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4699:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4699:16:6"
																			},
																			"nativeSrc": "4699:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4699:18:6"
																		},
																		"nativeSrc": "4699:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4688:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4688:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4694:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4694:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4685:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:6"
																},
																"nativeSrc": "4685:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4685:11:6"
															},
															"nativeSrc": "4682:37:6",
															"nodeType": "YulIf",
															"src": "4682:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4597:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4628:1:6",
														"nodeType": "YulTypedName",
														"src": "4628:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4631:1:6",
														"nodeType": "YulTypedName",
														"src": "4631:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4637:4:6",
														"nodeType": "YulTypedName",
														"src": "4637:4:6",
														"type": ""
													}
												],
												"src": "4597:128:6"
											},
											{
												"body": {
													"nativeSrc": "4831:102:6",
													"nodeType": "YulBlock",
													"src": "4831:102:6",
													"statements": [
														{
															"nativeSrc": "4841:26:6",
															"nodeType": "YulAssignment",
															"src": "4841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4849:3:6"
																},
																"nativeSrc": "4849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4883:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4883:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4898:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4914:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4914:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4919:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4919:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4910:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4910:3:6"
																						},
																						"nativeSrc": "4910:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4910:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4923:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4923:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4906:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:6"
																				},
																				"nativeSrc": "4906:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4906:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:6"
																		},
																		"nativeSrc": "4894:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4876:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:6"
																},
																"nativeSrc": "4876:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4876:51:6"
															},
															"nativeSrc": "4876:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4876:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4730:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4800:9:6",
														"nodeType": "YulTypedName",
														"src": "4800:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4811:6:6",
														"nodeType": "YulTypedName",
														"src": "4811:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4822:4:6",
														"nodeType": "YulTypedName",
														"src": "4822:4:6",
														"type": ""
													}
												],
												"src": "4730:203:6"
											},
											{
												"body": {
													"nativeSrc": "4986:77:6",
													"nodeType": "YulBlock",
													"src": "4986:77:6",
													"statements": [
														{
															"nativeSrc": "4996:16:6",
															"nodeType": "YulAssignment",
															"src": "4996:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5007:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5007:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5010:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:6"
																},
																"nativeSrc": "5003:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5003:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5035:22:6",
																"nodeType": "YulBlock",
																"src": "5035:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5037:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5037:16:6"
																			},
																			"nativeSrc": "5037:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5037:18:6"
																		},
																		"nativeSrc": "5037:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5027:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5030:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5030:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5024:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5024:2:6"
																},
																"nativeSrc": "5024:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5024:10:6"
															},
															"nativeSrc": "5021:36:6",
															"nodeType": "YulIf",
															"src": "5021:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4938:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4969:1:6",
														"nodeType": "YulTypedName",
														"src": "4969:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4972:1:6",
														"nodeType": "YulTypedName",
														"src": "4972:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4978:3:6",
														"nodeType": "YulTypedName",
														"src": "4978:3:6",
														"type": ""
													}
												],
												"src": "4938:125:6"
											},
											{
												"body": {
													"nativeSrc": "5225:188:6",
													"nodeType": "YulBlock",
													"src": "5225:188:6",
													"statements": [
														{
															"nativeSrc": "5235:26:6",
															"nodeType": "YulAssignment",
															"src": "5235:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5247:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5247:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5258:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5243:3:6"
																},
																"nativeSrc": "5243:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5243:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5235:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5235:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5292:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5292:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5308:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5308:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5313:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5313:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5304:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5304:3:6"
																						},
																						"nativeSrc": "5304:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5304:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5317:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5317:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5300:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5300:3:6"
																				},
																				"nativeSrc": "5300:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5300:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nativeSrc": "5288:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:6"
																},
																"nativeSrc": "5270:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5270:51:6"
															},
															"nativeSrc": "5270:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5270:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5341:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5352:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:6"
																		},
																		"nativeSrc": "5337:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5357:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5357:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:6"
																},
																"nativeSrc": "5330:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5330:34:6"
															},
															"nativeSrc": "5330:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5330:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5380:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:6"
																		},
																		"nativeSrc": "5380:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5400:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5400:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5373:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:6"
																},
																"nativeSrc": "5373:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5373:34:6"
															},
															"nativeSrc": "5373:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5373:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5068:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5178:9:6",
														"nodeType": "YulTypedName",
														"src": "5178:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5189:6:6",
														"nodeType": "YulTypedName",
														"src": "5189:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5197:6:6",
														"nodeType": "YulTypedName",
														"src": "5197:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5205:6:6",
														"nodeType": "YulTypedName",
														"src": "5205:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5216:4:6",
														"nodeType": "YulTypedName",
														"src": "5216:4:6",
														"type": ""
													}
												],
												"src": "5068:345:6"
											},
											{
												"body": {
													"nativeSrc": "5519:76:6",
													"nodeType": "YulBlock",
													"src": "5519:76:6",
													"statements": [
														{
															"nativeSrc": "5529:26:6",
															"nodeType": "YulAssignment",
															"src": "5529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:3:6"
																},
																"nativeSrc": "5537:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5529:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5582:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:6"
																},
																"nativeSrc": "5564:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5564:25:6"
															},
															"nativeSrc": "5564:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5564:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5418:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5488:9:6",
														"nodeType": "YulTypedName",
														"src": "5488:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5499:6:6",
														"nodeType": "YulTypedName",
														"src": "5499:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5510:4:6",
														"nodeType": "YulTypedName",
														"src": "5510:4:6",
														"type": ""
													}
												],
												"src": "5418:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a80546101003302610100600160a81b03198216811783555f600d556100359260ff91821691909216179061040e565b6100429062989680610420565b601455348015610050575f5ffd5b506040518060400160405280600d81526020016c21aca122a921a0aa29a1a7a4a760991b81525060405180604001604052806005815260200164435942434360d81b81525081600390816100a491906104cf565b5060046100b182826104cf565b5050600a805460ff1916601290811782556100cd92509061040e565b6100db90633b9aca00610420565b600b8190556100eb905f19610589565b6100f6905f196105a8565b600c9081556002600e819055600f8190556010819055601155600a8054601280546001600160a01b0319166001600160a01b0361010093849004811691821783555f918252600760209081526040808420805460ff1990811660019081179092559554841685528185208054871682179055601354841685528185208054871682179055308552818520805490961617909455955494549390930490921682526005909352919091208190556101ad9033906101b2565b6105ce565b6001600160a01b0382166101e05760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6101eb5f83836101ef565b5050565b6001600160a01b038316610219578060025f82825461020e91906105bb565b909155506102899050565b6001600160a01b0383165f908152602081905260409020548181101561026b5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101d7565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166102a5576002805482900390556102c3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161030891815260200190565b60405180910390a3505050565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156103645780850481111561034857610348610315565b600184161561035657908102905b60019390931c92800261032d565b935093915050565b5f8261037a57506001610408565b8161038657505f610408565b816001811461039c57600281146103a6576103c2565b6001915050610408565b60ff8411156103b7576103b7610315565b50506001821b610408565b5060208310610133831016604e8410600b84101617156103e5575081810a610408565b6103f15f198484610329565b805f190482111561040457610404610315565b0290505b92915050565b5f610419838361036c565b9392505050565b808202811582820484141761040857610408610315565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061045f57607f821691505b60208210810361047d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156104ca57805f5260205f20601f840160051c810160208510156104a85750805b601f840160051c820191505b818110156104c7575f81556001016104b4565b50505b505050565b81516001600160401b038111156104e8576104e8610437565b6104fc816104f6845461044b565b84610483565b6020601f82116001811461052e575f83156105175750848201515b5f19600385901b1c1916600184901b1784556104c7565b5f84815260208120601f198516915b8281101561055d578785015182556020948501946001909201910161053d565b508482101561057a57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f826105a357634e487b7160e01b5f52601260045260245ffd5b500690565b8181038181111561040857610408610315565b8082018082111561040857610408610315565b6119d3806105db5f395ff3fe608060405260043610610164575f3560e01c8063706407fd116100cd578063a9059cbb11610087578063dd62ed3e11610062578063dd62ed3e1461043a578063ea2f0b371461047e578063f66608fe1461049d578063fdeb889f146104b1575f5ffd5b8063a9059cbb146103c5578063c4863770146103e4578063cba0e99614610403575f5ffd5b8063706407fd1461032057806370a082311461033f578063838fcc901461035e57806383ad79941461037b5780638da5cb5b1461038f57806395d89b41146103b1575f5ffd5b8063313ce5671161011e578063313ce567146102575780633203550414610278578063437823ec1461028c5780634549b039146102ab5780635342acb4146102ca5780636049876e14610301575f5ffd5b8063053ab1821461016f57806306fdde0314610190578063095ea7b3146101ba57806318160ddd146101e95780631cf8fef51461020757806323b872dd14610238575f5ffd5b3661016b57005b5f5ffd5b34801561017a575f5ffd5b5061018e610189366004611742565b6104d0565b005b34801561019b575f5ffd5b506101a46105bb565b6040516101b19190611759565b60405180910390f35b3480156101c5575f5ffd5b506101d96101d43660046117a9565b61064b565b60405190151581526020016101b1565b3480156101f4575f5ffd5b50600b545b6040519081526020016101b1565b348015610212575f5ffd5b506013546001600160a01b03165b6040516001600160a01b0390911681526020016101b1565b348015610243575f5ffd5b506101d96102523660046117d1565b610664565b348015610262575f5ffd5b50600a5460405160ff90911681526020016101b1565b348015610283575f5ffd5b50600d546101f9565b348015610297575f5ffd5b5061018e6102a636600461180b565b610687565b3480156102b6575f5ffd5b506101f96102c5366004611824565b6106ce565b3480156102d5575f5ffd5b506101d96102e436600461180b565b6001600160a01b03165f9081526007602052604090205460ff1690565b34801561030c575f5ffd5b5061018e61031b36600461180b565b610754565b34801561032b575f5ffd5b5061018e61033a36600461180b565b610899565b34801561034a575f5ffd5b506101f961035936600461180b565b610900565b348015610369575f5ffd5b506012546001600160a01b0316610220565b348015610386575f5ffd5b50600e546101f9565b34801561039a575f5ffd5b50600a5461010090046001600160a01b0316610220565b3480156103bc575f5ffd5b506101a461095c565b3480156103d0575f5ffd5b506101d96103df3660046117a9565b61096b565b3480156103ef575f5ffd5b5061018e6103fe36600461180b565b610978565b34801561040e575f5ffd5b506101d961041d36600461180b565b6001600160a01b03165f9081526008602052604090205460ff1690565b348015610445575f5ffd5b506101f9610454366004611856565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610489575f5ffd5b5061018e61049836600461180b565b6109df565b3480156104a8575f5ffd5b506010546101f9565b3480156104bc575f5ffd5b5061018e6104cb36600461180b565b610a20565b335f8181526008602052604090205460ff16156105495760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f61055383610bbc565b5050506001600160a01b0383165f9081526005602052604090205490915061057c90829061189b565b6001600160a01b0383165f90815260056020526040902055600c546105a290829061189b565b600c55600d546105b39084906118ae565b600d55505050565b6060600380546105ca906118c1565b80601f01602080910402602001604051908101604052809291908181526020018280546105f6906118c1565b80156106415780601f1061061857610100808354040283529160200191610641565b820191905f5260205f20905b81548152906001019060200180831161062457829003601f168201915b5050505050905090565b5f33610658818585610c0d565b60019150505b92915050565b5f33610671858285610c1f565b61067c858585610c9b565b506001949350505050565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600b548311156107215760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610540565b8161073d575f61073084610bbc565b5091935061065e92505050565b5f61074784610bbc565b5090935061065e92505050565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f9081526008602052604090205460ff16156107dd5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610540565b6001600160a01b0381165f9081526005602052604090205415610834576001600160a01b0381165f9081526005602052604090205461081b90610e9e565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381166108e05760405162461bcd60e51b8152600401610540906118f9565b601380546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526008602052604081205460ff161561093b57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f9081526005602052604090205461065e90610e9e565b6060600480546105ca906118c1565b5f33610658818585610c9b565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381166109bf5760405162461bcd60e51b8152600401610540906118f9565b601280546001600160a01b0383166001600160a01b031990911617905550565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b03165f908152600760205260409020805460ff19169055565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f9081526008602052604090205460ff16610aa85760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c7564656400000000006044820152606401610540565b5f5b600954811015610bb857816001600160a01b031660098281548110610ad157610ad161193f565b5f918252602090912001546001600160a01b031603610bb05760098054610afa9060019061189b565b81548110610b0a57610b0a61193f565b5f91825260209091200154600980546001600160a01b039092169183908110610b3557610b3561193f565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600890925220805460ff191690556009805480610b8c57610b8c611953565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610aaa565b5050565b5f5f5f5f5f610bca86610f20565b90505f610bd7828861189b565b90505f610be2610f53565b90505f610bef8284611967565b90505f610bfc838b611967565b9a9199509297509095509350505050565b610c1a8383836001610f74565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610c955781811015610c8757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610540565b610c9584848484035f610f74565b50505050565b6001600160a01b038316610cff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610540565b6001600160a01b038216610d615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610540565b5f610d6b84610900565b905081811015610dcc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610540565b6001600160a01b0383165f9081526007602052604090205460ff16610e435760145482610df885610900565b610e0291906118ae565b1115610e435760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b6044820152606401610540565b6001600160a01b0384165f9081526007602052604090205460019060ff1680610e8357506001600160a01b0384165f9081526007602052604090205460ff165b15610e8b57505f5b610e9785858584611046565b5050505050565b5f600c54821115610f045760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610540565b5f610f0d610f53565b9050610f19818461197e565b9392505050565b5f5f601054600e54610f3291906118ae565b90505f6064610f418386611967565b610f4b919061197e565b949350505050565b5f5f5f610f5e6111b5565b9092509050610f6d818361197e565b9250505090565b6001600160a01b038416610f9d5760405163e602df0560e01b81525f6004820152602401610540565b6001600160a01b038316610fc657604051634a1406b160e11b81525f6004820152602401610540565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c9557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161103891815260200190565b60405180910390a350505050565b8061105357611053611325565b6001600160a01b0384165f9081526008602052604090205460ff16801561109257506001600160a01b0383165f9081526008602052604090205460ff16155b156110a7576110a2848484611352565b61119f565b6001600160a01b0384165f9081526008602052604090205460ff161580156110e657506001600160a01b0383165f9081526008602052604090205460ff165b156110f6576110a284848461146d565b6001600160a01b0384165f9081526008602052604090205460ff1615801561113657506001600160a01b0383165f9081526008602052604090205460ff16155b15611146576110a284848461150c565b6001600160a01b0384165f9081526008602052604090205460ff16801561118457506001600160a01b0383165f9081526008602052604090205460ff165b15611194576110a2848484611546565b61119f84848461150c565b80610c9557610c95600f54600e55601154601055565b600c54600b545f918291825b6009548110156112f4578260055f600984815481106111e2576111e261193f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061124a57508160065f600984815481106112245761122461193f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561126057600c54600b54945094505050509091565b60055f600983815481106112765761127661193f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546112a4908461189b565b925060065f600983815481106112bc576112bc61193f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546112ea908361189b565b91506001016111c1565b50600b54600c54611305919061197e565b82101561131c57600c54600b549350935050509091565b90939092509050565b600e541580156113355750601054155b1561133c57565b600e8054600f55601080546011555f9182905555565b5f5f5f5f61135f85610bbc565b6001600160a01b038b165f908152600660205260409020549397509195509350915061138c90869061189b565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546113bb90859061189b565b6001600160a01b038089165f9081526005602052604080822093909355908816815220546113ea9084906118ae565b6001600160a01b0387165f9081526005602052604090205561140d8786836115af565b61141785826116f0565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161145c91815260200190565b60405180910390a350505050505050565b5f5f5f5f61147a85610bbc565b6001600160a01b038b165f90815260056020526040902054939750919550935091506114a790859061189b565b6001600160a01b038089165f908152600560209081526040808320949094559189168152600690915220546114dd9083906118ae565b6001600160a01b0387165f908152600660209081526040808320939093556005905220546113ea9084906118ae565b5f5f5f5f61151985610bbc565b6001600160a01b038b165f90815260056020526040902054939750919550935091506113bb90859061189b565b5f5f5f5f61155385610bbc565b6001600160a01b038b165f908152600660205260409020549397509195509350915061158090869061189b565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546114a790859061189b565b5f6064601054846115c09190611967565b6115ca919061197e565b90508015610c95575f60026115df8484611967565b6115e9919061197e565b6012546001600160a01b03165f908152600560205260409020549091506116119082906118ae565b6012546001600160a01b039081165f9081526005602052604080822093909355601354909116815220546116469082906118ae565b6013546001600160a01b039081165f9081526005602090815260409182902093909355601254905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36013546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600e54846117019190611967565b61170b919061197e565b90505f6117188383611967565b905080600c54611728919061189b565b600c55600d546117399083906118ae565b600d5550505050565b5f60208284031215611752575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146117a4575f5ffd5b919050565b5f5f604083850312156117ba575f5ffd5b6117c38361178e565b946020939093013593505050565b5f5f5f606084860312156117e3575f5ffd5b6117ec8461178e565b92506117fa6020850161178e565b929592945050506040919091013590565b5f6020828403121561181b575f5ffd5b610f198261178e565b5f5f60408385031215611835575f5ffd5b823591506020830135801515811461184b575f5ffd5b809150509250929050565b5f5f60408385031215611867575f5ffd5b6118708361178e565b915061187e6020840161178e565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561065e5761065e611887565b8082018082111561065e5761065e611887565b600181811c908216806118d557607f821691505b6020821081036118f357634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b808202811582820484141761065e5761065e611887565b5f8261199857634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220ea3c0acdb4beafad64dbd09074803c9e14ee40681b0fee36229882af80cb582764736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA DUP1 SLOAD PUSH2 0x100 CALLER MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH0 PUSH1 0xD SSTORE PUSH2 0x35 SWAP3 PUSH1 0xFF SWAP2 DUP3 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x42 SWAP1 PUSH3 0x989680 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x14 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x21ACA122A921A0AA29A1A7A4A7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4359424343 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xB1 DUP3 DUP3 PUSH2 0x4CF JUMP JUMPDEST POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR DUP3 SSTORE PUSH2 0xCD SWAP3 POP SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0xDB SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x420 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH2 0xEB SWAP1 PUSH0 NOT PUSH2 0x589 JUMP JUMPDEST PUSH2 0xF6 SWAP1 PUSH0 NOT PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0xC SWAP1 DUP2 SSTORE PUSH1 0x2 PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP6 SLOAD DUP5 AND DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD DUP8 AND DUP3 OR SWAP1 SSTORE PUSH1 0x13 SLOAD DUP5 AND DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD DUP8 AND DUP3 OR SWAP1 SSTORE ADDRESS DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP6 SLOAD SWAP5 SLOAD SWAP4 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1AD SWAP1 CALLER SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EB PUSH0 DUP4 DUP4 PUSH2 0x1EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x219 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x289 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x364 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH2 0x348 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x356 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x32D JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x37A JUMPI POP PUSH1 0x1 PUSH2 0x408 JUMP JUMPDEST DUP2 PUSH2 0x386 JUMPI POP PUSH0 PUSH2 0x408 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x39C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3A6 JUMPI PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x408 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B7 PUSH2 0x315 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x408 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3E5 JUMPI POP DUP2 DUP2 EXP PUSH2 0x408 JUMP JUMPDEST PUSH2 0x3F1 PUSH0 NOT DUP5 DUP5 PUSH2 0x329 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x404 JUMPI PUSH2 0x404 PUSH2 0x315 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x419 DUP4 DUP4 PUSH2 0x36C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x408 JUMPI PUSH2 0x408 PUSH2 0x315 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x45F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x47D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4CA JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4A8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E8 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x4FC DUP2 PUSH2 0x4F6 DUP5 SLOAD PUSH2 0x44B JUMP JUMPDEST DUP5 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x52E JUMPI PUSH0 DUP4 ISZERO PUSH2 0x517 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x4C7 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x55D JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x53D JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x57A JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x5A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x408 JUMPI PUSH2 0x408 PUSH2 0x315 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x408 JUMPI PUSH2 0x408 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x19D3 DUP1 PUSH2 0x5DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x706407FD GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x4B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xC4863770 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x403 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x706407FD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x95C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x553 DUP4 PUSH2 0xBBC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x57C SWAP1 DUP3 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xC SLOAD PUSH2 0x5A2 SWAP1 DUP3 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x5B3 SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5CA SWAP1 PUSH2 0x18C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F6 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x618 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x658 DUP2 DUP6 DUP6 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x671 DUP6 DUP3 DUP6 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x67C DUP6 DUP6 DUP6 PUSH2 0xC9B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST DUP2 PUSH2 0x73D JUMPI PUSH0 PUSH2 0x730 DUP5 PUSH2 0xBBC JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x65E SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x747 DUP5 PUSH2 0xBBC JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x65E SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x834 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x81B SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x65E SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5CA SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x658 DUP2 DUP6 DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xBB8 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD1 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBB0 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x189B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xB35 JUMPI PUSH2 0xB35 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x1953 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xBCA DUP7 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBD7 DUP3 DUP9 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBE2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBEF DUP3 DUP5 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBFC DUP4 DUP12 PUSH2 0x1967 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC95 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH2 0xC95 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 PUSH2 0xD6B DUP5 PUSH2 0x900 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE43 JUMPI PUSH1 0x14 SLOAD DUP3 PUSH2 0xDF8 DUP6 PUSH2 0x900 JUMP JUMPDEST PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xE83 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE8B JUMPI POP PUSH0 JUMPDEST PUSH2 0xE97 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1046 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP3 GT ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 PUSH2 0xF0D PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP PUSH2 0xF19 DUP2 DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0xF41 DUP4 DUP7 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xF5E PUSH2 0x11B5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF6D DUP2 DUP4 PUSH2 0x197E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC95 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1038 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1053 JUMPI PUSH2 0x1053 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1092 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1136 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1146 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1184 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1194 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x119F DUP5 DUP5 DUP5 PUSH2 0x150C JUMP JUMPDEST DUP1 PUSH2 0xC95 JUMPI PUSH2 0xC95 PUSH1 0xF SLOAD PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x12F4 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11E2 JUMPI PUSH2 0x11E2 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x124A JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1224 JUMPI PUSH2 0x1224 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1260 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1276 JUMPI PUSH2 0x1276 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12A4 SWAP1 DUP5 PUSH2 0x189B JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12BC JUMPI PUSH2 0x12BC PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12EA SWAP1 DUP4 PUSH2 0x189B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x11C1 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x131C JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO DUP1 ISZERO PUSH2 0x1335 JUMPI POP PUSH1 0x10 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x133C JUMPI JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x11 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x135F DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x138C SWAP1 DUP7 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x13BB SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13EA SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x140D DUP8 DUP7 DUP4 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x1417 DUP6 DUP3 PUSH2 0x16F0 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x145C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x147A DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x14A7 SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x14DD SWAP1 DUP4 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x13EA SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1519 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x13BB SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1553 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1580 SWAP1 DUP7 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14A7 SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xC95 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x15DF DUP5 DUP5 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1611 SWAP1 DUP3 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1646 SWAP1 DUP3 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x12 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xE SLOAD DUP5 PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x170B SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1718 DUP4 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x1728 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x1739 SWAP1 DUP4 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17C3 DUP4 PUSH2 0x178E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17EC DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP3 POP PUSH2 0x17FA PUSH1 0x20 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF19 DUP3 PUSH2 0x178E JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1835 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x184B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1867 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1870 DUP4 PUSH2 0x178E JUMP JUMPDEST SWAP2 POP PUSH2 0x187E PUSH1 0x20 DUP5 ADD PUSH2 0x178E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1998 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA EXTCODECOPY EXP 0xCD 0xB4 0xBE 0xAF 0xAD PUSH5 0xDBD0907480 EXTCODECOPY SWAP15 EQ RETURNCONTRACT 0x40 PUSH9 0x1B0FEE36229882AF80 0xCB PC 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "133:13139:5:-:0;;;441:35;;;;466:10;441:35;-1:-1:-1;;;;;;441:35:5;;;;;;-1:-1:-1;592:30:5;;911:22;;923:9;;;;;;;;;;911:22;:::i;:::-;900:33;;:8;:33;:::i;:::-;869:64;;942:706;;;;;;;;;;1582:113:1;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;999:9:5::1;:14:::0;;-1:-1:-1;;999:14:5::1;1011:2;999:14:::0;;::::1;::::0;;1047:22:::1;::::0;-1:-1:-1;1011:2:5;1047:22:::1;:::i;:::-;1034:35;::::0;:10:::1;:35;:::i;:::-;1024:7;:45:::0;;;1098:13:::1;::::0;-1:-1:-1;;1098:13:5::1;:::i;:::-;1091:21;::::0;-1:-1:-1;;1091:21:5::1;:::i;:::-;1080:7;:33:::0;;;1143:1:::1;1126:14;:18:::0;;;1155:22:::1;:39:::0;;;1207:7:::1;:11:::0;;;1229:15:::1;:25:::0;1287:6:::1;::::0;;1267:17:::1;:26:::0;;-1:-1:-1;;;;;;1267:26:5::1;-1:-1:-1::0;;;;;1287:6:5::1;::::0;;;::::1;::::0;::::1;1267:26:::0;;::::1;::::0;;-1:-1:-1;1370:27:5;;;:18:::1;:27;::::0;;;;;;;:34;;-1:-1:-1;;1370:34:5;;::::1;-1:-1:-1::0;1370:34:5;;::::1;::::0;;;1434:17;;;::::1;1415:37:::0;;;;;:44;;;::::1;::::0;::::1;::::0;;1489:19:::1;::::0;;::::1;1470:39:::0;;;;;:46;;;::::1;::::0;::::1;::::0;;1554:4:::1;1527:33:::0;;;;;:40;;;;::::1;;::::0;;;1596:7;;1586:6;;;;;::::1;::::0;;::::1;1578:15:::0;;:7:::1;:15:::0;;;;;;;:25;;;1614:26:::1;::::0;1620:10:::1;::::0;1614:5:::1;:26::i;:::-;133:13139:::0;;7447:208:1;-1:-1:-1;;;;;7517:21:1;;7513:91;;7561:32;;-1:-1:-1;;;7561:32:1;;7590:1;7561:32;;;4876:51:6;4849:18;;7561:32:1;;;;;;;;7513:91;7613:35;7629:1;7633:7;7642:5;7613:7;:35::i;:::-;7447:208;;:::o;5997:1107::-;-1:-1:-1;;;;;6086:18:1;;6082:540;;6238:5;6222:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6082:540:1;;-1:-1:-1;6082:540:1;;-1:-1:-1;;;;;6296:15:1;;6274:19;6296:15;;;;;;;;;;;6329:19;;;6325:115;;;6375:50;;-1:-1:-1;;;6375:50:1;;-1:-1:-1;;;;;5288:32:6;;6375:50:1;;;5270:51:6;5337:18;;;5330:34;;;5380:18;;;5373:34;;;5243:18;;6375:50:1;5068:345:6;6325:115:1;-1:-1:-1;;;;;6560:15:1;;:9;:15;;;;;;;;;;6578:19;;;;6560:37;;6082:540;-1:-1:-1;;;;;6636:16:1;;6632:425;;6799:12;:21;;;;;;;6632:425;;;-1:-1:-1;;;;;7010:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6632:425;7087:2;-1:-1:-1;;;;;7072:25:1;7081:4;-1:-1:-1;;;;;7072:25:1;;7091:5;7072:25;;;;5564::6;;5552:2;5537:18;;5418:177;7072:25:1;;;;;;;;5997:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:375;234:1;252:5;266:249;287:1;277:8;274:15;266:249;;;337:4;332:3;328:14;322:4;319:24;316:50;;;346:18;;:::i;:::-;396:1;386:8;382:16;379:49;;;410:16;;;;379:49;493:1;489:16;;;;;449:15;;266:249;;;146:375;;;;;;:::o;526:902::-;575:5;605:8;595:80;;-1:-1:-1;646:1:6;660:5;;595:80;694:4;684:76;;-1:-1:-1;731:1:6;745:5;;684:76;776:4;794:1;789:59;;;;862:1;857:174;;;;769:262;;789:59;819:1;810:10;;833:5;;;857:174;894:3;884:8;881:17;878:43;;;901:18;;:::i;:::-;-1:-1:-1;;957:1:6;943:16;;1016:5;;769:262;;1115:2;1105:8;1102:16;1096:3;1090:4;1087:13;1083:36;1077:2;1067:8;1064:16;1059:2;1053:4;1050:12;1046:35;1043:77;1040:203;;;-1:-1:-1;1152:19:6;;;1228:5;;1040:203;1275:42;-1:-1:-1;;1300:8:6;1294:4;1275:42;:::i;:::-;1353:6;1349:1;1345:6;1341:19;1332:7;1329:32;1326:58;;;1364:18;;:::i;:::-;1402:20;;-1:-1:-1;526:902:6;;;;;:::o;1433:131::-;1493:5;1522:36;1549:8;1543:4;1522:36;:::i;:::-;1513:45;1433:131;-1:-1:-1;;;1433:131:6:o;1569:168::-;1642:9;;;1673;;1690:15;;;1684:22;;1670:37;1660:71;;1711:18;;:::i;1742:127::-;1803:10;1798:3;1794:20;1791:1;1784:31;1834:4;1831:1;1824:15;1858:4;1855:1;1848:15;1874:380;1953:1;1949:12;;;;1996;;;2017:61;;2071:4;2063:6;2059:17;2049:27;;2017:61;2124:2;2116:6;2113:14;2093:18;2090:38;2087:161;;2170:10;2165:3;2161:20;2158:1;2151:31;2205:4;2202:1;2195:15;2233:4;2230:1;2223:15;2087:161;;1874:380;;;:::o;2385:518::-;2487:2;2482:3;2479:11;2476:421;;;2523:5;2520:1;2513:16;2567:4;2564:1;2554:18;2637:2;2625:10;2621:19;2618:1;2614:27;2608:4;2604:38;2673:4;2661:10;2658:20;2655:47;;;-1:-1:-1;2696:4:6;2655:47;2751:2;2746:3;2742:12;2739:1;2735:20;2729:4;2725:31;2715:41;;2806:81;2824:2;2817:5;2814:13;2806:81;;;2883:1;2869:16;;2850:1;2839:13;2806:81;;;2810:3;;2476:421;2385:518;;;:::o;3079:1299::-;3199:10;;-1:-1:-1;;;;;3221:30:6;;3218:56;;;3254:18;;:::i;:::-;3283:97;3373:6;3333:38;3365:4;3359:11;3333:38;:::i;:::-;3327:4;3283:97;:::i;:::-;3429:4;3460:2;3449:14;;3477:1;3472:649;;;;4165:1;4182:6;4179:89;;;-1:-1:-1;4234:19:6;;;4228:26;4179:89;-1:-1:-1;;3036:1:6;3032:11;;;3028:24;3024:29;3014:40;3060:1;3056:11;;;3011:57;4281:81;;3442:930;;3472:649;2332:1;2325:14;;;2369:4;2356:18;;-1:-1:-1;;3508:20:6;;;3626:222;3640:7;3637:1;3634:14;3626:222;;;3722:19;;;3716:26;3701:42;;3829:4;3814:20;;;;3782:1;3770:14;;;;3656:12;3626:222;;;3630:3;3876:6;3867:7;3864:19;3861:201;;;3937:19;;;3931:26;-1:-1:-1;;4020:1:6;4016:14;;;4032:3;4012:24;4008:37;4004:42;3989:58;3974:74;;3861:201;-1:-1:-1;;;;4108:1:6;4092:14;;;4088:22;4075:36;;-1:-1:-1;3079:1299:6:o;4383:209::-;4415:1;4441;4431:132;;4485:10;4480:3;4476:20;4473:1;4466:31;4520:4;4517:1;4510:15;4548:4;4545:1;4538:15;4431:132;-1:-1:-1;4577:9:6;;4383:209::o;4597:128::-;4664:9;;;4685:11;;;4682:37;;;4699:18;;:::i;4938:125::-;5003:9;;;5024:10;;;5021:36;;;5037:18;;:::i;5418:177::-;133:13139:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 3085,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3956,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getCompleteTaxValue_1887": {
									"entryPoint": 3872,
									"id": 1887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getCurrentSupply_2073": {
									"entryPoint": 4533,
									"id": 2073,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_1988": {
									"entryPoint": 3923,
									"id": 1988,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTransferValues_1936": {
									"entryPoint": 3004,
									"id": 1936,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_1971": {
									"entryPoint": 5872,
									"id": 1971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 3103,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tokenTransfer_1545": {
									"entryPoint": 4166,
									"id": 1545,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1862": {
									"entryPoint": 5446,
									"id": 1862,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1783": {
									"entryPoint": 4946,
									"id": 1783,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferStandard_1645": {
									"entryPoint": 5388,
									"id": 1645,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1714": {
									"entryPoint": 5229,
									"id": 1714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1448": {
									"entryPoint": 3227,
									"id": 1448,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1611,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1053": {
									"entryPoint": 2304,
									"id": 1053,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeDevelopmentAccount_1145": {
									"entryPoint": 2201,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMarketingAccount_1123": {
									"entryPoint": 2424,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeAccountFromReward_1299": {
									"entryPoint": 1876,
									"id": 1299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromFee_1087": {
									"entryPoint": 1671,
									"id": 1087,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getDevelopmentAccount_1017": {
									"entryPoint": null,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMarketingAccount_1009": {
									"entryPoint": null,
									"id": 1009,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@includeAccountinReward_1363": {
									"entryPoint": 2592,
									"id": 1363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInFee_1101": {
									"entryPoint": 2527,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 1467,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflect_1192": {
									"entryPoint": 1232,
									"id": 1192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reflectionFee_993": {
									"entryPoint": null,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflectionFromToken_1230": {
									"entryPoint": 1742,
									"id": 1230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_1574": {
									"entryPoint": 4901,
									"id": 1574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_1586": {
									"entryPoint": null,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2396,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFeeTransfer_2138": {
									"entryPoint": 5551,
									"id": 2138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenFromReflection_1254": {
									"entryPoint": 3742,
									"id": 1254,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFeesRedistributed_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_985": {
									"entryPoint": null,
									"id": 985,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1636,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2411,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8808:6",
										"nodeType": "YulBlock",
										"src": "0:8808:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:6",
													"nodeType": "YulBlock",
													"src": "84:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:6",
																"nodeType": "YulLiteral",
																"src": "168:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:6",
																	"nodeType": "YulTypedName",
																	"src": "159:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:6",
															"nodeType": "YulAssignment",
															"src": "178:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:6"
																},
																"nativeSrc": "187:23:6",
																"nodeType": "YulFunctionCall",
																"src": "187:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:6"
																}
															]
														},
														{
															"nativeSrc": "219:15:6",
															"nodeType": "YulAssignment",
															"src": "219:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:6",
																"nodeType": "YulIdentifier",
																"src": "229:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:226:6"
											},
											{
												"body": {
													"nativeSrc": "366:297:6",
													"nodeType": "YulBlock",
													"src": "366:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "383:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "383:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "394:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:6"
																},
																"nativeSrc": "376:21:6",
																"nodeType": "YulFunctionCall",
																"src": "376:21:6"
															},
															"nativeSrc": "376:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "376:21:6"
														},
														{
															"nativeSrc": "406:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "406:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "426:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "426:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "420:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "420:5:6"
																},
																"nativeSrc": "420:13:6",
																"nodeType": "YulFunctionCall",
																"src": "420:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "410:6:6",
																	"nodeType": "YulTypedName",
																	"src": "410:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "453:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "453:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "464:2:6",
																				"nodeType": "YulLiteral",
																				"src": "464:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "449:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:6"
																		},
																		"nativeSrc": "449:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "449:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:6"
																},
																"nativeSrc": "442:34:6",
																"nodeType": "YulFunctionCall",
																"src": "442:34:6"
															},
															"nativeSrc": "442:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "442:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "495:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "506:2:6",
																				"nodeType": "YulLiteral",
																				"src": "506:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:6"
																		},
																		"nativeSrc": "491:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "491:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "515:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulLiteral",
																				"src": "523:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "511:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:6"
																		},
																		"nativeSrc": "511:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "511:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "485:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:6"
																},
																"nativeSrc": "485:50:6",
																"nodeType": "YulFunctionCall",
																"src": "485:50:6"
															},
															"nativeSrc": "485:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "485:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "559:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "559:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "570:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "570:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "555:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:6"
																				},
																				"nativeSrc": "555:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "555:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "579:2:6",
																				"nodeType": "YulLiteral",
																				"src": "579:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "551:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:6"
																		},
																		"nativeSrc": "551:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:6",
																		"nodeType": "YulLiteral",
																		"src": "584:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "544:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "544:42:6"
														},
														{
															"nativeSrc": "595:62:6",
															"nodeType": "YulAssignment",
															"src": "595:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "611:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "611:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "630:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "630:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "638:2:6",
																								"nodeType": "YulLiteral",
																								"src": "638:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "626:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "626:3:6"
																						},
																						"nativeSrc": "626:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "626:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "647:2:6",
																								"nodeType": "YulLiteral",
																								"src": "647:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "643:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "643:3:6"
																						},
																						"nativeSrc": "643:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "643:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "622:3:6"
																				},
																				"nativeSrc": "622:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "622:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "607:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:6"
																		},
																		"nativeSrc": "607:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "607:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "654:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "603:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:6"
																},
																"nativeSrc": "603:54:6",
																"nodeType": "YulFunctionCall",
																"src": "603:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "595:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "595:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "245:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "335:9:6",
														"nodeType": "YulTypedName",
														"src": "335:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "346:6:6",
														"nodeType": "YulTypedName",
														"src": "346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "357:4:6",
														"nodeType": "YulTypedName",
														"src": "357:4:6",
														"type": ""
													}
												],
												"src": "245:418:6"
											},
											{
												"body": {
													"nativeSrc": "717:124:6",
													"nodeType": "YulBlock",
													"src": "717:124:6",
													"statements": [
														{
															"nativeSrc": "727:29:6",
															"nodeType": "YulAssignment",
															"src": "727:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "749:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "736:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:6"
																},
																"nativeSrc": "736:20:6",
																"nodeType": "YulFunctionCall",
																"src": "736:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "727:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "819:16:6",
																"nodeType": "YulBlock",
																"src": "819:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "828:1:6",
																					"nodeType": "YulLiteral",
																					"src": "828:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "831:1:6",
																					"nodeType": "YulLiteral",
																					"src": "831:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "821:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:6"
																			},
																			"nativeSrc": "821:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "821:12:6"
																		},
																		"nativeSrc": "821:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "778:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "778:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "789:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "789:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "804:3:6",
																										"nodeType": "YulLiteral",
																										"src": "804:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "809:1:6",
																										"nodeType": "YulLiteral",
																										"src": "809:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "800:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "800:3:6"
																								},
																								"nativeSrc": "800:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "800:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "813:1:6",
																								"nodeType": "YulLiteral",
																								"src": "813:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "796:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "796:3:6"
																						},
																						"nativeSrc": "796:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "796:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "785:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:6"
																				},
																				"nativeSrc": "785:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "785:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "775:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "775:2:6"
																		},
																		"nativeSrc": "775:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "775:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:6"
																},
																"nativeSrc": "768:50:6",
																"nodeType": "YulFunctionCall",
																"src": "768:50:6"
															},
															"nativeSrc": "765:70:6",
															"nodeType": "YulIf",
															"src": "765:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "668:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "696:6:6",
														"nodeType": "YulTypedName",
														"src": "696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "707:5:6",
														"nodeType": "YulTypedName",
														"src": "707:5:6",
														"type": ""
													}
												],
												"src": "668:173:6"
											},
											{
												"body": {
													"nativeSrc": "933:213:6",
													"nodeType": "YulBlock",
													"src": "933:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "979:16:6",
																"nodeType": "YulBlock",
																"src": "979:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:6",
																					"nodeType": "YulLiteral",
																					"src": "991:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "981:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:6"
																			},
																			"nativeSrc": "981:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "981:12:6"
																		},
																		"nativeSrc": "981:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "954:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "954:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "963:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "963:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "950:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:6"
																		},
																		"nativeSrc": "950:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "950:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "975:2:6",
																		"nodeType": "YulLiteral",
																		"src": "975:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:6"
																},
																"nativeSrc": "946:32:6",
																"nodeType": "YulFunctionCall",
																"src": "946:32:6"
															},
															"nativeSrc": "943:52:6",
															"nodeType": "YulIf",
															"src": "943:52:6"
														},
														{
															"nativeSrc": "1004:39:6",
															"nodeType": "YulAssignment",
															"src": "1004:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1033:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1033:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1014:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1014:18:6"
																},
																"nativeSrc": "1014:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1014:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1004:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:6"
																}
															]
														},
														{
															"nativeSrc": "1052:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1052:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1065:1:6",
																"nodeType": "YulLiteral",
																"src": "1065:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1056:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1056:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1075:41:6",
															"nodeType": "YulAssignment",
															"src": "1075:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1101:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1112:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1112:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1097:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:6"
																		},
																		"nativeSrc": "1097:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1097:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1084:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1084:12:6"
																},
																"nativeSrc": "1084:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1084:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1075:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1075:5:6"
																}
															]
														},
														{
															"nativeSrc": "1125:15:6",
															"nodeType": "YulAssignment",
															"src": "1125:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1135:5:6",
																"nodeType": "YulIdentifier",
																"src": "1135:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1125:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "846:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "891:9:6",
														"nodeType": "YulTypedName",
														"src": "891:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "902:7:6",
														"nodeType": "YulTypedName",
														"src": "902:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "914:6:6",
														"nodeType": "YulTypedName",
														"src": "914:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "922:6:6",
														"nodeType": "YulTypedName",
														"src": "922:6:6",
														"type": ""
													}
												],
												"src": "846:300:6"
											},
											{
												"body": {
													"nativeSrc": "1246:92:6",
													"nodeType": "YulBlock",
													"src": "1246:92:6",
													"statements": [
														{
															"nativeSrc": "1256:26:6",
															"nodeType": "YulAssignment",
															"src": "1256:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1268:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1268:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1279:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1279:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1264:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:6"
																},
																"nativeSrc": "1264:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1264:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1256:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1298:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1298:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1323:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1316:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1316:6:6"
																				},
																				"nativeSrc": "1316:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1316:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1309:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1309:6:6"
																		},
																		"nativeSrc": "1309:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1309:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:6"
																},
																"nativeSrc": "1291:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1291:41:6"
															},
															"nativeSrc": "1291:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1291:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1151:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:6",
														"nodeType": "YulTypedName",
														"src": "1215:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1226:6:6",
														"nodeType": "YulTypedName",
														"src": "1226:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:6",
														"nodeType": "YulTypedName",
														"src": "1237:4:6",
														"type": ""
													}
												],
												"src": "1151:187:6"
											},
											{
												"body": {
													"nativeSrc": "1444:76:6",
													"nodeType": "YulBlock",
													"src": "1444:76:6",
													"statements": [
														{
															"nativeSrc": "1454:26:6",
															"nodeType": "YulAssignment",
															"src": "1454:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:6"
																},
																"nativeSrc": "1462:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1462:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1454:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1507:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1507:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:6"
																},
																"nativeSrc": "1489:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1489:25:6"
															},
															"nativeSrc": "1489:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1489:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1343:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1413:9:6",
														"nodeType": "YulTypedName",
														"src": "1413:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1424:6:6",
														"nodeType": "YulTypedName",
														"src": "1424:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1435:4:6",
														"nodeType": "YulTypedName",
														"src": "1435:4:6",
														"type": ""
													}
												],
												"src": "1343:177:6"
											},
											{
												"body": {
													"nativeSrc": "1626:102:6",
													"nodeType": "YulBlock",
													"src": "1626:102:6",
													"statements": [
														{
															"nativeSrc": "1636:26:6",
															"nodeType": "YulAssignment",
															"src": "1636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1644:3:6"
																},
																"nativeSrc": "1644:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1636:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1693:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1709:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1709:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1714:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1714:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1705:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1705:3:6"
																						},
																						"nativeSrc": "1705:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1705:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1718:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1718:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1701:3:6"
																				},
																				"nativeSrc": "1701:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1701:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1689:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:6"
																		},
																		"nativeSrc": "1689:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1671:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																},
																"nativeSrc": "1671:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1671:51:6"
															},
															"nativeSrc": "1671:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1671:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1525:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1595:9:6",
														"nodeType": "YulTypedName",
														"src": "1595:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1606:6:6",
														"nodeType": "YulTypedName",
														"src": "1606:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1617:4:6",
														"nodeType": "YulTypedName",
														"src": "1617:4:6",
														"type": ""
													}
												],
												"src": "1525:203:6"
											},
											{
												"body": {
													"nativeSrc": "1837:270:6",
													"nodeType": "YulBlock",
													"src": "1837:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1883:16:6",
																"nodeType": "YulBlock",
																"src": "1883:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:6"
																			},
																			"nativeSrc": "1885:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:12:6"
																		},
																		"nativeSrc": "1885:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1854:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:6"
																		},
																		"nativeSrc": "1854:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:6"
																},
																"nativeSrc": "1850:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:32:6"
															},
															"nativeSrc": "1847:52:6",
															"nodeType": "YulIf",
															"src": "1847:52:6"
														},
														{
															"nativeSrc": "1908:39:6",
															"nodeType": "YulAssignment",
															"src": "1908:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1937:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1918:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1918:18:6"
																},
																"nativeSrc": "1918:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1918:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:6"
																}
															]
														},
														{
															"nativeSrc": "1956:48:6",
															"nodeType": "YulAssignment",
															"src": "1956:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:6"
																		},
																		"nativeSrc": "1985:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1966:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:18:6"
																},
																"nativeSrc": "1966:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1956:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:6"
																}
															]
														},
														{
															"nativeSrc": "2013:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2013:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2026:1:6",
																"nodeType": "YulLiteral",
																"src": "2026:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2017:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2017:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2036:41:6",
															"nodeType": "YulAssignment",
															"src": "2036:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2062:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2062:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2073:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2073:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:6"
																		},
																		"nativeSrc": "2058:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2045:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2045:12:6"
																},
																"nativeSrc": "2045:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2045:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2036:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:5:6"
																}
															]
														},
														{
															"nativeSrc": "2086:15:6",
															"nodeType": "YulAssignment",
															"src": "2086:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2096:5:6",
																"nodeType": "YulIdentifier",
																"src": "2096:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1733:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1787:9:6",
														"nodeType": "YulTypedName",
														"src": "1787:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1798:7:6",
														"nodeType": "YulTypedName",
														"src": "1798:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1810:6:6",
														"nodeType": "YulTypedName",
														"src": "1810:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1818:6:6",
														"nodeType": "YulTypedName",
														"src": "1818:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1826:6:6",
														"nodeType": "YulTypedName",
														"src": "1826:6:6",
														"type": ""
													}
												],
												"src": "1733:374:6"
											},
											{
												"body": {
													"nativeSrc": "2209:87:6",
													"nodeType": "YulBlock",
													"src": "2209:87:6",
													"statements": [
														{
															"nativeSrc": "2219:26:6",
															"nodeType": "YulAssignment",
															"src": "2219:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2231:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:6"
																},
																"nativeSrc": "2227:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2227:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2219:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2261:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2276:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2284:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2284:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:6"
																		},
																		"nativeSrc": "2272:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:6"
																},
																"nativeSrc": "2254:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2254:36:6"
															},
															"nativeSrc": "2254:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2254:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2112:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:6",
														"nodeType": "YulTypedName",
														"src": "2178:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2189:6:6",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2200:4:6",
														"nodeType": "YulTypedName",
														"src": "2200:4:6",
														"type": ""
													}
												],
												"src": "2112:184:6"
											},
											{
												"body": {
													"nativeSrc": "2371:116:6",
													"nodeType": "YulBlock",
													"src": "2371:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:6",
																"nodeType": "YulBlock",
																"src": "2417:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:6"
																			},
																			"nativeSrc": "2419:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:6"
																		},
																		"nativeSrc": "2419:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:6"
																		},
																		"nativeSrc": "2388:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:6"
																},
																"nativeSrc": "2384:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:6"
															},
															"nativeSrc": "2381:52:6",
															"nodeType": "YulIf",
															"src": "2381:52:6"
														},
														{
															"nativeSrc": "2442:39:6",
															"nodeType": "YulAssignment",
															"src": "2442:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:6"
																},
																"nativeSrc": "2452:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2301:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:6",
														"nodeType": "YulTypedName",
														"src": "2337:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2348:7:6",
														"nodeType": "YulTypedName",
														"src": "2348:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2360:6:6",
														"nodeType": "YulTypedName",
														"src": "2360:6:6",
														"type": ""
													}
												],
												"src": "2301:186:6"
											},
											{
												"body": {
													"nativeSrc": "2576:311:6",
													"nodeType": "YulBlock",
													"src": "2576:311:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2622:16:6",
																"nodeType": "YulBlock",
																"src": "2622:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2631:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2624:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:6"
																			},
																			"nativeSrc": "2624:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:6"
																		},
																		"nativeSrc": "2624:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2597:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2606:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:6"
																		},
																		"nativeSrc": "2593:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2618:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2589:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:6"
																},
																"nativeSrc": "2589:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2589:32:6"
															},
															"nativeSrc": "2586:52:6",
															"nodeType": "YulIf",
															"src": "2586:52:6"
														},
														{
															"nativeSrc": "2647:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2647:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2660:1:6",
																"nodeType": "YulLiteral",
																"src": "2660:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2651:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2651:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2670:32:6",
															"nodeType": "YulAssignment",
															"src": "2670:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2692:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2692:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2679:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2679:12:6"
																},
																"nativeSrc": "2679:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2679:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2670:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2670:5:6"
																}
															]
														},
														{
															"nativeSrc": "2711:15:6",
															"nodeType": "YulAssignment",
															"src": "2711:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2721:5:6",
																"nodeType": "YulIdentifier",
																"src": "2721:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																}
															]
														},
														{
															"nativeSrc": "2735:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2735:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2767:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2778:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:6"
																		},
																		"nativeSrc": "2763:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2763:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2750:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2750:12:6"
																},
																"nativeSrc": "2750:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2750:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2739:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2739:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2839:16:6",
																"nodeType": "YulBlock",
																"src": "2839:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2851:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2851:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:6"
																			},
																			"nativeSrc": "2841:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:12:6"
																		},
																		"nativeSrc": "2841:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2804:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2804:7:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "2827:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2827:7:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2820:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2820:6:6"
																						},
																						"nativeSrc": "2820:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2820:15:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2813:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2813:6:6"
																				},
																				"nativeSrc": "2813:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2813:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2801:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2801:2:6"
																		},
																		"nativeSrc": "2801:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:36:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2794:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:6"
																},
																"nativeSrc": "2794:44:6",
																"nodeType": "YulFunctionCall",
																"src": "2794:44:6"
															},
															"nativeSrc": "2791:64:6",
															"nodeType": "YulIf",
															"src": "2791:64:6"
														},
														{
															"nativeSrc": "2864:17:6",
															"nodeType": "YulAssignment",
															"src": "2864:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "2874:7:6",
																"nodeType": "YulIdentifier",
																"src": "2874:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "2492:395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2534:9:6",
														"nodeType": "YulTypedName",
														"src": "2534:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2545:7:6",
														"nodeType": "YulTypedName",
														"src": "2545:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2557:6:6",
														"nodeType": "YulTypedName",
														"src": "2557:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2565:6:6",
														"nodeType": "YulTypedName",
														"src": "2565:6:6",
														"type": ""
													}
												],
												"src": "2492:395:6"
											},
											{
												"body": {
													"nativeSrc": "2979:173:6",
													"nodeType": "YulBlock",
													"src": "2979:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3025:16:6",
																"nodeType": "YulBlock",
																"src": "3025:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3034:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:6"
																			},
																			"nativeSrc": "3027:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:12:6"
																		},
																		"nativeSrc": "3027:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3000:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3000:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3009:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:6"
																		},
																		"nativeSrc": "2996:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2992:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:6"
																},
																"nativeSrc": "2992:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2992:32:6"
															},
															"nativeSrc": "2989:52:6",
															"nodeType": "YulIf",
															"src": "2989:52:6"
														},
														{
															"nativeSrc": "3050:39:6",
															"nodeType": "YulAssignment",
															"src": "3050:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3079:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3079:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3060:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3060:18:6"
																},
																"nativeSrc": "3060:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3060:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:6"
																}
															]
														},
														{
															"nativeSrc": "3098:48:6",
															"nodeType": "YulAssignment",
															"src": "3098:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3131:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3142:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:6"
																		},
																		"nativeSrc": "3127:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3108:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3108:18:6"
																},
																"nativeSrc": "3108:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3108:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3098:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2892:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2937:9:6",
														"nodeType": "YulTypedName",
														"src": "2937:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2948:7:6",
														"nodeType": "YulTypedName",
														"src": "2948:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2960:6:6",
														"nodeType": "YulTypedName",
														"src": "2960:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2968:6:6",
														"nodeType": "YulTypedName",
														"src": "2968:6:6",
														"type": ""
													}
												],
												"src": "2892:260:6"
											},
											{
												"body": {
													"nativeSrc": "3331:234:6",
													"nodeType": "YulBlock",
													"src": "3331:234:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3341:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:6"
																},
																"nativeSrc": "3341:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3341:21:6"
															},
															"nativeSrc": "3341:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3341:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3382:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3393:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3378:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:6"
																		},
																		"nativeSrc": "3378:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3398:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:6"
																},
																"nativeSrc": "3371:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3371:30:6"
															},
															"nativeSrc": "3371:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3371:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:6"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nativeSrc": "3437:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3437:34:6",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3410:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:6"
																},
																"nativeSrc": "3410:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3410:62:6"
															},
															"nativeSrc": "3410:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3410:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3492:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3503:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3488:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:6"
																		},
																		"nativeSrc": "3488:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3508:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3508:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:6"
																},
																"nativeSrc": "3481:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3481:42:6"
															},
															"nativeSrc": "3481:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3481:42:6"
														},
														{
															"nativeSrc": "3532:27:6",
															"nodeType": "YulAssignment",
															"src": "3532:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3544:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3544:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3555:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:6"
																},
																"nativeSrc": "3540:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3540:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3532:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3157:408:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3308:9:6",
														"nodeType": "YulTypedName",
														"src": "3308:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3322:4:6",
														"nodeType": "YulTypedName",
														"src": "3322:4:6",
														"type": ""
													}
												],
												"src": "3157:408:6"
											},
											{
												"body": {
													"nativeSrc": "3602:95:6",
													"nodeType": "YulBlock",
													"src": "3602:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3619:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3626:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3626:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3631:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3631:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3622:3:6"
																		},
																		"nativeSrc": "3622:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:6"
																},
																"nativeSrc": "3612:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3612:31:6"
															},
															"nativeSrc": "3612:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3612:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3659:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3662:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3662:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:6"
																},
																"nativeSrc": "3652:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3652:15:6"
															},
															"nativeSrc": "3652:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3652:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3686:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:6"
																},
																"nativeSrc": "3676:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3676:15:6"
															},
															"nativeSrc": "3676:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3676:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3570:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3570:127:6"
											},
											{
												"body": {
													"nativeSrc": "3751:79:6",
													"nodeType": "YulBlock",
													"src": "3751:79:6",
													"statements": [
														{
															"nativeSrc": "3761:17:6",
															"nodeType": "YulAssignment",
															"src": "3761:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3773:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3773:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3776:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3776:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:6"
																},
																"nativeSrc": "3769:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3769:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3761:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3761:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3802:22:6",
																"nodeType": "YulBlock",
																"src": "3802:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3804:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:16:6"
																			},
																			"nativeSrc": "3804:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3804:18:6"
																		},
																		"nativeSrc": "3804:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3804:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3793:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3793:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3799:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3799:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3790:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3790:2:6"
																},
																"nativeSrc": "3790:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3790:11:6"
															},
															"nativeSrc": "3787:37:6",
															"nodeType": "YulIf",
															"src": "3787:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3702:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3733:1:6",
														"nodeType": "YulTypedName",
														"src": "3733:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3736:1:6",
														"nodeType": "YulTypedName",
														"src": "3736:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3742:4:6",
														"nodeType": "YulTypedName",
														"src": "3742:4:6",
														"type": ""
													}
												],
												"src": "3702:128:6"
											},
											{
												"body": {
													"nativeSrc": "3883:77:6",
													"nodeType": "YulBlock",
													"src": "3883:77:6",
													"statements": [
														{
															"nativeSrc": "3893:16:6",
															"nodeType": "YulAssignment",
															"src": "3893:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3904:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3907:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3907:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:6"
																},
																"nativeSrc": "3900:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3900:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3893:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3932:22:6",
																"nodeType": "YulBlock",
																"src": "3932:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3934:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3934:16:6"
																			},
																			"nativeSrc": "3934:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3934:18:6"
																		},
																		"nativeSrc": "3934:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3934:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3924:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3924:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3927:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3921:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3921:2:6"
																},
																"nativeSrc": "3921:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3921:10:6"
															},
															"nativeSrc": "3918:36:6",
															"nodeType": "YulIf",
															"src": "3918:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3835:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3866:1:6",
														"nodeType": "YulTypedName",
														"src": "3866:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3869:1:6",
														"nodeType": "YulTypedName",
														"src": "3869:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3875:3:6",
														"nodeType": "YulTypedName",
														"src": "3875:3:6",
														"type": ""
													}
												],
												"src": "3835:125:6"
											},
											{
												"body": {
													"nativeSrc": "4020:325:6",
													"nodeType": "YulBlock",
													"src": "4020:325:6",
													"statements": [
														{
															"nativeSrc": "4030:22:6",
															"nodeType": "YulAssignment",
															"src": "4030:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4044:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4047:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4040:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:6"
																},
																"nativeSrc": "4040:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4040:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:6"
																}
															]
														},
														{
															"nativeSrc": "4061:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4061:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4091:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4091:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:6"
																},
																"nativeSrc": "4087:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4087:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4065:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4065:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4138:31:6",
																"nodeType": "YulBlock",
																"src": "4138:31:6",
																"statements": [
																	{
																		"nativeSrc": "4140:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4140:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4154:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4154:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4162:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4162:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4150:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:3:6"
																			},
																			"nativeSrc": "4150:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4150:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4140:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4118:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4118:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:6"
																},
																"nativeSrc": "4111:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4111:26:6"
															},
															"nativeSrc": "4108:61:6",
															"nodeType": "YulIf",
															"src": "4108:61:6"
														},
														{
															"body": {
																"nativeSrc": "4228:111:6",
																"nodeType": "YulBlock",
																"src": "4228:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4256:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4256:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4261:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4261:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4252:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:6"
																					},
																					"nativeSrc": "4252:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4252:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:6"
																			},
																			"nativeSrc": "4242:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:31:6"
																		},
																		"nativeSrc": "4242:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4293:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4293:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4296:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4296:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4286:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:6"
																			},
																			"nativeSrc": "4286:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4286:15:6"
																		},
																		"nativeSrc": "4286:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4286:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4324:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:6"
																			},
																			"nativeSrc": "4314:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:15:6"
																		},
																		"nativeSrc": "4314:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4184:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4184:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4207:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4215:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4215:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4204:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4204:2:6"
																		},
																		"nativeSrc": "4204:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4181:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4181:2:6"
																},
																"nativeSrc": "4181:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4181:38:6"
															},
															"nativeSrc": "4178:161:6",
															"nodeType": "YulIf",
															"src": "4178:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3965:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4000:4:6",
														"nodeType": "YulTypedName",
														"src": "4000:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4009:6:6",
														"nodeType": "YulTypedName",
														"src": "4009:6:6",
														"type": ""
													}
												],
												"src": "3965:380:6"
											},
											{
												"body": {
													"nativeSrc": "4524:181:6",
													"nodeType": "YulBlock",
													"src": "4524:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:6"
																},
																"nativeSrc": "4534:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4534:21:6"
															},
															"nativeSrc": "4534:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:6"
																		},
																		"nativeSrc": "4571:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:6"
																},
																"nativeSrc": "4564:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:6"
															},
															"nativeSrc": "4564:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4614:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:6"
																		},
																		"nativeSrc": "4610:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nativeSrc": "4630:33:6",
																		"nodeType": "YulLiteral",
																		"src": "4630:33:6",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:6"
																},
																"nativeSrc": "4603:61:6",
																"nodeType": "YulFunctionCall",
																"src": "4603:61:6"
															},
															"nativeSrc": "4603:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "4603:61:6"
														},
														{
															"nativeSrc": "4673:26:6",
															"nodeType": "YulAssignment",
															"src": "4673:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4685:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4685:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:6"
																},
																"nativeSrc": "4681:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4681:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4673:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4350:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:6",
														"nodeType": "YulTypedName",
														"src": "4501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4515:4:6",
														"nodeType": "YulTypedName",
														"src": "4515:4:6",
														"type": ""
													}
												],
												"src": "4350:355:6"
											},
											{
												"body": {
													"nativeSrc": "4884:177:6",
													"nodeType": "YulBlock",
													"src": "4884:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4901:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:6"
																},
																"nativeSrc": "4894:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4894:21:6"
															},
															"nativeSrc": "4894:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4894:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4935:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4946:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:6"
																		},
																		"nativeSrc": "4931:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4951:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4924:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:6"
																},
																"nativeSrc": "4924:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4924:30:6"
															},
															"nativeSrc": "4924:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4924:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4974:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4974:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4985:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4985:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4970:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:6"
																		},
																		"nativeSrc": "4970:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4970:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nativeSrc": "4990:29:6",
																		"nodeType": "YulLiteral",
																		"src": "4990:29:6",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:6"
																},
																"nativeSrc": "4963:57:6",
																"nodeType": "YulFunctionCall",
																"src": "4963:57:6"
															},
															"nativeSrc": "4963:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "4963:57:6"
														},
														{
															"nativeSrc": "5029:26:6",
															"nodeType": "YulAssignment",
															"src": "5029:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5041:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5052:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5037:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:6"
																},
																"nativeSrc": "5037:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5037:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4710:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4861:9:6",
														"nodeType": "YulTypedName",
														"src": "4861:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													}
												],
												"src": "4710:351:6"
											},
											{
												"body": {
													"nativeSrc": "5240:228:6",
													"nodeType": "YulBlock",
													"src": "5240:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5257:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:6"
																},
																"nativeSrc": "5250:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5250:21:6"
															},
															"nativeSrc": "5250:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5250:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5291:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5302:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5287:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:6"
																		},
																		"nativeSrc": "5287:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5280:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:6"
																},
																"nativeSrc": "5280:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5280:30:6"
															},
															"nativeSrc": "5280:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5280:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5341:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5326:3:6"
																		},
																		"nativeSrc": "5326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:18:6"
																	},
																	{
																		"hexValue": "7a65726f20616464726573732063616e206e6f74206265207468652046656541",
																		"kind": "string",
																		"nativeSrc": "5346:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5346:34:6",
																		"type": "",
																		"value": "zero address can not be the FeeA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:6"
																},
																"nativeSrc": "5319:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5319:62:6"
															},
															"nativeSrc": "5319:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5319:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5412:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5412:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5397:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:6"
																		},
																		"nativeSrc": "5397:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:18:6"
																	},
																	{
																		"hexValue": "63636f756e74",
																		"kind": "string",
																		"nativeSrc": "5417:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5417:8:6",
																		"type": "",
																		"value": "ccount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:6"
																},
																"nativeSrc": "5390:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5390:36:6"
															},
															"nativeSrc": "5390:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5390:36:6"
														},
														{
															"nativeSrc": "5435:27:6",
															"nodeType": "YulAssignment",
															"src": "5435:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5447:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5458:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5458:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:6"
																},
																"nativeSrc": "5443:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5443:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5435:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5066:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:6",
														"nodeType": "YulTypedName",
														"src": "5217:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5231:4:6",
														"nodeType": "YulTypedName",
														"src": "5231:4:6",
														"type": ""
													}
												],
												"src": "5066:402:6"
											},
											{
												"body": {
													"nativeSrc": "5647:177:6",
													"nodeType": "YulBlock",
													"src": "5647:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:6"
																},
																"nativeSrc": "5657:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5657:21:6"
															},
															"nativeSrc": "5657:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5657:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5698:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5709:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5709:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5694:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:6"
																		},
																		"nativeSrc": "5694:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5694:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5714:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:6"
																},
																"nativeSrc": "5687:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5687:30:6"
															},
															"nativeSrc": "5687:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5687:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:6"
																		},
																		"nativeSrc": "5733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
																		"kind": "string",
																		"nativeSrc": "5753:29:6",
																		"nodeType": "YulLiteral",
																		"src": "5753:29:6",
																		"type": "",
																		"value": "Account is already included"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:6"
																},
																"nativeSrc": "5726:57:6",
																"nodeType": "YulFunctionCall",
																"src": "5726:57:6"
															},
															"nativeSrc": "5726:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "5726:57:6"
														},
														{
															"nativeSrc": "5792:26:6",
															"nodeType": "YulAssignment",
															"src": "5792:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5804:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5815:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5800:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:6"
																},
																"nativeSrc": "5800:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5800:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5792:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5792:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5473:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5624:9:6",
														"nodeType": "YulTypedName",
														"src": "5624:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5638:4:6",
														"nodeType": "YulTypedName",
														"src": "5638:4:6",
														"type": ""
													}
												],
												"src": "5473:351:6"
											},
											{
												"body": {
													"nativeSrc": "5861:95:6",
													"nodeType": "YulBlock",
													"src": "5861:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5878:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5878:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5885:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5885:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:10:6",
																				"nodeType": "YulLiteral",
																				"src": "5890:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:6"
																		},
																		"nativeSrc": "5881:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5871:6:6"
																},
																"nativeSrc": "5871:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5871:31:6"
															},
															"nativeSrc": "5871:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5871:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5918:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5918:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5921:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5921:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5911:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:6"
																},
																"nativeSrc": "5911:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5911:15:6"
															},
															"nativeSrc": "5911:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5911:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5942:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5942:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5945:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5945:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5935:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5935:6:6"
																},
																"nativeSrc": "5935:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5935:15:6"
															},
															"nativeSrc": "5935:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5935:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5829:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5829:127:6"
											},
											{
												"body": {
													"nativeSrc": "5993:95:6",
													"nodeType": "YulBlock",
													"src": "5993:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6010:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6010:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6017:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6017:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6022:10:6",
																				"nodeType": "YulLiteral",
																				"src": "6022:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6013:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:6"
																		},
																		"nativeSrc": "6013:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6013:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6003:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:6"
																},
																"nativeSrc": "6003:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6003:31:6"
															},
															"nativeSrc": "6003:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6003:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6050:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6050:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6053:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6053:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6043:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:6"
																},
																"nativeSrc": "6043:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6043:15:6"
															},
															"nativeSrc": "6043:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6043:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6074:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6074:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6077:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:6"
																},
																"nativeSrc": "6067:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6067:15:6"
															},
															"nativeSrc": "6067:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6067:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "5961:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5961:127:6"
											},
											{
												"body": {
													"nativeSrc": "6145:116:6",
													"nodeType": "YulBlock",
													"src": "6145:116:6",
													"statements": [
														{
															"nativeSrc": "6155:20:6",
															"nodeType": "YulAssignment",
															"src": "6155:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6170:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6170:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6173:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6173:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6166:3:6"
																},
																"nativeSrc": "6166:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6166:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6155:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6155:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6233:22:6",
																"nodeType": "YulBlock",
																"src": "6233:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6235:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6235:16:6"
																			},
																			"nativeSrc": "6235:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:18:6"
																		},
																		"nativeSrc": "6235:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6235:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6204:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6204:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6197:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6197:6:6"
																				},
																				"nativeSrc": "6197:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6197:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6211:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6211:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6218:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6218:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6227:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6227:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6214:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6214:3:6"
																						},
																						"nativeSrc": "6214:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6214:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6208:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6208:2:6"
																				},
																				"nativeSrc": "6208:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6208:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6194:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6194:2:6"
																		},
																		"nativeSrc": "6194:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6194:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:6"
																},
																"nativeSrc": "6187:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6187:45:6"
															},
															"nativeSrc": "6184:71:6",
															"nodeType": "YulIf",
															"src": "6184:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6093:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6124:1:6",
														"nodeType": "YulTypedName",
														"src": "6124:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6127:1:6",
														"nodeType": "YulTypedName",
														"src": "6127:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6133:7:6",
														"nodeType": "YulTypedName",
														"src": "6133:7:6",
														"type": ""
													}
												],
												"src": "6093:168:6"
											},
											{
												"body": {
													"nativeSrc": "6423:188:6",
													"nodeType": "YulBlock",
													"src": "6423:188:6",
													"statements": [
														{
															"nativeSrc": "6433:26:6",
															"nodeType": "YulAssignment",
															"src": "6433:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6445:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6445:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6456:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6441:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6441:3:6"
																},
																"nativeSrc": "6441:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6441:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6433:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6433:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6475:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6475:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6490:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6490:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6506:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6506:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6502:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6502:3:6"
																						},
																						"nativeSrc": "6502:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6502:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6515:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6515:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6498:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6498:3:6"
																				},
																				"nativeSrc": "6498:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6498:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6486:3:6"
																		},
																		"nativeSrc": "6486:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6486:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:6"
																},
																"nativeSrc": "6468:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6468:51:6"
															},
															"nativeSrc": "6468:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6468:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6539:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6539:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6550:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6550:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6535:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:6"
																		},
																		"nativeSrc": "6535:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6535:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6555:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6555:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6528:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6528:6:6"
																},
																"nativeSrc": "6528:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6528:34:6"
															},
															"nativeSrc": "6528:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6528:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6582:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6582:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6593:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6593:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6578:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6578:3:6"
																		},
																		"nativeSrc": "6578:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6578:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6598:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6598:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:6"
																},
																"nativeSrc": "6571:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6571:34:6"
															},
															"nativeSrc": "6571:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6571:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6266:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6376:9:6",
														"nodeType": "YulTypedName",
														"src": "6376:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6387:6:6",
														"nodeType": "YulTypedName",
														"src": "6387:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6395:6:6",
														"nodeType": "YulTypedName",
														"src": "6395:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6403:6:6",
														"nodeType": "YulTypedName",
														"src": "6403:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6414:4:6",
														"nodeType": "YulTypedName",
														"src": "6414:4:6",
														"type": ""
													}
												],
												"src": "6266:345:6"
											},
											{
												"body": {
													"nativeSrc": "6790:227:6",
													"nodeType": "YulBlock",
													"src": "6790:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6807:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6818:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6800:6:6"
																},
																"nativeSrc": "6800:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6800:21:6"
															},
															"nativeSrc": "6800:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6800:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6841:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6841:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6852:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6852:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6837:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6837:3:6"
																		},
																		"nativeSrc": "6837:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6837:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6857:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6830:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:6"
																},
																"nativeSrc": "6830:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6830:30:6"
															},
															"nativeSrc": "6830:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6830:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6880:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6891:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6876:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:6"
																		},
																		"nativeSrc": "6876:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6896:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6896:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6869:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:6"
																},
																"nativeSrc": "6869:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6869:62:6"
															},
															"nativeSrc": "6869:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6869:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6951:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6951:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6962:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6962:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6947:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6947:3:6"
																		},
																		"nativeSrc": "6947:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6947:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6967:7:6",
																		"nodeType": "YulLiteral",
																		"src": "6967:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6940:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:6"
																},
																"nativeSrc": "6940:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6940:35:6"
															},
															"nativeSrc": "6940:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6940:35:6"
														},
														{
															"nativeSrc": "6984:27:6",
															"nodeType": "YulAssignment",
															"src": "6984:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6996:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6996:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7007:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7007:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6992:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6992:3:6"
																},
																"nativeSrc": "6992:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6992:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6984:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6984:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6616:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6767:9:6",
														"nodeType": "YulTypedName",
														"src": "6767:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6781:4:6",
														"nodeType": "YulTypedName",
														"src": "6781:4:6",
														"type": ""
													}
												],
												"src": "6616:401:6"
											},
											{
												"body": {
													"nativeSrc": "7196:225:6",
													"nodeType": "YulBlock",
													"src": "7196:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7213:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7213:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7224:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7224:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7206:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:6"
																},
																"nativeSrc": "7206:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7206:21:6"
															},
															"nativeSrc": "7206:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7206:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7247:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7247:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7258:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7258:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7243:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:6"
																		},
																		"nativeSrc": "7243:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7263:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7263:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7236:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:6"
																},
																"nativeSrc": "7236:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7236:30:6"
															},
															"nativeSrc": "7236:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7236:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7286:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7297:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7297:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7282:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:6"
																		},
																		"nativeSrc": "7282:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "7302:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7302:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7275:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7275:6:6"
																},
																"nativeSrc": "7275:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7275:62:6"
															},
															"nativeSrc": "7275:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7275:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7357:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7368:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:6"
																		},
																		"nativeSrc": "7353:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "7373:5:6",
																		"nodeType": "YulLiteral",
																		"src": "7373:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7346:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:6"
																},
																"nativeSrc": "7346:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7346:33:6"
															},
															"nativeSrc": "7346:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7346:33:6"
														},
														{
															"nativeSrc": "7388:27:6",
															"nodeType": "YulAssignment",
															"src": "7388:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7400:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7411:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7411:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7396:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:6"
																},
																"nativeSrc": "7396:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7396:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7388:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7388:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7022:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7173:9:6",
														"nodeType": "YulTypedName",
														"src": "7173:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7187:4:6",
														"nodeType": "YulTypedName",
														"src": "7187:4:6",
														"type": ""
													}
												],
												"src": "7022:399:6"
											},
											{
												"body": {
													"nativeSrc": "7600:228:6",
													"nodeType": "YulBlock",
													"src": "7600:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7617:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7617:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7628:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7628:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7610:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:6"
																},
																"nativeSrc": "7610:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7610:21:6"
															},
															"nativeSrc": "7610:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7610:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7651:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7651:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7662:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7662:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7647:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7647:3:6"
																		},
																		"nativeSrc": "7647:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7647:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7667:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7667:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7640:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:6"
																},
																"nativeSrc": "7640:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7640:30:6"
															},
															"nativeSrc": "7640:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7640:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7690:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7690:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7701:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7701:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7686:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7686:3:6"
																		},
																		"nativeSrc": "7686:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7686:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "7706:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7706:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7679:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7679:6:6"
																},
																"nativeSrc": "7679:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7679:62:6"
															},
															"nativeSrc": "7679:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7679:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7761:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7761:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7772:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7772:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7757:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:6"
																		},
																		"nativeSrc": "7757:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7777:8:6",
																		"nodeType": "YulLiteral",
																		"src": "7777:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7750:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:6"
																},
																"nativeSrc": "7750:36:6",
																"nodeType": "YulFunctionCall",
																"src": "7750:36:6"
															},
															"nativeSrc": "7750:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "7750:36:6"
														},
														{
															"nativeSrc": "7795:27:6",
															"nodeType": "YulAssignment",
															"src": "7795:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7807:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7818:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7818:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7803:3:6"
																},
																"nativeSrc": "7803:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7803:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7795:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7426:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7577:9:6",
														"nodeType": "YulTypedName",
														"src": "7577:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7591:4:6",
														"nodeType": "YulTypedName",
														"src": "7591:4:6",
														"type": ""
													}
												],
												"src": "7426:402:6"
											},
											{
												"body": {
													"nativeSrc": "8007:166:6",
													"nodeType": "YulBlock",
													"src": "8007:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8024:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8024:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8035:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:6"
																},
																"nativeSrc": "8017:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8017:21:6"
															},
															"nativeSrc": "8017:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8017:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8058:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8058:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8069:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8054:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:6"
																		},
																		"nativeSrc": "8054:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8054:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8047:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:6"
																},
																"nativeSrc": "8047:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8047:30:6"
															},
															"nativeSrc": "8047:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8047:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8097:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8097:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8108:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8108:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:6"
																		},
																		"nativeSrc": "8093:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8093:18:6"
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"kind": "string",
																		"nativeSrc": "8113:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8113:18:6",
																		"type": "",
																		"value": "Whale detected!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:6"
																},
																"nativeSrc": "8086:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8086:46:6"
															},
															"nativeSrc": "8086:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "8086:46:6"
														},
														{
															"nativeSrc": "8141:26:6",
															"nodeType": "YulAssignment",
															"src": "8141:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8153:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8153:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8164:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8164:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8149:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8149:3:6"
																},
																"nativeSrc": "8149:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8149:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8141:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8141:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7833:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7984:9:6",
														"nodeType": "YulTypedName",
														"src": "7984:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7998:4:6",
														"nodeType": "YulTypedName",
														"src": "7998:4:6",
														"type": ""
													}
												],
												"src": "7833:340:6"
											},
											{
												"body": {
													"nativeSrc": "8352:232:6",
													"nodeType": "YulBlock",
													"src": "8352:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8369:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8369:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8380:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8380:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:6"
																},
																"nativeSrc": "8362:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8362:21:6"
															},
															"nativeSrc": "8362:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8362:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8414:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8414:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:6"
																		},
																		"nativeSrc": "8399:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:6"
																},
																"nativeSrc": "8392:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8392:30:6"
															},
															"nativeSrc": "8392:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8392:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8442:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8453:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8453:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8438:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8438:3:6"
																		},
																		"nativeSrc": "8438:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8438:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nativeSrc": "8458:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8458:34:6",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8431:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:6"
																},
																"nativeSrc": "8431:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8431:62:6"
															},
															"nativeSrc": "8431:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8431:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8513:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8513:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8524:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8509:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:6"
																		},
																		"nativeSrc": "8509:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8509:18:6"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nativeSrc": "8529:12:6",
																		"nodeType": "YulLiteral",
																		"src": "8529:12:6",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8502:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:6"
																},
																"nativeSrc": "8502:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8502:40:6"
															},
															"nativeSrc": "8502:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "8502:40:6"
														},
														{
															"nativeSrc": "8551:27:6",
															"nodeType": "YulAssignment",
															"src": "8551:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8563:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8563:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8574:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8559:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8559:3:6"
																},
																"nativeSrc": "8559:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8559:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8551:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8551:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8178:406:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8329:9:6",
														"nodeType": "YulTypedName",
														"src": "8329:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8343:4:6",
														"nodeType": "YulTypedName",
														"src": "8343:4:6",
														"type": ""
													}
												],
												"src": "8178:406:6"
											},
											{
												"body": {
													"nativeSrc": "8635:171:6",
													"nodeType": "YulBlock",
													"src": "8635:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8666:111:6",
																"nodeType": "YulBlock",
																"src": "8666:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8687:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8687:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8694:3:6",
																							"nodeType": "YulLiteral",
																							"src": "8694:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8699:10:6",
																							"nodeType": "YulLiteral",
																							"src": "8699:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8690:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8690:3:6"
																					},
																					"nativeSrc": "8690:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8690:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8680:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8680:6:6"
																			},
																			"nativeSrc": "8680:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8680:31:6"
																		},
																		"nativeSrc": "8680:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8680:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8731:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8731:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8734:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8734:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8724:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8724:6:6"
																			},
																			"nativeSrc": "8724:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8724:15:6"
																		},
																		"nativeSrc": "8724:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8724:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8762:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8762:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8752:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8752:6:6"
																			},
																			"nativeSrc": "8752:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8752:15:6"
																		},
																		"nativeSrc": "8752:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8752:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8655:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8655:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:6"
																},
																"nativeSrc": "8648:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8648:9:6"
															},
															"nativeSrc": "8645:132:6",
															"nodeType": "YulIf",
															"src": "8645:132:6"
														},
														{
															"nativeSrc": "8786:14:6",
															"nodeType": "YulAssignment",
															"src": "8786:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8795:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8795:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8798:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8798:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8791:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8791:3:6"
																},
																"nativeSrc": "8791:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8791:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8786:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8786:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8589:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8620:1:6",
														"nodeType": "YulTypedName",
														"src": "8620:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8623:1:6",
														"nodeType": "YulTypedName",
														"src": "8623:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8629:1:6",
														"nodeType": "YulTypedName",
														"src": "8629:1:6",
														"type": ""
													}
												],
												"src": "8589:217:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"zero address can not be the FeeA\")\n        mstore(add(headStart, 96), \"ccount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already included\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Whale detected!!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610164575f3560e01c8063706407fd116100cd578063a9059cbb11610087578063dd62ed3e11610062578063dd62ed3e1461043a578063ea2f0b371461047e578063f66608fe1461049d578063fdeb889f146104b1575f5ffd5b8063a9059cbb146103c5578063c4863770146103e4578063cba0e99614610403575f5ffd5b8063706407fd1461032057806370a082311461033f578063838fcc901461035e57806383ad79941461037b5780638da5cb5b1461038f57806395d89b41146103b1575f5ffd5b8063313ce5671161011e578063313ce567146102575780633203550414610278578063437823ec1461028c5780634549b039146102ab5780635342acb4146102ca5780636049876e14610301575f5ffd5b8063053ab1821461016f57806306fdde0314610190578063095ea7b3146101ba57806318160ddd146101e95780631cf8fef51461020757806323b872dd14610238575f5ffd5b3661016b57005b5f5ffd5b34801561017a575f5ffd5b5061018e610189366004611742565b6104d0565b005b34801561019b575f5ffd5b506101a46105bb565b6040516101b19190611759565b60405180910390f35b3480156101c5575f5ffd5b506101d96101d43660046117a9565b61064b565b60405190151581526020016101b1565b3480156101f4575f5ffd5b50600b545b6040519081526020016101b1565b348015610212575f5ffd5b506013546001600160a01b03165b6040516001600160a01b0390911681526020016101b1565b348015610243575f5ffd5b506101d96102523660046117d1565b610664565b348015610262575f5ffd5b50600a5460405160ff90911681526020016101b1565b348015610283575f5ffd5b50600d546101f9565b348015610297575f5ffd5b5061018e6102a636600461180b565b610687565b3480156102b6575f5ffd5b506101f96102c5366004611824565b6106ce565b3480156102d5575f5ffd5b506101d96102e436600461180b565b6001600160a01b03165f9081526007602052604090205460ff1690565b34801561030c575f5ffd5b5061018e61031b36600461180b565b610754565b34801561032b575f5ffd5b5061018e61033a36600461180b565b610899565b34801561034a575f5ffd5b506101f961035936600461180b565b610900565b348015610369575f5ffd5b506012546001600160a01b0316610220565b348015610386575f5ffd5b50600e546101f9565b34801561039a575f5ffd5b50600a5461010090046001600160a01b0316610220565b3480156103bc575f5ffd5b506101a461095c565b3480156103d0575f5ffd5b506101d96103df3660046117a9565b61096b565b3480156103ef575f5ffd5b5061018e6103fe36600461180b565b610978565b34801561040e575f5ffd5b506101d961041d36600461180b565b6001600160a01b03165f9081526008602052604090205460ff1690565b348015610445575f5ffd5b506101f9610454366004611856565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610489575f5ffd5b5061018e61049836600461180b565b6109df565b3480156104a8575f5ffd5b506010546101f9565b3480156104bc575f5ffd5b5061018e6104cb36600461180b565b610a20565b335f8181526008602052604090205460ff16156105495760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f61055383610bbc565b5050506001600160a01b0383165f9081526005602052604090205490915061057c90829061189b565b6001600160a01b0383165f90815260056020526040902055600c546105a290829061189b565b600c55600d546105b39084906118ae565b600d55505050565b6060600380546105ca906118c1565b80601f01602080910402602001604051908101604052809291908181526020018280546105f6906118c1565b80156106415780601f1061061857610100808354040283529160200191610641565b820191905f5260205f20905b81548152906001019060200180831161062457829003601f168201915b5050505050905090565b5f33610658818585610c0d565b60019150505b92915050565b5f33610671858285610c1f565b61067c858585610c9b565b506001949350505050565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600b548311156107215760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610540565b8161073d575f61073084610bbc565b5091935061065e92505050565b5f61074784610bbc565b5090935061065e92505050565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f9081526008602052604090205460ff16156107dd5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610540565b6001600160a01b0381165f9081526005602052604090205415610834576001600160a01b0381165f9081526005602052604090205461081b90610e9e565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381166108e05760405162461bcd60e51b8152600401610540906118f9565b601380546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526008602052604081205460ff161561093b57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f9081526005602052604090205461065e90610e9e565b6060600480546105ca906118c1565b5f33610658818585610c9b565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381166109bf5760405162461bcd60e51b8152600401610540906118f9565b601280546001600160a01b0383166001600160a01b031990911617905550565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b03165f908152600760205260409020805460ff19169055565b600a54339061010090046001600160a01b03166001600160a01b0316036106cb576001600160a01b0381165f9081526008602052604090205460ff16610aa85760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c7564656400000000006044820152606401610540565b5f5b600954811015610bb857816001600160a01b031660098281548110610ad157610ad161193f565b5f918252602090912001546001600160a01b031603610bb05760098054610afa9060019061189b565b81548110610b0a57610b0a61193f565b5f91825260209091200154600980546001600160a01b039092169183908110610b3557610b3561193f565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600890925220805460ff191690556009805480610b8c57610b8c611953565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610aaa565b5050565b5f5f5f5f5f610bca86610f20565b90505f610bd7828861189b565b90505f610be2610f53565b90505f610bef8284611967565b90505f610bfc838b611967565b9a9199509297509095509350505050565b610c1a8383836001610f74565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610c955781811015610c8757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610540565b610c9584848484035f610f74565b50505050565b6001600160a01b038316610cff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610540565b6001600160a01b038216610d615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610540565b5f610d6b84610900565b905081811015610dcc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610540565b6001600160a01b0383165f9081526007602052604090205460ff16610e435760145482610df885610900565b610e0291906118ae565b1115610e435760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b6044820152606401610540565b6001600160a01b0384165f9081526007602052604090205460019060ff1680610e8357506001600160a01b0384165f9081526007602052604090205460ff165b15610e8b57505f5b610e9785858584611046565b5050505050565b5f600c54821115610f045760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610540565b5f610f0d610f53565b9050610f19818461197e565b9392505050565b5f5f601054600e54610f3291906118ae565b90505f6064610f418386611967565b610f4b919061197e565b949350505050565b5f5f5f610f5e6111b5565b9092509050610f6d818361197e565b9250505090565b6001600160a01b038416610f9d5760405163e602df0560e01b81525f6004820152602401610540565b6001600160a01b038316610fc657604051634a1406b160e11b81525f6004820152602401610540565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c9557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161103891815260200190565b60405180910390a350505050565b8061105357611053611325565b6001600160a01b0384165f9081526008602052604090205460ff16801561109257506001600160a01b0383165f9081526008602052604090205460ff16155b156110a7576110a2848484611352565b61119f565b6001600160a01b0384165f9081526008602052604090205460ff161580156110e657506001600160a01b0383165f9081526008602052604090205460ff165b156110f6576110a284848461146d565b6001600160a01b0384165f9081526008602052604090205460ff1615801561113657506001600160a01b0383165f9081526008602052604090205460ff16155b15611146576110a284848461150c565b6001600160a01b0384165f9081526008602052604090205460ff16801561118457506001600160a01b0383165f9081526008602052604090205460ff165b15611194576110a2848484611546565b61119f84848461150c565b80610c9557610c95600f54600e55601154601055565b600c54600b545f918291825b6009548110156112f4578260055f600984815481106111e2576111e261193f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061124a57508160065f600984815481106112245761122461193f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561126057600c54600b54945094505050509091565b60055f600983815481106112765761127661193f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546112a4908461189b565b925060065f600983815481106112bc576112bc61193f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546112ea908361189b565b91506001016111c1565b50600b54600c54611305919061197e565b82101561131c57600c54600b549350935050509091565b90939092509050565b600e541580156113355750601054155b1561133c57565b600e8054600f55601080546011555f9182905555565b5f5f5f5f61135f85610bbc565b6001600160a01b038b165f908152600660205260409020549397509195509350915061138c90869061189b565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546113bb90859061189b565b6001600160a01b038089165f9081526005602052604080822093909355908816815220546113ea9084906118ae565b6001600160a01b0387165f9081526005602052604090205561140d8786836115af565b61141785826116f0565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161145c91815260200190565b60405180910390a350505050505050565b5f5f5f5f61147a85610bbc565b6001600160a01b038b165f90815260056020526040902054939750919550935091506114a790859061189b565b6001600160a01b038089165f908152600560209081526040808320949094559189168152600690915220546114dd9083906118ae565b6001600160a01b0387165f908152600660209081526040808320939093556005905220546113ea9084906118ae565b5f5f5f5f61151985610bbc565b6001600160a01b038b165f90815260056020526040902054939750919550935091506113bb90859061189b565b5f5f5f5f61155385610bbc565b6001600160a01b038b165f908152600660205260409020549397509195509350915061158090869061189b565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546114a790859061189b565b5f6064601054846115c09190611967565b6115ca919061197e565b90508015610c95575f60026115df8484611967565b6115e9919061197e565b6012546001600160a01b03165f908152600560205260409020549091506116119082906118ae565b6012546001600160a01b039081165f9081526005602052604080822093909355601354909116815220546116469082906118ae565b6013546001600160a01b039081165f9081526005602090815260409182902093909355601254905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36013546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600e54846117019190611967565b61170b919061197e565b90505f6117188383611967565b905080600c54611728919061189b565b600c55600d546117399083906118ae565b600d5550505050565b5f60208284031215611752575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146117a4575f5ffd5b919050565b5f5f604083850312156117ba575f5ffd5b6117c38361178e565b946020939093013593505050565b5f5f5f606084860312156117e3575f5ffd5b6117ec8461178e565b92506117fa6020850161178e565b929592945050506040919091013590565b5f6020828403121561181b575f5ffd5b610f198261178e565b5f5f60408385031215611835575f5ffd5b823591506020830135801515811461184b575f5ffd5b809150509250929050565b5f5f60408385031215611867575f5ffd5b6118708361178e565b915061187e6020840161178e565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561065e5761065e611887565b8082018082111561065e5761065e611887565b600181811c908216806118d557607f821691505b6020821081036118f357634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b808202811582820484141761065e5761065e611887565b5f8261199857634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220ea3c0acdb4beafad64dbd09074803c9e14ee40681b0fee36229882af80cb582764736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x706407FD GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x4B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xC4863770 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x403 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x706407FD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x95C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x553 DUP4 PUSH2 0xBBC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x57C SWAP1 DUP3 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xC SLOAD PUSH2 0x5A2 SWAP1 DUP3 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x5B3 SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5CA SWAP1 PUSH2 0x18C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F6 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x618 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x658 DUP2 DUP6 DUP6 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x671 DUP6 DUP3 DUP6 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x67C DUP6 DUP6 DUP6 PUSH2 0xC9B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST DUP2 PUSH2 0x73D JUMPI PUSH0 PUSH2 0x730 DUP5 PUSH2 0xBBC JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x65E SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x747 DUP5 PUSH2 0xBBC JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x65E SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x834 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x81B SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x65E SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5CA SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x658 DUP2 DUP6 DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xBB8 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD1 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBB0 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x189B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xB35 JUMPI PUSH2 0xB35 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x1953 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xBCA DUP7 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBD7 DUP3 DUP9 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBE2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBEF DUP3 DUP5 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBFC DUP4 DUP12 PUSH2 0x1967 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC95 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH2 0xC95 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 PUSH2 0xD6B DUP5 PUSH2 0x900 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE43 JUMPI PUSH1 0x14 SLOAD DUP3 PUSH2 0xDF8 DUP6 PUSH2 0x900 JUMP JUMPDEST PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xE83 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE8B JUMPI POP PUSH0 JUMPDEST PUSH2 0xE97 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1046 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP3 GT ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x540 JUMP JUMPDEST PUSH0 PUSH2 0xF0D PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP PUSH2 0xF19 DUP2 DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0xF41 DUP4 DUP7 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xF5E PUSH2 0x11B5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF6D DUP2 DUP4 PUSH2 0x197E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC95 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1038 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1053 JUMPI PUSH2 0x1053 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1092 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1136 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1146 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1184 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1194 JUMPI PUSH2 0x10A2 DUP5 DUP5 DUP5 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x119F DUP5 DUP5 DUP5 PUSH2 0x150C JUMP JUMPDEST DUP1 PUSH2 0xC95 JUMPI PUSH2 0xC95 PUSH1 0xF SLOAD PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x12F4 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11E2 JUMPI PUSH2 0x11E2 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x124A JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1224 JUMPI PUSH2 0x1224 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1260 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1276 JUMPI PUSH2 0x1276 PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12A4 SWAP1 DUP5 PUSH2 0x189B JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12BC JUMPI PUSH2 0x12BC PUSH2 0x193F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12EA SWAP1 DUP4 PUSH2 0x189B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x11C1 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x131C JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO DUP1 ISZERO PUSH2 0x1335 JUMPI POP PUSH1 0x10 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x133C JUMPI JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x11 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x135F DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x138C SWAP1 DUP7 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x13BB SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13EA SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x140D DUP8 DUP7 DUP4 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x1417 DUP6 DUP3 PUSH2 0x16F0 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x145C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x147A DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x14A7 SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x14DD SWAP1 DUP4 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x13EA SWAP1 DUP5 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1519 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x13BB SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1553 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1580 SWAP1 DUP7 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x14A7 SWAP1 DUP6 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xC95 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x15DF DUP5 DUP5 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1611 SWAP1 DUP3 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1646 SWAP1 DUP3 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x12 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xE SLOAD DUP5 PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x170B SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1718 DUP4 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x1728 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x1739 SWAP1 DUP4 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0xD SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17C3 DUP4 PUSH2 0x178E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17EC DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP3 POP PUSH2 0x17FA PUSH1 0x20 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF19 DUP3 PUSH2 0x178E JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1835 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x184B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1867 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1870 DUP4 PUSH2 0x178E JUMP JUMPDEST SWAP2 POP PUSH2 0x187E PUSH1 0x20 DUP5 ADD PUSH2 0x178E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x65E JUMPI PUSH2 0x65E PUSH2 0x1887 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1998 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA EXTCODECOPY EXP 0xCD 0xB4 0xBE 0xAF 0xAD PUSH5 0xDBD0907480 EXTCODECOPY SWAP15 EQ RETURNCONTRACT 0x40 PUSH9 0x1B0FEE36229882AF80 0xCB PC 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "133:13139:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3907:414;;;;;;;;;;-1:-1:-1;3907:414:5;;;;;:::i;:::-;;:::i;:::-;;1760:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;-1:-1:-1;3979:186:1;;;;;:::i;:::-;;:::i;:::-;;;1316:14:6;;1309:22;1291:41;;1279:2;1264:18;3979:186:1;1151:187:6;1972:103:5;;;;;;;;;;-1:-1:-1;2060:7:5;;1972:103;;;1489:25:6;;;1477:2;1462:18;1972:103:5;1343:177:6;2390:108:5;;;;;;;;;;-1:-1:-1;2471:19:5;;-1:-1:-1;;;;;2471:19:5;2390:108;;;-1:-1:-1;;;;;1689:32:6;;;1671:51;;1659:2;1644:18;2390:108:5;1525:203:6;4757:244:1;;;;;;;;;;-1:-1:-1;4757:244:1;;;;;:::i;:::-;;:::i;1864:100:5:-;;;;;;;;;;-1:-1:-1;1947:9:5;;1864:100;;1947:9;;;;2254:36:6;;2242:2;2227:18;1864:100:5;2112:184:6;3042:100:5;;;;;;;;;;-1:-1:-1;3124:10:5;;3042:100;;3150:111;;;;;;;;;;-1:-1:-1;3150:111:5;;;;;:::i;:::-;;:::i;4329:487::-;;;;;;;;;;-1:-1:-1;4329:487:5;;;;;:::i;:::-;;:::i;2506:124::-;;;;;;;;;;-1:-1:-1;2506:124:5;;;;;:::i;:::-;-1:-1:-1;;;;;2595:27:5;2571:4;2595:27;;;:18;:27;;;;;;;;;2506:124;5152:339;;;;;;;;;;-1:-1:-1;5152:339:5;;;;;:::i;:::-;;:::i;3645:254::-;;;;;;;;;;-1:-1:-1;3645:254:5;;;;;:::i;:::-;;:::i;2638:278::-;;;;;;;;;;-1:-1:-1;2638:278:5;;;;;:::i;:::-;;:::i;2278:104::-;;;;;;;;;;-1:-1:-1;2357:17:5;;-1:-1:-1;;;;;2357:17:5;2278:104;;2083:95;;;;;;;;;;-1:-1:-1;2156:14:5;;2083:95;;1693:87;;;;;;;;;;-1:-1:-1;1766:6:5;;;;;-1:-1:-1;;;;;1766:6:5;1693:87;;1962:93:1;;;;;;;;;;;;;:::i;3296:178::-;;;;;;;;;;-1:-1:-1;3296:178:1;;;;;:::i;:::-;;:::i;3387:250:5:-;;;;;;;;;;-1:-1:-1;3387:250:5;;;;;:::i;:::-;;:::i;2924:110::-;;;;;;;;;;-1:-1:-1;2924:110:5;;;;;:::i;:::-;-1:-1:-1;;;;;3006:20:5;2982:4;3006:20;;;:11;:20;;;;;;;;;2924:110;3532:140:1;;;;;;;;;;-1:-1:-1;3532:140:1;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:1;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;3269:110:5;;;;;;;;;;-1:-1:-1;3269:110:5;;;;;:::i;:::-;;:::i;2186:84::-;;;;;;;;;;-1:-1:-1;2255:7:5;;2186:84;;5499:482;;;;;;;;;;-1:-1:-1;5499:482:5;;;;;:::i;:::-;;:::i;3907:414::-;735:10:4;3959:14:5;4022:19;;;:11;:19;;;;;;;;4021:20;3999:114;;;;-1:-1:-1;;;3999:114:5;;3359:2:6;3999:114:5;;;3341:21:6;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;-1:-1:-1;;;3488:18:6;;;3481:42;3540:19;;3999:114:5;;;;;;;;;4125:15;4150:27;4169:7;4150:18;:27::i;:::-;-1:-1:-1;;;;;;;;4206:15:5;;;;;;:7;:15;;;;;;4124:53;;-1:-1:-1;4206:25:5;;4124:53;;4206:25;:::i;:::-;-1:-1:-1;;;;;4188:15:5;;;;;;:7;:15;;;;;:43;4252:7;;:17;;4262:7;;4252:17;:::i;:::-;4242:7;:27;4293:10;;:20;;4306:7;;4293:20;:::i;:::-;4280:10;:33;-1:-1:-1;;;3907:414:5:o;1760:89:1:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:4;4106:31:1;735:10:4;4122:7:1;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:4;4900:37:1;4916:4;735:10:4;4931:5:1;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:1;;4757:244;-1:-1:-1;;;;4757:244:1:o;3150:111:5:-;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;3219:27:5;::::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;3219:34:5::1;3249:4;3219:34;::::0;;1820:28;3150:111;:::o;4329:487::-;4447:7;4491;;4480;:18;;4472:62;;;;-1:-1:-1;;;4472:62:5;;4552:2:6;4472:62:5;;;4534:21:6;4591:2;4571:18;;;4564:30;4630:33;4610:18;;;4603:61;4681:18;;4472:62:5;4350:355:6;4472:62:5;4550:17;4545:264;;4585:15;4610:27;4629:7;4610:18;:27::i;:::-;-1:-1:-1;4584:53:5;;-1:-1:-1;4652:14:5;;-1:-1:-1;;;4652:14:5;4545:264;4702:23;4733:27;4752:7;4733:18;:27::i;:::-;-1:-1:-1;4699:61:5;;-1:-1:-1;4775:22:5;;-1:-1:-1;;;4775:22:5;5152:339;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;5240:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;5239:21;5231:61;;;::::0;-1:-1:-1;;;5231:61:5;;4912:2:6;5231:61:5::1;::::0;::::1;4894:21:6::0;4951:2;4931:18;;;4924:30;4990:29;4970:18;;;4963:57;5037:18;;5231:61:5::1;4710:351:6::0;5231:61:5::1;-1:-1:-1::0;;;;;5307:16:5;::::1;5326:1;5307:16:::0;;;:7:::1;:16;::::0;;;;;:20;5303:109:::1;;-1:-1:-1::0;;;;;5383:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;5363:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;5344:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;5303:109:::1;-1:-1:-1::0;;;;;5422:20:5::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;5422:27:5::1;5445:4;5422:27:::0;;::::1;::::0;;;5460:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5460:23:5::1;::::0;;::::1;::::0;;5152:339::o;3645:254::-;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;3752:27:5;::::1;3730:115;;;;-1:-1:-1::0;;;3730:115:5::1;;;;;;;:::i;:::-;3856:19;:35:::0;;-1:-1:-1;;;;;3856:35:5;::::1;-1:-1:-1::0;;;;;;3856:35:5;;::::1;;::::0;;3645:254;:::o;2638:278::-;-1:-1:-1;;;;;2785:19:5;;2756:7;2785:19;;;:11;:19;;;;;;;;2781:74;;;-1:-1:-1;;;;;;2828:15:5;;;;;:7;:15;;;;;;;2638:278::o;2781:74::-;-1:-1:-1;;;;;2892:15:5;;;;;;:7;:15;;;;;;2872:36;;:19;:36::i;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:4;3419:27:1;735:10:4;3436:2:1;3440:5;3419:9;:27::i;3387:250:5:-;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;3492:27:5;::::1;3470:115;;;;-1:-1:-1::0;;;3470:115:5::1;;;;;;;:::i;:::-;3596:17;:33:::0;;-1:-1:-1;;;;;3596:33:5;::::1;-1:-1:-1::0;;;;;;3596:33:5;;::::1;;::::0;;3387:250;:::o;3269:110::-;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;3336:27:5::1;3366:5;3336:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;3336:35:5::1;::::0;;3269:110::o;5499:482::-;1766:6;;1835:10;;1766:6;;;-1:-1:-1;;;;;1766:6:5;-1:-1:-1;;;;;1824:21:5;;1820:28;;-1:-1:-1;;;;;5584:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;5576:60;;;::::0;-1:-1:-1;;;5576:60:5;;5675:2:6;5576:60:5::1;::::0;::::1;5657:21:6::0;5714:2;5694:18;;;5687:30;5753:29;5733:18;;;5726:57;5800:18;;5576:60:5::1;5473:351:6::0;5576:60:5::1;5652:9;5647:327;5671:9;:16:::0;5667:20;::::1;5647:327;;;5729:7;-1:-1:-1::0;;;;;5713:23:5::1;:9;5723:1;5713:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5713:12:5::1;:23:::0;5709:254:::1;;5772:9;5782:16:::0;;:20:::1;::::0;5801:1:::1;::::0;5782:20:::1;:::i;:::-;5772:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5757:9:::1;:12:::0;;-1:-1:-1;;;;;5772:31:5;;::::1;::::0;5767:1;;5757:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;5757:46:5::1;-1:-1:-1::0;;;;;5757:46:5;;::::1;;::::0;;5822:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;5861:11:::1;:20:::0;;;;:28;;-1:-1:-1;;5861:28:5::1;::::0;;5908:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5908:15:5;;;;;-1:-1:-1;;;;;;5908:15:5::1;::::0;;;;;5647:327:::1;5499:482:::0;:::o;5709:254::-:1;5689:3;;5647:327;;;;5499:482:::0;:::o;10997:553::-;11105:7;11127;11149;11171;11206:16;11225:29;11246:7;11225:20;:29::i;:::-;11206:48;-1:-1:-1;11265:23:5;11291:18;11206:48;11291:7;:18;:::i;:::-;11265:44;;11320:19;11342:10;:8;:10::i;:::-;11320:32;-1:-1:-1;11363:23:5;11389:29;11320:32;11389:15;:29;:::i;:::-;11363:55;-1:-1:-1;11429:15:5;11447:21;11457:11;11447:7;:21;:::i;:::-;11429:39;11496:15;;-1:-1:-1;11513:15:5;;-1:-1:-1;11530:11:5;;-1:-1:-1;10997:553:5;-1:-1:-1;;;;10997:553:5:o;8715:128:1:-;8799:37;8808:5;8815:7;8824:5;8831:4;8799:8;:37::i;:::-;8715:128;;;:::o;10404:476::-;-1:-1:-1;;;;;3638:18:1;;;10503:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10569:36:1;;10565:309;;;10644:5;10625:16;:24;10621:130;;;10676:60;;-1:-1:-1;;;10676:60:1;;-1:-1:-1;;;;;6486:32:6;;10676:60:1;;;6468:51:6;6535:18;;;6528:34;;;6578:18;;;6571:34;;;6441:18;;10676:60:1;6266:345:6;10621:130:1;10792:57;10801:5;10808:7;10836:5;10817:16;:24;10843:5;10792:8;:57::i;:::-;10493:387;10404:476;;;:::o;5989:842:5:-;-1:-1:-1;;;;;6138:20:5;;6130:70;;;;-1:-1:-1;;;6130:70:5;;6818:2:6;6130:70:5;;;6800:21:6;6857:2;6837:18;;;6830:30;6896:34;6876:18;;;6869:62;-1:-1:-1;;;6947:18:6;;;6940:35;6992:19;;6130:70:5;6616:401:6;6130:70:5;-1:-1:-1;;;;;6219:23:5;;6211:71;;;;-1:-1:-1;;;6211:71:5;;7224:2:6;6211:71:5;;;7206:21:6;7263:2;7243:18;;;7236:30;7302:34;7282:18;;;7275:62;-1:-1:-1;;;7353:18:6;;;7346:33;7396:19;;6211:71:5;7022:399:6;6211:71:5;6293:21;6317:17;6327:6;6317:9;:17::i;:::-;6293:41;;6384:6;6367:13;:23;;6345:111;;;;-1:-1:-1;;;6345:111:5;;7628:2:6;6345:111:5;;;7610:21:6;7667:2;7647:18;;;7640:30;7706:34;7686:18;;;7679:62;-1:-1:-1;;;7757:18:6;;;7750:36;7803:19;;6345:111:5;7426:402:6;6345:111:5;-1:-1:-1;;;;;2595:27:5;;2571:4;2595:27;;;:18;:27;;;;;;;;6469:143;;6564:15;;6554:6;6533:20;6543:9;6533;:20::i;:::-;:27;;;;:::i;:::-;:46;;6525:75;;;;-1:-1:-1;;;6525:75:5;;8035:2:6;6525:75:5;;;8017:21:6;8074:2;8054:18;;;8047:30;-1:-1:-1;;;8093:18:6;;;8086:46;8149:18;;6525:75:5;7833:340:6;6525:75:5;-1:-1:-1;;;;;6658:26:5;;6622:12;6658:26;;;:18;:26;;;;;;6637:4;;6658:26;;;:59;;-1:-1:-1;;;;;;6688:29:5;;;;;;:18;:29;;;;;;;;6658:59;6654:107;;;-1:-1:-1;6744:5:5;6654:107;6773:50;6788:6;6796:9;6807:6;6815:7;6773:14;:50::i;:::-;6119:712;;5989:842;;;:::o;4824:320::-;4919:7;4977;;4966;:18;;4944:110;;;;-1:-1:-1;;;4944:110:5;;8380:2:6;4944:110:5;;;8362:21:6;8419:2;8399:18;;;8392:30;8458:34;8438:18;;;8431:62;-1:-1:-1;;;8509:18:6;;;8502:40;8559:19;;4944:110:5;8178:406:6;4944:110:5;5065:19;5087:10;:8;:10::i;:::-;5065:32;-1:-1:-1;5115:21:5;5065:32;5115:7;:21;:::i;:::-;5108:28;4824:320;-1:-1:-1;;;4824:320:5:o;10735:254::-;10831:7;10856:16;10892:7;;10875:14;;:24;;;;:::i;:::-;10856:43;-1:-1:-1;10910:16:5;10952:3;10930:18;10856:43;10930:7;:18;:::i;:::-;10929:26;;;;:::i;:::-;10910:45;10735:254;-1:-1:-1;;;;10735:254:5:o;11821:161::-;11863:7;11884:15;11901;11920:19;:17;:19::i;:::-;11883:56;;-1:-1:-1;11883:56:5;-1:-1:-1;11957:17:5;11883:56;;11957:17;:::i;:::-;11950:24;;;;11821:161;:::o;9690:432:1:-;-1:-1:-1;;;;;9802:19:1;;9798:89;;9844:32;;-1:-1:-1;;;9844:32:1;;9873:1;9844:32;;;1671:51:6;1644:18;;9844:32:1;1525:203:6;9798:89:1;-1:-1:-1;;;;;9900:21:1;;9896:90;;9944:31;;-1:-1:-1;;;9944:31:1;;9972:1;9944:31;;;1671:51:6;1644:18;;9944:31:1;1525:203:6;9896:90:1;-1:-1:-1;;;;;9995:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10040:76;;;;10090:7;-1:-1:-1;;;;;10074:31:1;10083:5;-1:-1:-1;;;;;10074:31:1;;10099:5;10074:31;;;;1489:25:6;;1477:2;1462:18;;1343:177;10074:31:1;;;;;;;;9690:432;;;;:::o;6839:794:5:-;6985:7;6980:55;;7009:14;:12;:14::i;:::-;-1:-1:-1;;;;;7051:17:5;;;;;;:11;:17;;;;;;;;:37;;;;-1:-1:-1;;;;;;7073:15:5;;;;;;:11;:15;;;;;;;;7072:16;7051:37;7047:511;;;7105:38;7127:4;7133:2;7137:5;7105:21;:38::i;:::-;7047:511;;;-1:-1:-1;;;;;7166:17:5;;;;;;:11;:17;;;;;;;;7165:18;:37;;;;-1:-1:-1;;;;;;7187:15:5;;;;;;:11;:15;;;;;;;;7165:37;7161:397;;;7219:36;7239:4;7245:2;7249:5;7219:19;:36::i;7161:397::-;-1:-1:-1;;;;;7278:17:5;;;;;;:11;:17;;;;;;;;7277:18;:38;;;;-1:-1:-1;;;;;;7300:15:5;;;;;;:11;:15;;;;;;;;7299:16;7277:38;7273:285;;;7332:34;7350:4;7356:2;7360:5;7332:17;:34::i;7273:285::-;-1:-1:-1;;;;;7388:17:5;;;;;;:11;:17;;;;;;;;:36;;;;-1:-1:-1;;;;;;7409:15:5;;;;;;:11;:15;;;;;;;;7388:36;7384:174;;;7441:38;7463:4;7469:2;7473:5;7441:21;:38::i;7384:174::-;7512:34;7530:4;7536:2;7540:5;7512:17;:34::i;:::-;7575:7;7570:56;;7599:15;7949:22;;7932:14;:39;7992:15;;7982:7;:25;7888:127;11990:662;12088:7;;12124;;12041;;;;;12144:366;12168:9;:16;12164:20;;12144:366;;;12252:7;12228;:21;12236:9;12246:1;12236:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12236:12:5;12228:21;;;;;;;;;;;;;:31;;:83;;;12304:7;12280;:21;12288:9;12298:1;12288:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12288:12:5;12280:21;;;;;;;;;;;;;:31;12228:83;12206:181;;;12354:7;;12363;;12346:25;;;;;;;11990:662;;:::o;12206:181::-;12421:7;:21;12429:9;12439:1;12429:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12429:12:5;12421:21;;;;;;;;;;;;;12411:31;;:7;:31;:::i;:::-;12401:41;;12477:7;:21;12485:9;12495:1;12485:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12485:12:5;12477:21;;;;;;;;;;;;;12467:31;;:7;:31;:::i;:::-;12457:41;-1:-1:-1;12186:3:5;;12144:366;;;;12546:7;;12536;;:17;;;;:::i;:::-;12526:7;:27;12522:85;;;12578:7;;12587;;12570:25;;;;;;11990:662;;:::o;12522:85::-;12627:7;;12636;;-1:-1:-1;11990:662:5;-1:-1:-1;11990:662:5:o;7641:239::-;7688:14;;:19;:35;;;;-1:-1:-1;7711:7:5;;:12;7688:35;7684:48;;;7641:239::o;7684:48::-;7769:14;;;7744:22;:39;7812:7;;;7794:15;:25;-1:-1:-1;7832:18:5;;;;7861:11;7641:239::o;9323:664::-;9474:15;9504:23;9542;9580:19;9613:27;9632:7;9613:18;:27::i;:::-;-1:-1:-1;;;;;9669:15:5;;;;;;:7;:15;;;;;;9459:181;;-1:-1:-1;9459:181:5;;-1:-1:-1;9459:181:5;-1:-1:-1;9459:181:5;-1:-1:-1;9669:25:5;;9687:7;;9669:25;:::i;:::-;-1:-1:-1;;;;;9651:15:5;;;;;;:7;:15;;;;;;;;:43;;;;9723:7;:15;;;;:25;;9741:7;;9723:25;:::i;:::-;-1:-1:-1;;;;;9705:15:5;;;;;;;:7;:15;;;;;;:43;;;;9780:18;;;;;;;:36;;9801:15;;9780:36;:::i;:::-;-1:-1:-1;;;;;9759:18:5;;;;;;:7;:18;;;;;:57;9829:44;9844:6;9852:7;9861:11;9829:14;:44::i;:::-;9884:33;9896:7;9905:11;9884;:33::i;:::-;9952:9;-1:-1:-1;;;;;9935:44:5;9944:6;-1:-1:-1;;;;;9935:44:5;;9963:15;9935:44;;;;1489:25:6;;1477:2;1462:18;;1343:177;9935:44:5;;;;;;;;9448:539;;;;9323:664;;;:::o;8639:676::-;8788:15;8818:23;8856;8894:19;8927:27;8946:7;8927:18;:27::i;:::-;-1:-1:-1;;;;;8983:15:5;;;;;;:7;:15;;;;;;8773:181;;-1:-1:-1;8773:181:5;;-1:-1:-1;8773:181:5;-1:-1:-1;8773:181:5;-1:-1:-1;8983:25:5;;8773:181;;8983:25;:::i;:::-;-1:-1:-1;;;;;8965:15:5;;;;;;;:7;:15;;;;;;;;:43;;;;9040:18;;;;;:7;:18;;;;;:36;;9061:15;;9040:36;:::i;:::-;-1:-1:-1;;;;;9019:18:5;;;;;;:7;:18;;;;;;;;:57;;;;9108:7;:18;;;;:36;;9129:15;;9108:36;:::i;8023:608::-;8170:15;8200:23;8238;8276:19;8309:27;8328:7;8309:18;:27::i;:::-;-1:-1:-1;;;;;8367:15:5;;;;;;:7;:15;;;;;;8155:181;;-1:-1:-1;8155:181:5;;-1:-1:-1;8155:181:5;-1:-1:-1;8155:181:5;-1:-1:-1;8367:25:5;;8155:181;;8367:25;:::i;9995:732::-;10146:15;10176:23;10214;10252:19;10285:27;10304:7;10285:18;:27::i;:::-;-1:-1:-1;;;;;10341:15:5;;;;;;:7;:15;;;;;;10131:181;;-1:-1:-1;10131:181:5;;-1:-1:-1;10131:181:5;-1:-1:-1;10131:181:5;-1:-1:-1;10341:25:5;;10359:7;;10341:25;:::i;:::-;-1:-1:-1;;;;;10323:15:5;;;;;;:7;:15;;;;;;;;:43;;;;10395:7;:15;;;;:25;;10413:7;;10395:25;:::i;12660:609::-;12791:15;12831:3;12820:7;;12810;:17;;;;:::i;:::-;12809:25;;;;:::i;:::-;12791:43;-1:-1:-1;12849:11:5;;12845:417;;12877:15;12921:1;12896:21;12906:11;12896:7;:21;:::i;:::-;12895:27;;;;:::i;:::-;12974:17;;-1:-1:-1;;;;;12974:17:5;12966:26;;;;:7;:26;;;;;;12877:45;;-1:-1:-1;12966:36:5;;12877:45;;12966:36;:::i;:::-;12945:17;;-1:-1:-1;;;;;12945:17:5;;;12937:26;;;;:7;:26;;;;;;:65;;;;13073:19;;;;;13065:28;;;;:55;;13113:7;;13065:55;:::i;:::-;13025:19;;-1:-1:-1;;;;;13025:19:5;;;13017:28;;;;:7;:28;;;;;;;;;:103;;;;13157:17;;13140:44;;1489:25:6;;;13157:17:5;;;;13140:44;;;;;;1462:18:6;13140:44:5;;;;;;;13221:19;;13204:46;;1489:25:6;;;-1:-1:-1;;;;;13221:19:5;;;;13204:46;;;;;1477:2:6;1462:18;13204:46:5;;;;;;;12862:400;12780:489;12660:609;;;:::o;11558:255::-;11636:12;11680:3;11662:14;;11652:7;:24;;;;:::i;:::-;11651:32;;;;:::i;:::-;11636:47;-1:-1:-1;11694:12:5;11709:18;11716:11;11636:47;11709:18;:::i;:::-;11694:33;;11760:4;11750:7;;:14;;;;:::i;:::-;11740:7;:24;11788:10;;:17;;11801:4;;11788:17;:::i;:::-;11775:10;:30;-1:-1:-1;;;;11558:255:5:o;14:226:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:6;;14:226;-1:-1:-1;14:226:6:o;245:418::-;394:2;383:9;376:21;357:4;426:6;420:13;469:6;464:2;453:9;449:18;442:34;528:6;523:2;515:6;511:15;506:2;495:9;491:18;485:50;584:1;579:2;570:6;559:9;555:22;551:31;544:42;654:2;647;643:7;638:2;630:6;626:15;622:29;611:9;607:45;603:54;595:62;;;245:418;;;;:::o;668:173::-;736:20;;-1:-1:-1;;;;;785:31:6;;775:42;;765:70;;831:1;828;821:12;765:70;668:173;;;:::o;846:300::-;914:6;922;975:2;963:9;954:7;950:23;946:32;943:52;;;991:1;988;981:12;943:52;1014:29;1033:9;1014:29;:::i;:::-;1004:39;1112:2;1097:18;;;;1084:32;;-1:-1:-1;;;846:300:6:o;1733:374::-;1810:6;1818;1826;1879:2;1867:9;1858:7;1854:23;1850:32;1847:52;;;1895:1;1892;1885:12;1847:52;1918:29;1937:9;1918:29;:::i;:::-;1908:39;;1966:38;2000:2;1989:9;1985:18;1966:38;:::i;:::-;1733:374;;1956:48;;-1:-1:-1;;;2073:2:6;2058:18;;;;2045:32;;1733:374::o;2301:186::-;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;2492:395::-;2557:6;2565;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2679:23;;;-1:-1:-1;2778:2:6;2763:18;;2750:32;2820:15;;2813:23;2801:36;;2791:64;;2851:1;2848;2841:12;2791:64;2874:7;2864:17;;;2492:395;;;;;:::o;2892:260::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3060:29;3079:9;3060:29;:::i;:::-;3050:39;;3108:38;3142:2;3131:9;3127:18;3108:38;:::i;:::-;3098:48;;2892:260;;;;;:::o;3570:127::-;3631:10;3626:3;3622:20;3619:1;3612:31;3662:4;3659:1;3652:15;3686:4;3683:1;3676:15;3702:128;3769:9;;;3790:11;;;3787:37;;;3804:18;;:::i;3835:125::-;3900:9;;;3921:10;;;3918:36;;;3934:18;;:::i;3965:380::-;4044:1;4040:12;;;;4087;;;4108:61;;4162:4;4154:6;4150:17;4140:27;;4108:61;4215:2;4207:6;4204:14;4184:18;4181:38;4178:161;;4261:10;4256:3;4252:20;4249:1;4242:31;4296:4;4293:1;4286:15;4324:4;4321:1;4314:15;4178:161;;3965:380;;;:::o;5066:402::-;5268:2;5250:21;;;5307:2;5287:18;;;5280:30;5346:34;5341:2;5326:18;;5319:62;-1:-1:-1;;;5412:2:6;5397:18;;5390:36;5458:3;5443:19;;5066:402::o;5829:127::-;5890:10;5885:3;5881:20;5878:1;5871:31;5921:4;5918:1;5911:15;5945:4;5942:1;5935:15;5961:127;6022:10;6017:3;6013:20;6010:1;6003:31;6053:4;6050:1;6043:15;6077:4;6074:1;6067:15;6093:168;6166:9;;;6197;;6214:15;;;6208:22;;6194:37;6184:71;;6235:18;;:::i;8589:217::-;8629:1;8655;8645:132;;8699:10;8694:3;8690:20;8687:1;8680:31;8734:4;8731:1;8724:15;8762:4;8759:1;8752:15;8645:132;-1:-1:-1;8791:9:6;;8589:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1322200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24779",
								"balanceOf(address)": "infinite",
								"changeDevelopmentAccount(address)": "26791",
								"changeMarketingAccount(address)": "26835",
								"decimals()": "2311",
								"excludeAccountFromReward(address)": "infinite",
								"excludeFromFee(address)": "26851",
								"getDevelopmentAccount()": "2431",
								"getMarketingAccount()": "2397",
								"getTaxFee()": "2379",
								"includeAccountinReward(address)": "infinite",
								"includeInFee(address)": "26838",
								"isExcluded(address)": "2635",
								"isExcludedFromFee(address)": "2657",
								"name()": "infinite",
								"owner()": "2452",
								"reflect(uint256)": "infinite",
								"reflectionFee()": "2380",
								"reflectionFromToken(uint256,bool)": "infinite",
								"symbol()": "infinite",
								"totalFeesRedistributed()": "2336",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_getCompleteTaxValue(uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_getTransferValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"removeAllFee()": "62689",
								"restoreAllFee()": "infinite",
								"taxFeeTransfer(address,uint256,uint256)": "infinite",
								"tokenFromReflection(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 441,
									"end": 476,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 466,
									"end": 476,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 441,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 441,
									"end": 476,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 622,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 592,
									"end": 622,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 911,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 933,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 923,
									"end": 932,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 923,
									"end": 932,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 911,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 911,
									"end": 933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 911,
									"end": 933,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 933,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 900,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 933,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 908,
									"name": "PUSH",
									"source": 5,
									"value": "989680"
								},
								{
									"begin": 900,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 900,
									"end": 933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 900,
									"end": 933,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 933,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 869,
									"end": 933,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 869,
									"end": 933,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 942,
									"end": 1648,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21ACA122A921A0AA29A1A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4359424343"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 999,
									"end": 1008,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 999,
									"end": 1013,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1013,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1013,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1013,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1047,
									"end": 1069,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1047,
									"end": 1069,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1047,
									"end": 1069,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1047,
									"end": 1069,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1047,
									"end": 1069,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1034,
									"end": 1069,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1034,
									"end": 1069,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1034,
									"end": 1044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "3B9ACA00"
								},
								{
									"begin": 1034,
									"end": 1069,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1034,
									"end": 1069,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1034,
									"end": 1069,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1034,
									"end": 1069,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1024,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1024,
									"end": 1069,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1024,
									"end": 1069,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1024,
									"end": 1069,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1098,
									"end": 1111,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1098,
									"end": 1111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1111,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1111,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1098,
									"end": 1111,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1091,
									"end": 1112,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1091,
									"end": 1112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1091,
									"end": 1112,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1091,
									"end": 1112,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1091,
									"end": 1112,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1091,
									"end": 1112,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1087,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1080,
									"end": 1113,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1113,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 1144,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1140,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 1126,
									"end": 1144,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1144,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1144,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1177,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1155,
									"end": 1194,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1194,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1194,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 1214,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1207,
									"end": 1218,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 1218,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 1218,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1229,
									"end": 1254,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1284,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1267,
									"end": 1293,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1287,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1287,
									"end": 1293,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1388,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 1397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1397,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1451,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1452,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1452,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1452,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1452,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1459,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1508,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1489,
									"end": 1508,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1508,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1508,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1509,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1509,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1509,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1509,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1509,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1516,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1558,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1560,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1560,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1560,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1560,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1560,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1527,
									"end": 1567,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1603,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1603,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1592,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1585,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1593,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1603,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1603,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1603,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1640,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1614,
									"end": 1640,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1620,
									"end": 1630,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1620,
									"end": 1630,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1619,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1614,
									"end": 1640,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1640,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1614,
									"end": 1640,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4876,
									"end": 4927,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7629,
									"end": 7630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7633,
									"end": 7640,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7642,
									"end": 7647,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7613,
									"end": 7648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6238,
									"end": 6243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6222,
									"end": 6243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6274,
									"end": 6293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5270,
									"end": 5321,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 5068,
									"end": 5413,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6811,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7019,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7081,
									"end": 7085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7091,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5552,
									"end": 5554,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 146,
									"end": 521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 234,
									"end": 235,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 287,
									"end": 288,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 285,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 274,
									"end": 289,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 337,
									"end": 341,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 335,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 328,
									"end": 342,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 322,
									"end": 326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 319,
									"end": 343,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 316,
									"end": 366,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 316,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 316,
									"end": 366,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 346,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 346,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 346,
									"end": 364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 346,
									"end": 364,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 346,
									"end": 364,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 397,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 394,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 382,
									"end": 398,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 379,
									"end": 428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 379,
									"end": 428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 493,
									"end": 494,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 464,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 464,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 595,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 595,
									"end": 675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 646,
									"end": 647,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 595,
									"end": 675,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 595,
									"end": 675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 694,
									"end": 698,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 684,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 684,
									"end": 760,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 745,
									"end": 750,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 760,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 684,
									"end": 760,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 776,
									"end": 780,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 794,
									"end": 795,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 819,
									"end": 820,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 833,
									"end": 838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 833,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 833,
									"end": 838,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 894,
									"end": 897,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 884,
									"end": 892,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 881,
									"end": 898,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 878,
									"end": 921,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 878,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 878,
									"end": 921,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 901,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 901,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 901,
									"end": 919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 901,
									"end": 919,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 901,
									"end": 919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 943,
									"end": 959,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 959,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1117,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1105,
									"end": 1113,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1118,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1099,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 1090,
									"end": 1094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1100,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1119,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1079,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 1067,
									"end": 1075,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1080,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1061,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1120,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1228,
									"end": 1233,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1300,
									"end": 1308,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1298,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1275,
									"end": 1317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1360,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1364,
									"end": 1382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1422,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1422,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1498,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1549,
									"end": 1557,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1522,
									"end": 1558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1558,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1737,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1737,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1706,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1706,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1660,
									"end": 1731,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1711,
									"end": 1729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1742,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1803,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1798,
									"end": 1801,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1794,
									"end": 1814,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1815,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1838,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1824,
									"end": 1839,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1862,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1855,
									"end": 1856,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1848,
									"end": 1863,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2071,
									"end": 2075,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2076,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2049,
									"end": 2076,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2049,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2126,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2122,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2113,
									"end": 2127,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2093,
									"end": 2111,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2090,
									"end": 2128,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2170,
									"end": 2180,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2165,
									"end": 2168,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2161,
									"end": 2181,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2151,
									"end": 2182,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2202,
									"end": 2203,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2195,
									"end": 2210,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2230,
									"end": 2231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2223,
									"end": 2238,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2487,
									"end": 2489,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2482,
									"end": 2485,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2490,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2523,
									"end": 2528,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2521,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2529,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2567,
									"end": 2571,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2564,
									"end": 2565,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2554,
									"end": 2572,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2639,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2625,
									"end": 2635,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2621,
									"end": 2640,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2619,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2614,
									"end": 2641,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2604,
									"end": 2642,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2661,
									"end": 2671,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2658,
									"end": 2678,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2753,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2746,
									"end": 2749,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2742,
									"end": 2754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2740,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2735,
									"end": 2755,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2733,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 2756,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2756,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2756,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 2826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2884,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2850,
									"end": 2851,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2839,
									"end": 2852,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3079,
									"end": 4378,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3079,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3209,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3209,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3221,
									"end": 3251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3221,
									"end": 3251,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3254,
									"end": 3272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3373,
									"end": 3379,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3365,
									"end": 3369,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3370,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3333,
									"end": 3371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3327,
									"end": 3331,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3283,
									"end": 3380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3433,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3449,
									"end": 3463,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3463,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3477,
									"end": 3478,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4165,
									"end": 4166,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4228,
									"end": 4254,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3036,
									"end": 3037,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3028,
									"end": 3052,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3024,
									"end": 3053,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3054,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3011,
									"end": 3068,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4281,
									"end": 4362,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4281,
									"end": 4362,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3442,
									"end": 4372,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2356,
									"end": 2374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2356,
									"end": 2374,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3640,
									"end": 3647,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3634,
									"end": 3648,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3742,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3743,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3829,
									"end": 3833,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3782,
									"end": 3783,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3656,
									"end": 3668,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3633,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3882,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3883,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3931,
									"end": 3957,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4020,
									"end": 4021,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4035,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 4012,
									"end": 4036,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4008,
									"end": 4045,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4046,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 4047,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 4048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 4048,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4108,
									"end": 4109,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4088,
									"end": 4110,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4111,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4111,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3079,
									"end": 4378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4415,
									"end": 4416,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4480,
									"end": 4483,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4476,
									"end": 4496,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4473,
									"end": 4474,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4466,
									"end": 4497,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4524,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4517,
									"end": 4518,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4510,
									"end": 4525,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4545,
									"end": 4546,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4538,
									"end": 4553,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "MOD",
									"source": 6
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 4699,
									"end": 4717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5037,
									"end": 5055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 13272,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea3c0acdb4beafad64dbd09074803c9e14ee40681b0fee36229882af80cb582764736f6c634300081d0033",
									".code": [
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "706407FD"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "EA2F0B37"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "F66608FE"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "FDEB889F"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "C4863770"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "CBA0E996"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "706407FD"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "838FCC90"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "83AD7994"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "32035504"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "437823EC"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "4549B039"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "5342ACB4"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "6049876E"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "53AB182"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "1CF8FEF5"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 13272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3907,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3907,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1151,
											"end": 1338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2112,
											"end": 2296,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3124,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3124,
											"end": 3134,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3042,
											"end": 3142,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3150,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3150,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4329,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4329,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2506,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2630,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5152,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5152,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3645,
											"end": 3899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3645,
											"end": 3899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2638,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2638,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2278,
											"end": 2382,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2170,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 2156,
											"end": 2170,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2083,
											"end": 2178,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3387,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3387,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2924,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3017,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 3034,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3269,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3269,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2186,
											"end": 2270,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5499,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5499,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3907,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3999,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4169,
											"end": 4176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4150,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4150,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4206,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4195,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4231,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4252,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4242,
											"end": 4269,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4293,
											"end": 4303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4293,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4290,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3219,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3246,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3253,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3219,
											"end": 3253,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3253,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4329,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4487,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4534,
											"end": 4555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4350,
											"end": 4705,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4472,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4545,
											"end": 4809,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4629,
											"end": 4636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4610,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4637,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4610,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4652,
											"end": 4666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4666,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4809,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4545,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4733,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4760,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4733,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5152,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5240,
											"end": 5260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5240,
											"end": 5260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5231,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4710,
											"end": 5061,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5231,
											"end": 5292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5307,
											"end": 5323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5323,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5303,
											"end": 5412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5383,
											"end": 5399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5399,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5363,
											"end": 5400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5363,
											"end": 5400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5363,
											"end": 5400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5344,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5400,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5303,
											"end": 5412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5422,
											"end": 5442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5422,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5422,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5449,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 5460,
											"end": 5483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 3779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3779,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3730,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3730,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3891,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2638,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2796,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2855,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2781,
											"end": 2855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2855,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2781,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2872,
											"end": 2908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2872,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3492,
											"end": 3519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3470,
											"end": 3585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3470,
											"end": 3585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3269,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3336,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5584,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5584,
											"end": 5604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5782,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C726561647920696E636C756465640000000000"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5473,
											"end": 5824,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5576,
											"end": 5636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5671,
											"end": 5687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5687,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5723,
											"end": 5724,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5713,
											"end": 5725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5709,
											"end": 5963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5782,
											"end": 5798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5782,
											"end": 5802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5782,
											"end": 5802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5772,
											"end": 5803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5767,
											"end": 5768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5767,
											"end": 5768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5757,
											"end": 5769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5757,
											"end": 5803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5803,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5838,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5842,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5889,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5861,
											"end": 5889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5889,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5908,
											"end": 5923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5908,
											"end": 5923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5709,
											"end": 5963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5689,
											"end": 5692,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10997,
											"end": 11550,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10997,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11105,
											"end": 11112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11127,
											"end": 11134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11171,
											"end": 11178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11246,
											"end": 11253,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 11225,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11254,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11225,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11265,
											"end": 11288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11206,
											"end": 11254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11298,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11291,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11309,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11291,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 11342,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11342,
											"end": 11352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11352,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 11342,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11320,
											"end": 11352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11363,
											"end": 11386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11320,
											"end": 11352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11404,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11389,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11418,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11389,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11363,
											"end": 11418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11429,
											"end": 11444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 11457,
											"end": 11468,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11454,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11447,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11429,
											"end": 11468,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11513,
											"end": 11528,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11513,
											"end": 11528,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11530,
											"end": 11541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11541,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10997,
											"end": 11550,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10997,
											"end": 11550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8808,
											"end": 8813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8799,
											"end": 8836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6266,
											"end": 6611,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10801,
											"end": 10806,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10843,
											"end": 10848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 10792,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6831,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5989,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6138,
											"end": 6158,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6138,
											"end": 6158,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6859,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6930,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6992,
											"end": 7011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6616,
											"end": 7017,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6130,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6219,
											"end": 6242,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7265,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 7243,
											"end": 7261,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7243,
											"end": 7261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7022,
											"end": 7421,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6317,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 6317,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6390,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7630,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7610,
											"end": 7631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7669,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7740,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7679,
											"end": 7741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 7786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 7822,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7803,
											"end": 7822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7426,
											"end": 7828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 6345,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6469,
											"end": 6612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6543,
											"end": 6552,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6533,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6553,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6533,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6533,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6533,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6579,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6579,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8047,
											"end": 8077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5768616C652064657465637465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7833,
											"end": 8173,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6525,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 6634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6637,
											"end": 6641,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6637,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6658,
											"end": 6717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6688,
											"end": 6717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6717,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6658,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6654,
											"end": 6761,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6654,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6654,
											"end": 6761,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6761,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6654,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6788,
											"end": 6794,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6813,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6773,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6823,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6773,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4824,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8380,
											"end": 8382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8392,
											"end": 8422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8492,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8578,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8559,
											"end": 8578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8178,
											"end": 8584,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4944,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5087,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5087,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 5065,
											"end": 5097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 5115,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5136,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 5115,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5136,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 5144,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10735,
											"end": 10989,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 10735,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10872,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10899,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 10892,
											"end": 10899,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10875,
											"end": 10899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 10875,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 10856,
											"end": 10899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 10937,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10930,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 10929,
											"end": 10955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 10929,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10910,
											"end": 10955,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10735,
											"end": 10989,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10735,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11982,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11821,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11863,
											"end": 11870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11884,
											"end": 11899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11920,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11920,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11883,
											"end": 11939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11883,
											"end": 11939,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11883,
											"end": 11939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11957,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11883,
											"end": 11939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11883,
											"end": 11939,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 11957,
											"end": 11974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 11974,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11957,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 7633,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6839,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 6992,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 6980,
											"end": 7035,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 7009,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 7009,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7023,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 7009,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7062,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7084,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7073,
											"end": 7088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7072,
											"end": 7088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7133,
											"end": 7135,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7137,
											"end": 7142,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 7105,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7143,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7105,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 7047,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7198,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 7165,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 7161,
											"end": 7558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7245,
											"end": 7247,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 7219,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7558,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 7161,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7289,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7311,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7300,
											"end": 7315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7277,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7273,
											"end": 7558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7350,
											"end": 7354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 7332,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7558,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7273,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7420,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7409,
											"end": 7424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 7384,
											"end": 7558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7463,
											"end": 7467,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7478,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7441,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7558,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 7384,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7530,
											"end": 7534,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7536,
											"end": 7538,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 7512,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7570,
											"end": 7626,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7949,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7949,
											"end": 7971,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7946,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 7932,
											"end": 7971,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 7989,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8015,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12088,
											"end": 12095,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12088,
											"end": 12095,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12124,
											"end": 12131,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 12124,
											"end": 12131,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12168,
											"end": 12184,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12184,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12252,
											"end": 12259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12235,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12236,
											"end": 12245,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 12236,
											"end": 12248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 12248,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12259,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 12228,
											"end": 12311,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12304,
											"end": 12311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12287,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12297,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 12288,
											"end": 12300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12311,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12228,
											"end": 12311,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 12228,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 12387,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12206,
											"end": 12387,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12354,
											"end": 12361,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12354,
											"end": 12361,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12363,
											"end": 12370,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 12363,
											"end": 12370,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 12387,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12206,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12428,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12438,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12439,
											"end": 12440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 12429,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12429,
											"end": 12441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12411,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12411,
											"end": 12442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12411,
											"end": 12418,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12411,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 12411,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12411,
											"end": 12442,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12411,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12484,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12495,
											"end": 12496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 12485,
											"end": 12497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12467,
											"end": 12498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12474,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 12467,
											"end": 12498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12498,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12467,
											"end": 12498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12457,
											"end": 12498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12186,
											"end": 12189,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12186,
											"end": 12189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12543,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12536,
											"end": 12543,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12536,
											"end": 12553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12536,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12533,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12553,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12607,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 12522,
											"end": 12607,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12578,
											"end": 12585,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12578,
											"end": 12585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12607,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 12522,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12634,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12636,
											"end": 12643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12636,
											"end": 12643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11990,
											"end": 12652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11990,
											"end": 12652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 7641,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7702,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 7688,
											"end": 7702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7711,
											"end": 7718,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7711,
											"end": 7718,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7723,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7732,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 7684,
											"end": 7732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7732,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 7684,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7744,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7809,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7794,
											"end": 7819,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7872,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9987,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 9323,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9474,
											"end": 9489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9504,
											"end": 9527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9580,
											"end": 9599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 9632,
											"end": 9639,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 9613,
											"end": 9640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9676,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9459,
											"end": 9640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9694,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9669,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9658,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9666,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9694,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9694,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9694,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9730,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 9723,
											"end": 9748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9723,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9748,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 9723,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9712,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9748,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 9780,
											"end": 9816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9801,
											"end": 9816,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9801,
											"end": 9816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9780,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9780,
											"end": 9816,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 9780,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9766,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9816,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9829,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9859,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9872,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9829,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 9829,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9829,
											"end": 9873,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 9829,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 9896,
											"end": 9903,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 9884,
											"end": 9917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9917,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 9884,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9952,
											"end": 9961,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 9950,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9963,
											"end": 9978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8639,
											"end": 9315,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 8639,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 8946,
											"end": 8953,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8927,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8927,
											"end": 8954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8927,
											"end": 8954,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 8927,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8990,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8983,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 9008,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 9008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 9008,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 9008,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9047,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9076,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9040,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9026,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9076,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9076,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9019,
											"end": 9076,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9115,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9144,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9108,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8023,
											"end": 8631,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 8023,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8170,
											"end": 8185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8309,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 8328,
											"end": 8335,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8309,
											"end": 8336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8309,
											"end": 8336,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 8309,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8374,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8382,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8367,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 8367,
											"end": 8392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8367,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9995,
											"end": 10727,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 9995,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10285,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 10304,
											"end": 10311,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10285,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10312,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 10285,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10348,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10356,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10131,
											"end": 10312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10366,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10341,
											"end": 10366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10338,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10366,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10366,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10366,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10402,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10395,
											"end": 10410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10410,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10410,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10410,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 10395,
											"end": 10420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10395,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12660,
											"end": 13269,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 12660,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12831,
											"end": 12834,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 12820,
											"end": 12827,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 12820,
											"end": 12827,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12810,
											"end": 12827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12809,
											"end": 12834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 12809,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12791,
											"end": 12834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12849,
											"end": 12860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12849,
											"end": 12860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12845,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12845,
											"end": 13262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12877,
											"end": 12892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 12896,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12906,
											"end": 12917,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12896,
											"end": 12903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12896,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12896,
											"end": 12917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12896,
											"end": 12917,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12896,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12895,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 12895,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12974,
											"end": 12991,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12974,
											"end": 12991,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12974,
											"end": 12991,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 12992,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12966,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12966,
											"end": 13002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12877,
											"end": 12922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 12966,
											"end": 13002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12966,
											"end": 13002,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12966,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12944,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 12963,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 13002,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 13002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 13002,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12937,
											"end": 13002,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13073,
											"end": 13092,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13073,
											"end": 13092,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13073,
											"end": 13092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13073,
											"end": 13092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13073,
											"end": 13092,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13093,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13093,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 13065,
											"end": 13120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 13065,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13065,
											"end": 13120,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 13065,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13024,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13045,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13120,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13120,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13120,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13184,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 13250,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 12862,
											"end": 13262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12780,
											"end": 13269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12660,
											"end": 13269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12660,
											"end": 13269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12660,
											"end": 13269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12660,
											"end": 13269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11813,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 11558,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11636,
											"end": 11648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11680,
											"end": 11683,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11662,
											"end": 11676,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 11662,
											"end": 11676,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11659,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11652,
											"end": 11676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 11652,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 11651,
											"end": 11683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 11651,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11694,
											"end": 11706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 11716,
											"end": 11727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11709,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11694,
											"end": 11727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11694,
											"end": 11727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11760,
											"end": 11764,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11750,
											"end": 11764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 11750,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11740,
											"end": 11764,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11788,
											"end": 11798,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 11788,
											"end": 11798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11805,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 11788,
											"end": 11805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11775,
											"end": 11785,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 11775,
											"end": 11805,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11558,
											"end": 11813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 245,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 394,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 420,
											"end": 433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 511,
											"end": 526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 491,
											"end": 509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 535,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 559,
											"end": 568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 555,
											"end": 577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 643,
											"end": 650,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 630,
											"end": 636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 622,
											"end": 651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 607,
											"end": 652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 668,
											"end": 841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 785,
											"end": 816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 954,
											"end": 961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 950,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 946,
											"end": 978,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1014,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1043,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1918,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1966,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3024,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 3060,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 3108,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3804,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3934,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4271,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4256,
											"end": 4259,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "PUSH",
											"source": 6,
											"value": "7A65726F20616464726573732063616E206E6F74206265207468652046656541"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5829,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5900,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5885,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5950,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6088,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5961,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6043,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6261,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6093,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6231,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6184,
											"end": 6255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6235,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8806,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8589,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8645,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8645,
											"end": 8777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8694,
											"end": 8697,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8690,
											"end": 8710,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8724,
											"end": 8739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8766,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8645,
											"end": 8777,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8645,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8791,
											"end": 8800,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8791,
											"end": 8800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"CYBCC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeDevelopmentAccount(address)": "706407fd",
							"changeMarketingAccount(address)": "c4863770",
							"decimals()": "313ce567",
							"excludeAccountFromReward(address)": "6049876e",
							"excludeFromFee(address)": "437823ec",
							"getDevelopmentAccount()": "1cf8fef5",
							"getMarketingAccount()": "838fcc90",
							"getTaxFee()": "f66608fe",
							"includeAccountinReward(address)": "fdeb889f",
							"includeInFee(address)": "ea2f0b37",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromFee(address)": "5342acb4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reflect(uint256)": "053ab182",
							"reflectionFee()": "83ad7994",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"symbol()": "95d89b41",
							"totalFeesRedistributed()": "32035504",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeDevelopmentAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeMarketingAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccountFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDevelopmentAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketingAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccountinReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"reflect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesRedistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"CYBCC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"CYBCC.sol\":{\"keccak256\":\"0xbbb7323f8ad199b2dff307f0aa9741972385fa19370f50c4ece769dac9ac234e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5b85bf531765b94c8d9edebb044108d3c7aa83001e01f196c9fecf10d00dce\",\"dweb:/ipfs/QmNiDHUGMHrceAXFZRkmYjan3qyeRTiYQFAVhGm1oJwc6f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 795,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rOwned",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tOwned",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 803,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 807,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 810,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_excluded",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 812,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_decimals",
								"offset": 0,
								"slot": "10",
								"type": "t_uint8"
							},
							{
								"astId": 816,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_owner",
								"offset": 1,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 825,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tTotal",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 827,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rTotal",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 830,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_reflectionFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousReflectionFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 836,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_taxFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 838,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 840,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_marketingAccount",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 842,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_developmentAccount",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 852,
								"contract": "CYBCC.sol:CYBCC",
								"label": "maxWalletAmount",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5451:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5465:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5481:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5473:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5473:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5473:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5465:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5461:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5485:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5533:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5525:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5525:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5525:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5506:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5506:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5499:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5560:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5574:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5566:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5566:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5560:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5556:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5578:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5628:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5620:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5620:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5620:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5599:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5599:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5592:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5665:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5651:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5651:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:1"
									},
									"scope": 651,
									"src": "5374:308:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6072:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6086:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6102:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6094:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6094:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6094:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6086:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6260:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6282:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6274:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6274:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6296:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6306:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6296:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6274:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6329:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6343:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6329:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6325:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6350:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6400:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6406:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6419:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6375:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6375:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6368:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6453:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6560:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6570:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6560:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6578:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6592:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6578:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6560:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6560:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6082:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6106:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6222:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6238:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6222:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6222:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6636:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6650:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6642:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6642:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6642:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6636:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6851:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6865:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7010:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7020:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7010:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7027:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7010:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7010:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6632:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6654:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6668:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6799:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6815:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6799:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6799:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7081:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7087:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7091:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7072:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7072:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7067:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5688:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6006:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6022:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6014:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6036:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6028:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6048:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6072:0:1"
									},
									"scope": 651,
									"src": "5997:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7503:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7517:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7536:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7528:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7528:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7528:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7517:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7513:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7540:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7590:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7582:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7582:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7582:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7561:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7561:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7554:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7629:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7621:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7621:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7621:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7642:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7613:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7613:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7110:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7456:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7470:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7462:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7487:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7479:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7461:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7503:0:1"
									},
									"scope": 651,
									"src": "7447:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8029:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8062:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8054:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8054:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8043:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8039:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8066:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8114:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8106:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8106:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8106:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8087:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8080:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8145:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8162:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8154:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8154:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8166:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8137:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8137:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7661:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7982:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7996:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7988:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8013:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8005:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8029:0:1"
									},
									"scope": 651,
									"src": "7973:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8789:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8808:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8815:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8824:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8831:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8799:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8799:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8185:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8741:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8733:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8748:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:1"
									},
									"scope": 651,
									"src": "8715:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9788:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9802:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9819:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9811:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9811:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9811:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9802:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9798:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9823:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9873:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9865:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9865:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9865:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9844:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9844:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9837:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9900:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9911:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9911:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9900:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9896:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9923:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9972:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9964:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9964:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9964:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9944:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9944:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9937:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9995:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10007:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9995:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9995:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10025:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9995:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9995:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10044:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10040:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10055:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10083:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10090:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10099:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10074:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10074:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10069:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8849:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9699:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9748:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9740:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9760:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9755:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9755:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9707:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9788:0:1"
									},
									"scope": 651,
									"src": "9690:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10493:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10511:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10503:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10540:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10530:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10530:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10503:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10569:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10593:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10593:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10588:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10588:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10602:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10588:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10569:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10565:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10607:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10625:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10644:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10625:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10621:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10651:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10703:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10712:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10730:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10676:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10676:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10669:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10764:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10801:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10808:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10817:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10836:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10817:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10843:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10792:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10792:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10792:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10128:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10413:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10429:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10452:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10444:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10469:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10461:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10493:0:1"
									},
									"scope": 651,
									"src": "10404:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9776:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10778:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"CYBCC.sol": {
				"ast": {
					"absolutePath": "CYBCC.sol",
					"exportedSymbols": {
						"CYBCC": [
							2139
						],
						"ERC20": [
							651
						]
					},
					"id": 2140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 652,
							"src": "61:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "69:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"151:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "151:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "151:5:5"
								}
							],
							"canonicalName": "CYBCC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2139,
							"linearizedBaseContracts": [
								2139,
								651,
								41,
								755,
								729,
								785
							],
							"name": "CYBCC",
							"nameLocation": "142:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "200:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "164:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 794,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "172:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "164:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 793,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "250:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "214:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "222:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "214:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "233:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "297:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "264:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "272:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "264:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 801,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "283:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 807,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "357:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "324:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "324:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "343:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 810,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "393:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "375:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 808,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "375:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 809,
										"nodeType": "ArrayTypeName",
										"src": "375:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 812,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "425:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "411:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 811,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "457:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "441:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 814,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "466:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "470:6:5",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "466:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 823,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "508:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "483:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "514:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "523:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 819,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "515:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 821,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "515:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "548:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "532:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "532:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "578:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "562:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 830,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "608:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "592:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 828,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 829,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "621:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_reflectionFee",
									"nameLocation": "647:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "631:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_previousReflectionFee",
									"nameLocation": "684:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "668:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "731:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "715:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 838,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "761:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "745:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 840,
									"mutability": "mutable",
									"name": "_marketingAccount",
									"nameLocation": "801:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "785:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 839,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "785:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 842,
									"mutability": "mutable",
									"name": "_developmentAccount",
									"nameLocation": "841:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "825:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 841,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 852,
									"mutability": "mutable",
									"name": "maxWalletAmount",
									"nameLocation": "882:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "869:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 843,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "869:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 851,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303030",
											"id": 844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "900:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 850,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 845,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "911:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [
													{
														"id": 848,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "923:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													],
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 846,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "915:7:5",
														"typeDescriptions": {}
													}
												},
												"id": 849,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "915:18:5",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "911:22:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "900:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "988:660:5",
										"statements": [
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "999:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1011:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "999:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "999:14:5"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1024:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1034:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1047:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 868,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1059:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1051:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1051:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1051:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1047:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1034:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1024:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1024:45:5"
											},
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1080:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 875,
																	"name": "MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1091:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 876,
																				"name": "MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "1098:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 877,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "1104:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1098:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 879,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1097:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1091:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 881,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1090:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1080:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1080:33:5"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "1126:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1143:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1126:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "1126:18:5"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 888,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1155:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 889,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "1180:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1155:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "1155:39:5"
											},
											{
												"expression": {
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 892,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1207:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1217:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1207:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1207:11:5"
											},
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 896,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1229:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 897,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1247:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1229:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "1229:25:5"
											},
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 900,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1267:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 901,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1287:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1267:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:5"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 904,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1370:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 907,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 905,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "1389:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1389:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1370:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1400:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1370:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1370:34:5"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 911,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1415:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 913,
														"indexExpression": {
															"id": 912,
															"name": "_marketingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "1434:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1415:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1455:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1415:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "1415:44:5"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 917,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1470:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 919,
														"indexExpression": {
															"id": 918,
															"name": "_developmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1489:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1470:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1470:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1470:46:5"
											},
											{
												"expression": {
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 923,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1527:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 928,
														"indexExpression": {
															"arguments": [
																{
																	"id": 926,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1554:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CYBCC_$2139",
																		"typeString": "contract CYBCC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CYBCC_$2139",
																		"typeString": "contract CYBCC"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1546:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1546:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1546:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1527:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1563:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1527:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "1527:40:5"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 932,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1578:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 934,
														"indexExpression": {
															"id": 933,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1586:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1578:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 935,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1596:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1578:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "1578:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1620:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1624:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1620:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "1632:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1614:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "1614:26:5"
											}
										]
									},
									"id": 945,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "435942455243415453434f494e",
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "962:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_52ed978c1aeb1014ec164e7f664abe499b296124fc86da52866d6f63fbded442",
														"typeString": "literal_string \"CYBERCATSCOIN\""
													},
													"value": "CYBERCATSCOIN"
												},
												{
													"hexValue": "4359424343",
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "979:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a1e4d5bdd8a279313ac099637956bc9607cc279a897c73c77f26a34d39ed3031",
														"typeString": "literal_string \"CYBCC\""
													},
													"value": "CYBCC"
												}
											],
											"id": 857,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 854,
												"name": "ERC20",
												"nameLocations": [
													"956:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "956:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "956:31:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:2:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:5"
									},
									"scope": 2139,
									"src": "942:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "1683:2:5",
										"statements": []
									},
									"id": 949,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1683:0:5"
									},
									"scope": 2139,
									"src": "1656:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "1748:32:5",
										"statements": [
											{
												"expression": {
													"id": 954,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "1766:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 953,
												"id": 955,
												"nodeType": "Return",
												"src": "1759:13:5"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:5"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1739:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:5"
									},
									"scope": 2139,
									"src": "1693:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1809:47:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 959,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "1824:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1824:7:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 961,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1835:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1839:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1835:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1824:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "1820:28:5",
												"trueBody": {
													"id": 964,
													"nodeType": "PlaceholderStatement",
													"src": "1847:1:5"
												}
											}
										]
									},
									"id": 967,
									"name": "onlyOwner",
									"nameLocation": "1797:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:2:5"
									},
									"src": "1788:68:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1929:35:5",
										"statements": [
											{
												"expression": {
													"id": 973,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "1947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 972,
												"id": 974,
												"nodeType": "Return",
												"src": "1940:16:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1873:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 969,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1904:8:5"
									},
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:2:5"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1922:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 970,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1922:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:7:5"
									},
									"scope": 2139,
									"src": "1864:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "2042:33:5",
										"statements": [
											{
												"expression": {
													"id": 982,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 825,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 983,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1981:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 978,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2015:8:5"
									},
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1992:2:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2033:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:9:5"
									},
									"scope": 2139,
									"src": "1972:103:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "2138:40:5",
										"statements": [
											{
												"expression": {
													"id": 990,
													"name": "_reflectionFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "2156:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 989,
												"id": 991,
												"nodeType": "Return",
												"src": "2149:21:5"
											}
										]
									},
									"functionSelector": "83ad7994",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFee",
									"nameLocation": "2092:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2105:2:5"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2129:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:9:5"
									},
									"scope": 2139,
									"src": "2083:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2237:33:5",
										"statements": [
											{
												"expression": {
													"id": 998,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "2255:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 997,
												"id": 999,
												"nodeType": "Return",
												"src": "2248:14:5"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "2195:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2228:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:9:5"
									},
									"scope": 2139,
									"src": "2186:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "2339:43:5",
										"statements": [
											{
												"expression": {
													"id": 1006,
													"name": "_marketingAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "2357:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1007,
												"nodeType": "Return",
												"src": "2350:24:5"
											}
										]
									},
									"functionSelector": "838fcc90",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketingAccount",
									"nameLocation": "2287:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2330:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:9:5"
									},
									"scope": 2139,
									"src": "2278:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "2453:45:5",
										"statements": [
											{
												"expression": {
													"id": 1014,
													"name": "_developmentAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "2471:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1015,
												"nodeType": "Return",
												"src": "2464:26:5"
											}
										]
									},
									"functionSelector": "1cf8fef5",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDevelopmentAccount",
									"nameLocation": "2399:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:2:5"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2444:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:9:5"
									},
									"scope": 2139,
									"src": "2390:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "2577:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1024,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2595:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1026,
													"indexExpression": {
														"id": 1025,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2614:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2595:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1027,
												"nodeType": "Return",
												"src": "2588:34:5"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "2515:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2541:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2533:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2533:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2532:17:5"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2571:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:6:5"
									},
									"scope": 2139,
									"src": "2506:124:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2770:146:5",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1037,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2785:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1039,
													"indexExpression": {
														"id": 1038,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2797:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2785:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "2781:74:5",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "2806:49:5",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1040,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2828:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1042,
																"indexExpression": {
																	"id": 1041,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "2836:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2828:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1036,
															"id": 1043,
															"nodeType": "Return",
															"src": "2821:22:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1047,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1049,
															"indexExpression": {
																"id": 1048,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "2900:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2892:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1046,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "2872:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1051,
												"nodeType": "Return",
												"src": "2865:43:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2647:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2729:8:5"
									},
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2665:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2657:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:16:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2756:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:9:5"
									},
									"scope": 2139,
									"src": "2638:278:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "2988:46:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1060,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3006:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1062,
													"indexExpression": {
														"id": 1061,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "3018:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3006:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1063,
												"nodeType": "Return",
												"src": "2999:27:5"
											}
										]
									},
									"functionSelector": "cba0e996",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "2933:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2952:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2944:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:17:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2982:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2982:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:6:5"
									},
									"scope": 2139,
									"src": "2924:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "3106:36:5",
										"statements": [
											{
												"expression": {
													"id": 1070,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 830,
													"src": "3124:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1071,
												"nodeType": "Return",
												"src": "3117:17:5"
											}
										]
									},
									"functionSelector": "32035504",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFeesRedistributed",
									"nameLocation": "3051:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3073:2:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3097:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:5"
									},
									"scope": 2139,
									"src": "3042:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "3208:53:5",
										"statements": [
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1080,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3219:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1082,
														"indexExpression": {
															"id": 1081,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3238:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3219:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3249:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3219:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "3219:34:5"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "onlyOwner",
												"nameLocations": [
													"3198:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "3198:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3198:9:5"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "3159:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3182:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3174:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:17:5"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3208:0:5"
									},
									"scope": 2139,
									"src": "3150:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "3325:54:5",
										"statements": [
											{
												"expression": {
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1094,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3336:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1096,
														"indexExpression": {
															"id": 1095,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3336:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3366:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3336:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "3336:35:5"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1091,
												"name": "onlyOwner",
												"nameLocations": [
													"3315:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "3315:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3315:9:5"
										}
									],
									"name": "includeInFee",
									"nameLocation": "3278:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3290:17:5"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3325:0:5"
									},
									"scope": 2139,
									"src": "3269:110:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "3459:178:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3492:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3517:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3509:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3509:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3509:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3492:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3534:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3470:115:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "3470:115:5"
											},
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1118,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3596:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1119,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "3616:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3596:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "3596:33:5"
											}
										]
									},
									"functionSelector": "c4863770",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"3449:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "3449:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3449:9:5"
										}
									],
									"name": "changeMarketingAccount",
									"nameLocation": "3396:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "3427:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "3419:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:23:5"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3459:0:5"
									},
									"scope": 2139,
									"src": "3387:250:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "3719:180:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "3752:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3777:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3769:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3769:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3769:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3752:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3730:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:115:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "3730:115:5"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1140,
														"name": "_developmentAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "3856:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3878:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3856:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "3856:35:5"
											}
										]
									},
									"functionSelector": "706407fd",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"3709:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "3709:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3709:9:5"
										}
									],
									"name": "changeDevelopmentAccount",
									"nameLocation": "3654:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "3687:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "3679:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:23:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3719:0:5"
									},
									"scope": 2139,
									"src": "3645:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "3948:373:5",
										"statements": [
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3967:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "3959:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1150,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3959:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1152,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3976:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3959:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4021:20:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1156,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "4022:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1158,
																"indexExpression": {
																	"id": 1157,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4034:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4022:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4056:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 1155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3999:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3999:114:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "3999:114:5"
											},
											{
												"assignments": [
													1164,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "4133:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "4125:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4125:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "4169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "4150:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4150:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4124:53:5"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1169,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "4188:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1171,
														"indexExpression": {
															"id": 1170,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "4196:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4188:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1172,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "4206:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1174,
															"indexExpression": {
																"id": 1173,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "4214:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4206:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1175,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "4224:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4206:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4188:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "4188:43:5"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "4242:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1180,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4252:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1181,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "4262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4252:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4242:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "4242:27:5"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4280:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1186,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4293:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1187,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "4306:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4293:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4280:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "4280:33:5"
											}
										]
									},
									"functionSelector": "053ab182",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflect",
									"nameLocation": "3916:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "3932:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3924:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:17:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3948:0:5"
									},
									"scope": 2139,
									"src": "3907:414:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "4461:355:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1202,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "4480:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1203,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "4491:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4480:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4500:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4472:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4472:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "4472:62:5"
											},
											{
												"condition": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4549:18:5",
													"subExpression": {
														"id": 1208,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "4550:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "4684:125:5",
													"statements": [
														{
															"assignments": [
																null,
																1220,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1220,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "4710:15:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1227,
																	"src": "4702:23:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4702:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null
															],
															"id": 1224,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "4752:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1221,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "4733:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4733:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4699:61:5"
														},
														{
															"expression": {
																"id": 1225,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "4782:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1200,
															"id": 1226,
															"nodeType": "Return",
															"src": "4775:22:5"
														}
													]
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "4545:264:5",
												"trueBody": {
													"id": 1218,
													"nodeType": "Block",
													"src": "4569:109:5",
													"statements": [
														{
															"assignments": [
																1211,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1211,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "4593:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1218,
																	"src": "4585:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1210,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4585:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1215,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1213,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "4629:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1212,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "4610:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4610:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4584:53:5"
														},
														{
															"expression": {
																"id": 1216,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "4659:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1200,
															"id": 1217,
															"nodeType": "Return",
															"src": "4652:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "4338:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "4366:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4358:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "4380:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4375:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:41:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4447:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:9:5"
									},
									"scope": 2139,
									"src": "4329:487:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "4933:211:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "4966:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1239,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4977:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4966:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4999:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4944:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4944:110:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "4944:110:5"
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "5073:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "5065:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1246,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "5087:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5087:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5065:32:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "rAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "5115:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1250,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5125:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5115:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1252,
												"nodeType": "Return",
												"src": "5108:28:5"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "4833:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "4861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "4853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:17:5"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "4919:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:9:5"
									},
									"scope": 2139,
									"src": "4824:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "5220:271:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5239:21:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1262,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "5240:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1264,
																"indexExpression": {
																	"id": 1263,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "5252:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5240:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5262:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5231:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "5231:61:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1269,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5307:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1270,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "5315:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5307:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5326:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5307:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "IfStatement",
												"src": "5303:109:5",
												"trueBody": {
													"id": 1284,
													"nodeType": "Block",
													"src": "5329:83:5",
													"statements": [
														{
															"expression": {
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1274,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5344:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1276,
																	"indexExpression": {
																		"id": 1275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "5352:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5344:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1278,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "5383:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1280,
																			"indexExpression": {
																				"id": 1279,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "5391:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5383:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1277,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "5363:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5363:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5344:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "5344:56:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1286,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5422:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1288,
														"indexExpression": {
															"id": 1287,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "5434:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5422:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5445:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5422:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "5422:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "5475:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1292,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5460:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5470:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5460:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5460:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "5460:23:5"
											}
										]
									},
									"functionSelector": "6049876e",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1258,
												"name": "onlyOwner",
												"nameLocations": [
													"5210:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "5210:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5210:9:5"
										}
									],
									"name": "excludeAccountFromReward",
									"nameLocation": "5161:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5194:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "5186:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5185:17:5"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5220:0:5"
									},
									"scope": 2139,
									"src": "5152:339:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "5565:416:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1307,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "5584:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1309,
															"indexExpression": {
																"id": 1308,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "5596:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5584:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5606:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															},
															"value": "Account is already included"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5576:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "5576:60:5"
											},
											{
												"body": {
													"id": 1360,
													"nodeType": "Block",
													"src": "5694:280:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1324,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "5713:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1326,
																	"indexExpression": {
																		"id": 1325,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "5723:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5713:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1327,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "5729:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5713:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1359,
															"nodeType": "IfStatement",
															"src": "5709:254:5",
															"trueBody": {
																"id": 1358,
																"nodeType": "Block",
																"src": "5738:225:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1329,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "5757:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1331,
																				"indexExpression": {
																					"id": 1330,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "5767:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5757:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1332,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "5772:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1337,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1336,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1333,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 810,
																							"src": "5782:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5792:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5782:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1335,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5801:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5782:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5772:31:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5757:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1339,
																		"nodeType": "ExpressionStatement",
																		"src": "5757:46:5"
																	},
																	{
																		"expression": {
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1340,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "5822:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1342,
																				"indexExpression": {
																					"id": 1341,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "5830:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5822:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5841:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5822:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1345,
																		"nodeType": "ExpressionStatement",
																		"src": "5822:20:5"
																	},
																	{
																		"expression": {
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1346,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "5861:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1348,
																				"indexExpression": {
																					"id": 1347,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "5873:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5861:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5884:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "5861:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1351,
																		"nodeType": "ExpressionStatement",
																		"src": "5861:28:5"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1352,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "5908:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5918:3:5",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5908:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5908:15:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1356,
																		"nodeType": "ExpressionStatement",
																		"src": "5908:15:5"
																	},
																	{
																		"id": 1357,
																		"nodeType": "Break",
																		"src": "5942:5:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1317,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "5667:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1318,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5671:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5681:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5671:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5667:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"initializationExpression": {
													"assignments": [
														1314
													],
													"declarations": [
														{
															"constant": false,
															"id": 1314,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5660:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1361,
															"src": "5652:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1313,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5652:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1316,
													"initialValue": {
														"hexValue": "30",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5664:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5652:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5689:3:5",
														"subExpression": {
															"id": 1321,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5689:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1323,
													"nodeType": "ExpressionStatement",
													"src": "5689:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5647:327:5"
											}
										]
									},
									"functionSelector": "fdeb889f",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"5555:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "5555:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5555:9:5"
										}
									],
									"name": "includeAccountinReward",
									"nameLocation": "5508:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5539:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "5531:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5530:17:5"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5565:0:5"
									},
									"scope": 2139,
									"src": "5499:482:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "6119:712:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "6138:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6156:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6148:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1375,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6148:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6148:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6138:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6160:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6130:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6130:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "6130:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "6219:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6240:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6232:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6232:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6232:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6219:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6244:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6211:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6211:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "6211:71:5"
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "6301:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "6293:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"arguments": [
														{
															"id": 1396,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "6327:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1395,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053
														],
														"referencedDeclaration": 1053,
														"src": "6317:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6293:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "6367:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1401,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "6384:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6367:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6405:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6345:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6345:111:5"
											},
											{
												"condition": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6472:29:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1407,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "6491:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1406,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6473:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6473:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "IfStatement",
												"src": "6469:143:5",
												"trueBody": {
													"id": 1421,
													"nodeType": "Block",
													"src": "6512:100:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1412,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1367,
																						"src": "6543:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1411,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1053
																					],
																					"referencedDeclaration": 1053,
																					"src": "6533:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6533:20:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1414,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1369,
																				"src": "6554:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6533:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1416,
																			"name": "maxWalletAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "6564:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6533:46:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6581:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		},
																		"value": "Whale detected!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		}
																	],
																	"id": 1410,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6525:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6525:75:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "6525:75:5"
														}
													]
												}
											},
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "6627:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "6622:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1423,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6622:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6637:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6622:19:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1427,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6658:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1429,
														"indexExpression": {
															"id": 1428,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "6677:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6658:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1430,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6688:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1432,
														"indexExpression": {
															"id": 1431,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "6707:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6688:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6658:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "6654:107:5",
												"trueBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "6719:42:5",
													"statements": [
														{
															"expression": {
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1434,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6734:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6734:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "6734:15:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "6788:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "6796:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6807:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1444,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "6815:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1440,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "6773:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6773:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "6773:50:5"
											}
										]
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5998:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1371,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6110:8:5"
									},
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "6018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6051:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "6043:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6079:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "6071:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6071:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:85:5"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:0:5"
									},
									"scope": 2139,
									"src": "5989:842:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "6969:664:5",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6984:8:5",
													"subExpression": {
														"id": 1459,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "6985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1465,
												"nodeType": "IfStatement",
												"src": "6980:55:5",
												"trueBody": {
													"id": 1464,
													"nodeType": "Block",
													"src": "6994:41:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1461,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "7009:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7009:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1463,
															"nodeType": "ExpressionStatement",
															"src": "7009:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1466,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7051:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1468,
														"indexExpression": {
															"id": 1467,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7051:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7072:16:5",
														"subExpression": {
															"baseExpression": {
																"id": 1469,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7073:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1471,
															"indexExpression": {
																"id": 1470,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "7085:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7073:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7051:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7165:18:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1481,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "7166:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1483,
																"indexExpression": {
																	"id": 1482,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "7178:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7166:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1485,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7187:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1487,
															"indexExpression": {
																"id": 1486,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "7199:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7187:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7165:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7277:18:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1496,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7278:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1498,
																	"indexExpression": {
																		"id": 1497,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "7290:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7278:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7299:16:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1500,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7300:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1502,
																	"indexExpression": {
																		"id": 1501,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "7312:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7300:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7277:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1512,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7388:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1514,
																	"indexExpression": {
																		"id": 1513,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "7400:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7388:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1515,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7409:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1517,
																	"indexExpression": {
																		"id": 1516,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "7421:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7409:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7388:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1532,
																"nodeType": "Block",
																"src": "7497:61:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1527,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7530:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1528,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1452,
																					"src": "7536:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1529,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "7540:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1526,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1645,
																				"src": "7512:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7512:34:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1531,
																		"nodeType": "ExpressionStatement",
																		"src": "7512:34:5"
																	}
																]
															},
															"id": 1533,
															"nodeType": "IfStatement",
															"src": "7384:174:5",
															"trueBody": {
																"id": 1525,
																"nodeType": "Block",
																"src": "7426:65:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1520,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1521,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1452,
																					"src": "7469:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1522,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "7473:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1519,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1862,
																				"src": "7441:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7441:38:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1524,
																		"nodeType": "ExpressionStatement",
																		"src": "7441:38:5"
																	}
																]
															}
														},
														"id": 1534,
														"nodeType": "IfStatement",
														"src": "7273:285:5",
														"trueBody": {
															"id": 1511,
															"nodeType": "Block",
															"src": "7317:61:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1506,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "7350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1507,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1452,
																				"src": "7356:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1508,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "7360:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1505,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "7332:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7332:34:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1510,
																	"nodeType": "ExpressionStatement",
																	"src": "7332:34:5"
																}
															]
														}
													},
													"id": 1535,
													"nodeType": "IfStatement",
													"src": "7161:397:5",
													"trueBody": {
														"id": 1495,
														"nodeType": "Block",
														"src": "7204:63:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1490,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "7239:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1491,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "7245:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1492,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "7249:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1489,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7219:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7219:36:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1494,
																"nodeType": "ExpressionStatement",
																"src": "7219:36:5"
															}
														]
													}
												},
												"id": 1536,
												"nodeType": "IfStatement",
												"src": "7047:511:5",
												"trueBody": {
													"id": 1480,
													"nodeType": "Block",
													"src": "7090:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1475,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "7127:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1476,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "7133:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1477,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "7137:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1474,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "7105:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7105:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1479,
															"nodeType": "ExpressionStatement",
															"src": "7105:38:5"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7574:8:5",
													"subExpression": {
														"id": 1537,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "7575:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "7570:56:5",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "7584:42:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1539,
																	"name": "restoreAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "7599:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7599:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "7599:15:5"
														}
													]
												}
											}
										]
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "6848:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6881:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "6873:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6873:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6904:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "6896:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6896:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6925:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "6917:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "6946:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "6941:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6941:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6862:98:5"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6969:0:5"
									},
									"scope": 2139,
									"src": "6839:794:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "7673:207:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1548,
															"name": "_reflectionFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7688:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7688:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1551,
															"name": "_taxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "7711:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7722:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7711:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7688:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1556,
												"nodeType": "IfStatement",
												"src": "7684:48:5",
												"trueBody": {
													"functionReturnParameters": 1547,
													"id": 1555,
													"nodeType": "Return",
													"src": "7725:7:5"
												}
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1557,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "7744:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1558,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "7769:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7744:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "7744:39:5"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1561,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "7794:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1562,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "7812:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7794:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "7794:25:5"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "7832:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7849:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7832:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "7832:18:5"
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1569,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "7861:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7871:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7861:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "7861:11:5"
											}
										]
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "7650:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7662:2:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7673:0:5"
									},
									"scope": 2139,
									"src": "7641:239:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "7921:94:5",
										"statements": [
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1577,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "7932:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1578,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "7949:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7932:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "7932:39:5"
											},
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "7982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1582,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "7992:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7982:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "7982:25:5"
											}
										]
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "7897:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7910:2:5"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7921:0:5"
									},
									"scope": 2139,
									"src": "7888:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "8144:487:5",
										"statements": [
											{
												"assignments": [
													1596,
													1598,
													1600,
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "8178:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "8170:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8170:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "8208:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "8200:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8200:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "8246:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "8238:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8238:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "8284:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "8276:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"arguments": [
														{
															"id": 1604,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "8328:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1603,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "8309:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8309:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8155:181:5"
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1607,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "8349:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1609,
														"indexExpression": {
															"id": 1608,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "8357:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8349:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1610,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "8367:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1612,
															"indexExpression": {
																"id": 1611,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "8375:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8367:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1613,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8385:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8367:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8349:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "8349:43:5"
											},
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1617,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "8403:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1619,
														"indexExpression": {
															"id": 1618,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "8411:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8403:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1620,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "8424:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1622,
															"indexExpression": {
																"id": 1621,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "8432:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8424:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1623,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "8445:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8424:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8403:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "8403:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1628,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "8488:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1629,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "8496:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1630,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "8505:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "8473:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8473:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "8473:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1634,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "8540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1635,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "8549:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "8528:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8528:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "8528:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1639,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "8588:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "8596:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1641,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "8607:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1638,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "8579:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8579:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "EmitStatement",
												"src": "8574:49:5"
											}
										]
									},
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "8032:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8068:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "8060:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8060:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8093:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "8085:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8085:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "8121:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "8113:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8113:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8049:86:5"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8144:0:5"
									},
									"scope": 2139,
									"src": "8023:608:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "8762:553:5",
										"statements": [
											{
												"assignments": [
													1655,
													1657,
													1659,
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "8796:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "8788:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8788:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "8826:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "8818:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "8864:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "8856:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8856:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "8902:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "8894:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8894:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"arguments": [
														{
															"id": 1663,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "8946:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "8927:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8927:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8773:181:5"
											},
											{
												"expression": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1666,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "8965:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1668,
														"indexExpression": {
															"id": 1667,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "8973:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8965:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1669,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "8983:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1671,
															"indexExpression": {
																"id": 1670,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "8991:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8983:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1672,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "9001:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8983:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8965:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "8965:43:5"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1676,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9019:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1678,
														"indexExpression": {
															"id": 1677,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "9027:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9019:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1679,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "9040:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1681,
															"indexExpression": {
																"id": 1680,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "9048:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9040:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1682,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "9061:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9040:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9019:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "9019:57:5"
											},
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1686,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9087:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1688,
														"indexExpression": {
															"id": 1687,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "9095:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9087:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1689,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9108:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1691,
															"indexExpression": {
																"id": 1690,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "9116:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9108:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1692,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "9129:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9108:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9087:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "9087:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1697,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "9172:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "9180:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "9189:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1696,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "9157:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9157:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "9157:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1703,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "9224:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1704,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "9233:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1702,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "9212:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9212:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "9212:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1708,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "9272:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "9280:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "9291:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "9263:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9263:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "EmitStatement",
												"src": "9258:49:5"
											}
										]
									},
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "8648:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8686:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "8678:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8678:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8711:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "8703:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8703:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "8739:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "8731:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8731:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8667:86:5"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8762:0:5"
									},
									"scope": 2139,
									"src": "8639:676:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "9448:539:5",
										"statements": [
											{
												"assignments": [
													1724,
													1726,
													1728,
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9482:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9474:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1723,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9474:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9512:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9504:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9504:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9550:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9542:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9542:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "9588:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "9580:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9580:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"id": 1732,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9632:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1731,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "9613:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9613:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9459:181:5"
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1735,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9651:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1737,
														"indexExpression": {
															"id": 1736,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9659:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9651:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1738,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "9669:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1740,
															"indexExpression": {
																"id": 1739,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "9677:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9669:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1741,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9687:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9669:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9651:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "9651:43:5"
											},
											{
												"expression": {
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1745,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9705:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1747,
														"indexExpression": {
															"id": 1746,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9713:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9705:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1748,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9723:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1750,
															"indexExpression": {
																"id": 1749,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "9731:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9723:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1751,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9723:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9705:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "9705:43:5"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1755,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9759:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1757,
														"indexExpression": {
															"id": 1756,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "9767:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9759:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1758,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9780:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1760,
															"indexExpression": {
																"id": 1759,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "9788:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9780:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1761,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "9801:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9780:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9759:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "9759:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1766,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9844:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1767,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9852:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "9861:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1765,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "9829:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9829:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "9829:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1772,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9896:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1773,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "9905:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1771,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "9884:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9884:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "9884:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1777,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9944:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "9952:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "9963:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "9935:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9935:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "EmitStatement",
												"src": "9930:49:5"
											}
										]
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "9332:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9372:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "9364:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9364:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9397:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "9389:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9425:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "9417:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9353:86:5"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9448:0:5"
									},
									"scope": 2139,
									"src": "9323:664:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "10120:607:5",
										"statements": [
											{
												"assignments": [
													1793,
													1795,
													1797,
													1799
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10154:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "10146:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10146:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "10184:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "10176:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10176:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1797,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10222:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "10214:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10214:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "10260:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "10252:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10252:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"arguments": [
														{
															"id": 1801,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "10304:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1800,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "10285:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10285:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10131:181:5"
											},
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1804,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10323:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1806,
														"indexExpression": {
															"id": 1805,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "10331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10323:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1807,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "10341:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1809,
															"indexExpression": {
																"id": 1808,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "10349:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10341:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1810,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "10359:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10323:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "10323:43:5"
											},
											{
												"expression": {
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1814,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1816,
														"indexExpression": {
															"id": 1815,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "10385:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10377:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1817,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10395:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1819,
															"indexExpression": {
																"id": 1818,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "10403:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10395:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1820,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "10413:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10395:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10377:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1823,
												"nodeType": "ExpressionStatement",
												"src": "10377:43:5"
											},
											{
												"expression": {
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1824,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10431:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1826,
														"indexExpression": {
															"id": 1825,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "10439:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10431:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1827,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "10452:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1829,
															"indexExpression": {
																"id": 1828,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "10460:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10452:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1830,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "10473:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10452:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10431:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1833,
												"nodeType": "ExpressionStatement",
												"src": "10431:57:5"
											},
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1834,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10499:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1836,
														"indexExpression": {
															"id": 1835,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "10507:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10499:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1837,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10520:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1839,
															"indexExpression": {
																"id": 1838,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "10528:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10520:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1840,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "10541:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10520:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10499:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "10499:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1845,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "10584:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1846,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "10592:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1847,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "10601:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1844,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "10569:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10569:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "10569:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1851,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "10636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1852,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "10645:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1850,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "10624:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10624:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "10624:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1856,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "10684:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "10692:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1858,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "10703:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "10675:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10675:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "EmitStatement",
												"src": "10670:49:5"
											}
										]
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "10004:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10044:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "10036:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10036:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10069:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "10061:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10061:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10097:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "10089:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10089:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10025:86:5"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10120:0:5"
									},
									"scope": 2139,
									"src": "9995:732:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "10845:144:5",
										"statements": [
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "allTaxes",
														"nameLocation": "10864:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "10856:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10856:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1874,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1871,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "10875:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1872,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "10892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10875:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10856:43:5"
											},
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "10918:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "10910:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10910:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1877,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "10930:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1878,
																	"name": "allTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "10940:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10930:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1880,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10929:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10952:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "10929:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10910:45:5"
											},
											{
												"expression": {
													"id": 1884,
													"name": "taxValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1876,
													"src": "10973:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1885,
												"nodeType": "Return",
												"src": "10966:15:5"
											}
										]
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCompleteTaxValue",
									"nameLocation": "10744:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10773:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "10765:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10764:17:5"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "10831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10830:9:5"
									},
									"scope": 2139,
									"src": "10735:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "11195:355:5",
										"statements": [
											{
												"assignments": [
													1901
												],
												"declarations": [
													{
														"constant": false,
														"id": 1901,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "11214:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "11206:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1900,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11206:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"arguments": [
														{
															"id": 1903,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "11246:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1902,
														"name": "_getCompleteTaxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "11225:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11225:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11206:48:5"
											},
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "11273:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "11265:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11265:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1908,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "11291:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1909,
														"name": "taxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "11301:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11291:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11265:44:5"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "11328:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "11320:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11320:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1914,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "11342:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11342:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11320:32:5"
											},
											{
												"assignments": [
													1918
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "11371:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "11363:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11363:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1922,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1919,
														"name": "tTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "11389:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1920,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "11407:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11389:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11363:55:5"
											},
											{
												"assignments": [
													1924
												],
												"declarations": [
													{
														"constant": false,
														"id": 1924,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "11437:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "11429:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11429:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1925,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "11447:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1926,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "11457:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11447:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11429:39:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1929,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "11487:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1930,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "11496:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1931,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "11513:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1932,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "11530:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1933,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11486:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1934,
												"nodeType": "Return",
												"src": "11479:63:5"
											}
										]
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTransferValues",
									"nameLocation": "11006:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11033:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11025:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11025:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11024:17:5"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11105:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11127:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11149:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11171:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11171:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11090:99:5"
									},
									"scope": 2139,
									"src": "10997:553:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "11625:188:5",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "11644:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1970,
														"src": "11636:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1951,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1945,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "11652:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1946,
																	"name": "_reflectionFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "11662:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11652:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1948,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11651:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11680:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "11651:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11636:47:5"
											},
											{
												"assignments": [
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "11702:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1970,
														"src": "11694:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11694:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1957,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1954,
														"name": "tFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "11709:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1955,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "11716:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11709:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11694:33:5"
											},
											{
												"expression": {
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1958,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "11740:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1959,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "11750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1960,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "11760:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11750:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11740:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "11740:24:5"
											},
											{
												"expression": {
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1964,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "11775:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1965,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "11788:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1966,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "11801:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11788:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11775:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "11775:30:5"
											}
										]
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "11567:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11587:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "11579:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11579:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "11604:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "11596:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11578:38:5"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11625:0:5"
									},
									"scope": 2139,
									"src": "11558:255:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "11872:110:5",
										"statements": [
											{
												"assignments": [
													1977,
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "11892:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "11884:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11884:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "11909:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "11901:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11901:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1980,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "11920:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11920:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11883:56:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "11957:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1984,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "11967:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11957:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1975,
												"id": 1986,
												"nodeType": "Return",
												"src": "11950:24:5"
											}
										]
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "11830:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11838:2:5"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "11863:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11862:9:5"
									},
									"scope": 2139,
									"src": "11821:161:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "12059:593:5",
										"statements": [
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "12078:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "12070:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12070:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1998,
												"initialValue": {
													"id": 1997,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 827,
													"src": "12088:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12070:25:5"
											},
											{
												"assignments": [
													2000
												],
												"declarations": [
													{
														"constant": false,
														"id": 2000,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "12114:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "12106:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12106:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"initialValue": {
													"id": 2001,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 825,
													"src": "12124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12106:25:5"
											},
											{
												"body": {
													"id": 2055,
													"nodeType": "Block",
													"src": "12191:319:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2014,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "12228:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2018,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2015,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "12236:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2017,
																			"indexExpression": {
																				"id": 2016,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "12246:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12236:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12228:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2019,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "12252:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12228:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2021,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "12280:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2025,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2022,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "12288:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2024,
																			"indexExpression": {
																				"id": 2023,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "12298:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12288:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12280:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2026,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "12304:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12280:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12228:83:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2034,
															"nodeType": "IfStatement",
															"src": "12206:181:5",
															"trueBody": {
																"id": 2033,
																"nodeType": "Block",
																"src": "12327:60:5",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2029,
																					"name": "_rTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "12354:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2030,
																					"name": "_tTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 825,
																					"src": "12363:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2031,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12353:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 1994,
																		"id": 2032,
																		"nodeType": "Return",
																		"src": "12346:25:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2035,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "12401:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2036,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "12411:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2037,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "12421:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2041,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2038,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "12429:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2040,
																			"indexExpression": {
																				"id": 2039,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "12439:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12429:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12421:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12411:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12401:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2044,
															"nodeType": "ExpressionStatement",
															"src": "12401:41:5"
														},
														{
															"expression": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2045,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "12457:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2046,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "12467:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2047,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "12477:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2051,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2048,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "12485:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2050,
																			"indexExpression": {
																				"id": 2049,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "12495:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12485:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12477:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12467:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12457:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "12457:41:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "12164:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2008,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "12168:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12178:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12168:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12164:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"initializationExpression": {
													"assignments": [
														2004
													],
													"declarations": [
														{
															"constant": false,
															"id": 2004,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12157:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 2056,
															"src": "12149:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2003,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12149:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2006,
													"initialValue": {
														"hexValue": "30",
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12161:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12149:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12186:3:5",
														"subExpression": {
															"id": 2011,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "12186:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2013,
													"nodeType": "ExpressionStatement",
													"src": "12186:3:5"
												},
												"nodeType": "ForStatement",
												"src": "12144:366:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2057,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "12526:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2058,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "12536:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2059,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "12546:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12536:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12526:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2067,
												"nodeType": "IfStatement",
												"src": "12522:85:5",
												"trueBody": {
													"id": 2066,
													"nodeType": "Block",
													"src": "12555:52:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 2062,
																		"name": "_rTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "12578:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2063,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "12587:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12577:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 1994,
															"id": 2065,
															"nodeType": "Return",
															"src": "12570:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2068,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "12627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2069,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "12636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2070,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12626:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2071,
												"nodeType": "Return",
												"src": "12619:25:5"
											}
										]
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "11999:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12016:2:5"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "12041:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "12050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12040:18:5"
									},
									"scope": 2139,
									"src": "11990:662:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "12780:489:5",
										"statements": [
											{
												"assignments": [
													2083
												],
												"declarations": [
													{
														"constant": false,
														"id": 2083,
														"mutability": "mutable",
														"name": "tTaxFee",
														"nameLocation": "12799:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "12791:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12791:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2084,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "12810:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2085,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "12820:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12810:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2087,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12809:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12831:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "12809:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12791:43:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2091,
														"name": "tTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "12849:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12859:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12849:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2136,
												"nodeType": "IfStatement",
												"src": "12845:417:5",
												"trueBody": {
													"id": 2135,
													"nodeType": "Block",
													"src": "12862:400:5",
													"statements": [
														{
															"assignments": [
																2095
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2095,
																	"mutability": "mutable",
																	"name": "rTaxFee",
																	"nameLocation": "12885:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2135,
																	"src": "12877:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12877:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2102,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2096,
																				"name": "tTaxFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2083,
																				"src": "12896:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2097,
																				"name": "currentRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2079,
																				"src": "12906:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12896:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2099,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12895:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12921:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12895:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12877:45:5"
														},
														{
															"expression": {
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2103,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "12937:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2105,
																	"indexExpression": {
																		"id": 2104,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "12945:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12937:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2106,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "12966:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2108,
																		"indexExpression": {
																			"id": 2107,
																			"name": "_marketingAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "12974:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12966:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2109,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "12995:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12966:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12937:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2112,
															"nodeType": "ExpressionStatement",
															"src": "12937:65:5"
														},
														{
															"expression": {
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2113,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "13017:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2115,
																	"indexExpression": {
																		"id": 2114,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "13025:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13017:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2116,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "13065:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2118,
																		"indexExpression": {
																			"id": 2117,
																			"name": "_developmentAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "13073:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13065:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2119,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "13113:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13065:55:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13017:103:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2122,
															"nodeType": "ExpressionStatement",
															"src": "13017:103:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2124,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "13149:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2125,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "13157:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2126,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "13176:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2123,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "13140:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13140:44:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2128,
															"nodeType": "EmitStatement",
															"src": "13135:49:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2130,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "13213:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2131,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "13221:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2132,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "13242:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2129,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "13204:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13204:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2134,
															"nodeType": "EmitStatement",
															"src": "13199:51:5"
														}
													]
												}
											}
										]
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxFeeTransfer",
									"nameLocation": "12669:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12702:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "12694:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "12727:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "12719:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "12753:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "12745:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12745:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12683:88:5"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12780:0:5"
									},
									"scope": 2139,
									"src": "12660:609:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2140,
							"src": "133:13139:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "35:13239:5"
				},
				"id": 5
			}
		}
	}
}